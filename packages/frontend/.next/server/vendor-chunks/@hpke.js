"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@hpke";
exports.ids = ["vendor-chunks/@hpke"];
exports.modules = {

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/mod.js":
/*!*************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/mod.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chacha20Poly1305: () => (/* reexport safe */ _src_chacha20Poly1305_js__WEBPACK_IMPORTED_MODULE_0__.Chacha20Poly1305)\n/* harmony export */ });\n/* harmony import */ var _src_chacha20Poly1305_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/chacha20Poly1305.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha20Poly1305.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jaGFjaGEyMHBvbHkxMzA1L2VzbS9tb2QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY2hhY2hhMjBwb2x5MTMwNS9lc20vbW9kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IENoYWNoYTIwUG9seTEzMDUgfSBmcm9tIFwiLi9zcmMvY2hhY2hhMjBQb2x5MTMwNS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/mod.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_arx.js":
/*!*************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_arx.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCipher: () => (/* binding */ createCipher),\n/* harmony export */   rotl: () => (/* binding */ rotl)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js\");\n/**\n * This file is based on noble-ciphers (https://github.com/paulmillr/noble-ciphers).\n *\n * noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-ciphers/blob/749cdf9cd07ebdd19e9b957d0f172f1045179695/src/_arx.ts\n */\n/**\n * Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\n\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | cnt(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | cnt(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | cnt(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n\n * @module\n */\n\n// Can't use similar utils.utf8ToBytes, because it uses `TextEncoder` - not available in all envs\nconst _utf8ToBytes = (str) => Uint8Array.from(str.split(\"\").map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes(\"expand 16-byte k\");\nconst sigma32 = _utf8ToBytes(\"expand 32-byte k\");\nconst sigma16_32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(sigma16);\nconst sigma32_32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(sigma32);\n/** Rotate left. */\nfunction rotl(a, b) {\n    return (a << b) | (a >>> (32 - b));\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b) {\n    return b.byteOffset % 4 === 0;\n}\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\nconst U32_EMPTY = Uint32Array.of();\nfunction runCipher(core, sigma, key, nonce, data, output, counter, rounds) {\n    const len = data.length;\n    const block = new Uint8Array(BLOCK_LEN);\n    const b32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(block);\n    // Make sure that buffers aligned to 4 bytes\n    const isAligned = isAligned32(data) && isAligned32(output);\n    const d32 = isAligned ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(data) : U32_EMPTY;\n    const o32 = isAligned ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(output) : U32_EMPTY;\n    for (let pos = 0; pos < len; counter++) {\n        core(sigma, key, nonce, b32, counter, rounds);\n        if (counter >= MAX_COUNTER)\n            throw new Error(\"arx: counter overflow\");\n        const take = Math.min(BLOCK_LEN, len - pos);\n        // aligned to 4 bytes\n        if (isAligned && take === BLOCK_LEN) {\n            const pos32 = pos / 4;\n            if (pos % 4 !== 0)\n                throw new Error(\"arx: invalid block position\");\n            for (let j = 0, posj; j < BLOCK_LEN32; j++) {\n                posj = pos32 + j;\n                o32[posj] = d32[posj] ^ b32[j];\n            }\n            pos += BLOCK_LEN;\n            continue;\n        }\n        for (let j = 0, posj; j < take; j++) {\n            posj = pos + j;\n            output[posj] = data[posj] ^ block[j];\n        }\n        pos += take;\n    }\n}\n/** Creates ARX-like (ChaCha, Salsa) cipher stream from core function. */\nfunction createCipher(core, opts) {\n    const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.checkOpts)({\n        allowShortKeys: false,\n        counterLength: 8,\n        counterRight: false,\n        rounds: 20,\n    }, opts);\n    if (typeof core !== \"function\")\n        throw new Error(\"core must be a function\");\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(counterLength);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(rounds);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)(counterRight);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abool)(allowShortKeys);\n    return (key, nonce, data, output, counter = 0) => {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(key, undefined, \"key\");\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(nonce, undefined, \"nonce\");\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(data, undefined, \"data\");\n        const len = data.length;\n        if (output === undefined)\n            output = new Uint8Array(len);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(output, undefined, \"output\");\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.anumber)(counter);\n        if (counter < 0 || counter >= MAX_COUNTER) {\n            throw new Error(\"arx: counter overflow\");\n        }\n        if (output.length < len) {\n            throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n        }\n        const toClean = [];\n        // Key & sigma\n        // key=16 -> sigma16, k=key|key\n        // key=32 -> sigma32, k=key\n        const l = key.length;\n        let k;\n        let sigma;\n        if (l === 32) {\n            toClean.push(k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)(key));\n            sigma = sigma32_32;\n        }\n        else if (l === 16 && allowShortKeys) {\n            k = new Uint8Array(32);\n            k.set(key);\n            k.set(key, 16);\n            sigma = sigma16_32;\n            toClean.push(k);\n        }\n        else {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(key, 32, \"arx key\");\n            throw new Error(\"invalid key size\");\n            // throw new Error(`\"arx key\" expected Uint8Array of length 32, got length=${l}`);\n        }\n        // Nonce\n        // salsa20:      8   (8-byte counter)\n        // chacha20orig: 8   (8-byte counter)\n        // chacha20:     12  (4-byte counter)\n        // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n        // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n        // Align nonce to 4 bytes\n        if (!isAligned32(nonce))\n            toClean.push(nonce = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)(nonce));\n        const k32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(k);\n        // hsalsa & hchacha: handle extended nonce\n        if (extendNonceFn) {\n            if (nonce.length !== 24) {\n                throw new Error(`arx: extended nonce must be 24 bytes`);\n            }\n            extendNonceFn(sigma, k32, (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(nonce.subarray(0, 16)), k32);\n            nonce = nonce.subarray(16);\n        }\n        // Handle nonce counter\n        const nonceNcLen = 16 - counterLength;\n        if (nonceNcLen !== nonce.length) {\n            throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n        }\n        // Pad counter when nonce is 64 bit\n        if (nonceNcLen !== 12) {\n            const nc = new Uint8Array(12);\n            nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n            nonce = nc;\n            toClean.push(nonce);\n        }\n        const n32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(nonce);\n        runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clean)(...toClean);\n        return output;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_arx.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_poly1305.js":
/*!******************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_poly1305.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Poly1305: () => (/* binding */ Poly1305),\n/* harmony export */   poly1305: () => (/* binding */ poly1305),\n/* harmony export */   wrapConstructorWithKey: () => (/* binding */ wrapConstructorWithKey)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js\");\n/**\n * This file is based on noble-ciphers (https://github.com/paulmillr/noble-ciphers).\n *\n * noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-ciphers/blob/749cdf9cd07ebdd19e9b957d0f172f1045179695/src/_poly1305.ts\n */\n/**\n * Poly1305 ([PDF](https://cr.yp.to/mac/poly1305-20050329.pdf),\n * [wiki](https://en.wikipedia.org/wiki/Poly1305))\n * is a fast and parallel secret-key message-authentication code suitable for\n * a wide variety of applications. It was standardized in\n * [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and is now used in TLS 1.3.\n *\n * Polynomial MACs are not perfect for every situation:\n * they lack Random Key Robustness: the MAC can be forged, and can't be used in PAKE schemes.\n * See [invisible salamanders attack](https://keymaterial.net/2020/09/07/invisible-salamanders-in-aes-gcm-siv/).\n * To combat invisible salamanders, `hash(key)` can be included in ciphertext,\n * however, this would violate ciphertext indistinguishability:\n * an attacker would know which key was used - so `HKDF(key, i)`\n * could be used instead.\n *\n * Check out [original website](https://cr.yp.to/mac.html).\n * Based on Public Domain [poly1305-donna](https://github.com/floodyberry/poly1305-donna).\n * @module\n */\n// prettier-ignore\n\nfunction u8to16(a, i) {\n    return (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\n}\n// function bytesToNumberLE(bytes: Uint8Array): bigint {\n//   return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n// }\n// /** Small version of `poly1305` without loop unrolling. Unused, provided for auditability. */\n// function poly1305_small(msg: Uint8Array, key: Uint8Array): Uint8Array {\n//   abytes(msg);\n//   abytes(key, 32, \"key\");\n//   const POW_2_130_5 = BigInt(2) ** BigInt(130) - BigInt(5); // 2^130-5\n//   const POW_2_128_1 = BigInt(2) ** BigInt(128) - BigInt(1); // 2^128-1\n//   const CLAMP_R = BigInt(\"0x0ffffffc0ffffffc0ffffffc0fffffff\");\n//   const r = bytesToNumberLE(key.subarray(0, 16)) & CLAMP_R;\n//   const s = bytesToNumberLE(key.subarray(16));\n//   // Process by 16 byte chunks\n//   let acc = BigInt(0);\n//   for (let i = 0; i < msg.length; i += 16) {\n//     const m = msg.subarray(i, i + 16);\n//     const n = bytesToNumberLE(m) | (BigInt(1) << BigInt(8 * m.length));\n//     acc = ((acc + n) * r) % POW_2_130_5;\n//   }\n//   const res = (acc + s) & POW_2_128_1;\n//   return numberToBytesBE(res, 16).reverse(); // LE\n// }\n// Can be used to replace `computeTag` in chacha.ts. Unused, provided for auditability.\n// function poly1305_computeTag_small(\n//   authKey: Uint8Array,\n//   lengths: Uint8Array,\n//   ciphertext: Uint8Array,\n//   AAD?: Uint8Array,\n// ): Uint8Array {\n//   const res = [];\n//   const updatePadded2 = (msg: Uint8Array) => {\n//     res.push(msg);\n//     const leftover = msg.length % 16;\n//     if (leftover) res.push(new Uint8Array(16).slice(leftover));\n//   };\n//   if (AAD) updatePadded2(AAD);\n//   updatePadded2(ciphertext);\n//   res.push(lengths);\n//   return poly1305_small(concatBytes(...res), authKey);\n// }\n/** Poly1305 class. Prefer poly1305() function instead. */\nclass Poly1305 {\n    // Can be speed-up using BigUint64Array, at the cost of complexity\n    constructor(key) {\n        Object.defineProperty(this, \"blockLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n        Object.defineProperty(this, \"outputLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Uint8Array(16)\n        });\n        Object.defineProperty(this, \"r\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Uint16Array(10)\n        }); // Allocating 1 array with .subarray() here is slower than 3\n        Object.defineProperty(this, \"h\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Uint16Array(10)\n        });\n        Object.defineProperty(this, \"pad\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Uint16Array(8)\n        });\n        Object.defineProperty(this, \"pos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"finished\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(key, 32, \"key\"));\n        const t0 = u8to16(key, 0);\n        const t1 = u8to16(key, 2);\n        const t2 = u8to16(key, 4);\n        const t3 = u8to16(key, 6);\n        const t4 = u8to16(key, 8);\n        const t5 = u8to16(key, 10);\n        const t6 = u8to16(key, 12);\n        const t7 = u8to16(key, 14);\n        // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n        this.r[0] = t0 & 0x1fff;\n        this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this.r[5] = (t4 >>> 1) & 0x1ffe;\n        this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this.r[9] = (t7 >>> 5) & 0x007f;\n        for (let i = 0; i < 8; i++)\n            this.pad[i] = u8to16(key, 16 + 2 * i);\n    }\n    process(data, offset, isLast = false) {\n        const hibit = isLast ? 0 : 1 << 11;\n        const { h, r } = this;\n        const r0 = r[0];\n        const r1 = r[1];\n        const r2 = r[2];\n        const r3 = r[3];\n        const r4 = r[4];\n        const r5 = r[5];\n        const r6 = r[6];\n        const r7 = r[7];\n        const r8 = r[8];\n        const r9 = r[9];\n        const t0 = u8to16(data, offset + 0);\n        const t1 = u8to16(data, offset + 2);\n        const t2 = u8to16(data, offset + 4);\n        const t3 = u8to16(data, offset + 6);\n        const t4 = u8to16(data, offset + 8);\n        const t5 = u8to16(data, offset + 10);\n        const t6 = u8to16(data, offset + 12);\n        const t7 = u8to16(data, offset + 14);\n        const h0 = h[0] + (t0 & 0x1fff);\n        const h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n        const h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n        const h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n        const h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n        const h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n        const h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n        const h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n        const h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n        const h9 = h[9] + ((t7 >>> 5) | hibit);\n        let c = 0;\n        let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) +\n            h4 * (5 * r6);\n        c = d0 >>> 13;\n        d0 &= 0x1fff;\n        d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) +\n            h9 * (5 * r1);\n        c += d0 >>> 13;\n        d0 &= 0x1fff;\n        let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) +\n            h4 * (5 * r7);\n        c = d1 >>> 13;\n        d1 &= 0x1fff;\n        d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) +\n            h9 * (5 * r2);\n        c += d1 >>> 13;\n        d1 &= 0x1fff;\n        let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n        c = d2 >>> 13;\n        d2 &= 0x1fff;\n        d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) +\n            h9 * (5 * r3);\n        c += d2 >>> 13;\n        d2 &= 0x1fff;\n        let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n        c = d3 >>> 13;\n        d3 &= 0x1fff;\n        d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) +\n            h9 * (5 * r4);\n        c += d3 >>> 13;\n        d3 &= 0x1fff;\n        let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n        c = d4 >>> 13;\n        d4 &= 0x1fff;\n        d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) +\n            h9 * (5 * r5);\n        c += d4 >>> 13;\n        d4 &= 0x1fff;\n        let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n        c = d5 >>> 13;\n        d5 &= 0x1fff;\n        d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) +\n            h9 * (5 * r6);\n        c += d5 >>> 13;\n        d5 &= 0x1fff;\n        let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n        c = d6 >>> 13;\n        d6 &= 0x1fff;\n        d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n        c += d6 >>> 13;\n        d6 &= 0x1fff;\n        let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n        c = d7 >>> 13;\n        d7 &= 0x1fff;\n        d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n        c += d7 >>> 13;\n        d7 &= 0x1fff;\n        let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n        c = d8 >>> 13;\n        d8 &= 0x1fff;\n        d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n        c += d8 >>> 13;\n        d8 &= 0x1fff;\n        let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n        c = d9 >>> 13;\n        d9 &= 0x1fff;\n        d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n        c += d9 >>> 13;\n        d9 &= 0x1fff;\n        c = ((c << 2) + c) | 0;\n        c = (c + d0) | 0;\n        d0 = c & 0x1fff;\n        c = c >>> 13;\n        d1 += c;\n        h[0] = d0;\n        h[1] = d1;\n        h[2] = d2;\n        h[3] = d3;\n        h[4] = d4;\n        h[5] = d5;\n        h[6] = d6;\n        h[7] = d7;\n        h[8] = d8;\n        h[9] = d9;\n    }\n    finalize() {\n        const { h, pad } = this;\n        const g = new Uint16Array(10);\n        let c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        for (let i = 2; i < 10; i++) {\n            h[i] += c;\n            c = h[i] >>> 13;\n            h[i] &= 0x1fff;\n        }\n        h[0] += c * 5;\n        c = h[0] >>> 13;\n        h[0] &= 0x1fff;\n        h[1] += c;\n        c = h[1] >>> 13;\n        h[1] &= 0x1fff;\n        h[2] += c;\n        g[0] = h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (let i = 1; i < 10; i++) {\n            g[i] = h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= 1 << 13;\n        let mask = (c ^ 1) - 1;\n        for (let i = 0; i < 10; i++)\n            g[i] &= mask;\n        mask = ~mask;\n        for (let i = 0; i < 10; i++)\n            h[i] = (h[i] & mask) | g[i];\n        h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n        h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n        h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n        h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n        h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n        h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n        h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n        h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n        let f = h[0] + pad[0];\n        h[0] = f & 0xffff;\n        for (let i = 1; i < 8; i++) {\n            f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n            h[i] = f & 0xffff;\n        }\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clean)(g);\n    }\n    update(data) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(data);\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)(data);\n        const { buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input\n            if (take === blockLen) {\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(data, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(buffer, 0, false);\n                this.pos = 0;\n            }\n        }\n        return this;\n    }\n    destroy() {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clean)(this.h, this.r, this.buffer, this.pad);\n    }\n    digestInto(out) {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.aoutput)(out, this);\n        this.finished = true;\n        const { buffer, h } = this;\n        let { pos } = this;\n        if (pos) {\n            buffer[pos++] = 1;\n            for (; pos < 16; pos++)\n                buffer[pos] = 0;\n            this.process(buffer, 0, true);\n        }\n        this.finalize();\n        let opos = 0;\n        for (let i = 0; i < 8; i++) {\n            out[opos++] = h[i] >>> 0;\n            out[opos++] = h[i] >>> 8;\n        }\n        return out;\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n}\nfunction wrapConstructorWithKey(hashCons) {\n    const hashC = (msg, key) => hashCons(key).update(msg).digest();\n    const tmp = hashCons(new Uint8Array(32)); // tmp array, used just once below\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (key) => hashCons(key);\n    return hashC;\n}\n/** Poly1305 MAC from RFC 8439. */\nconst poly1305 = \n/** @__PURE__ */ (() => wrapConstructorWithKey((key) => new Poly1305(key)))();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_poly1305.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/chacha.js":
/*!***************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/chacha.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _poly1305_aead: () => (/* binding */ _poly1305_aead),\n/* harmony export */   chacha20: () => (/* binding */ chacha20),\n/* harmony export */   chacha20poly1305: () => (/* binding */ chacha20poly1305)\n/* harmony export */ });\n/* harmony import */ var _arx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_arx.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_arx.js\");\n/* harmony import */ var _poly1305_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_poly1305.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/_poly1305.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js\");\n/**\n * This file is based on noble-ciphers (https://github.com/paulmillr/noble-ciphers).\n *\n * noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-ciphers/blob/749cdf9cd07ebdd19e9b957d0f172f1045179695/src/chacha.ts\n */\n/**\n * ChaCha stream cipher, released\n * in 2008. Developed after Salsa20, ChaCha aims to increase diffusion per round.\n * It was standardized in [RFC 8439](https://www.rfc-editor.org/rfc/rfc8439) and\n * is now used in TLS 1.3.\n *\n * [XChaCha20](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha)\n * extended-nonce variant is also provided. Similar to XSalsa, it's safe to use with\n * randomly-generated nonces.\n *\n * Check out [PDF](http://cr.yp.to/chacha/chacha-20080128.pdf) and\n * [wiki](https://en.wikipedia.org/wiki/Salsa20) and\n * [website](https://cr.yp.to/chacha.html).\n *\n * @module\n */\n\n\n\n/**\n * ChaCha core function. It is implemented twice:\n * 1. Simple loop (chachaCore_small, hchacha_small)\n * 2. Unrolled loop (chachaCore, hchacha) - 4x faster, but larger & harder to read\n * The specific implementation is selected in `createCipher` below.\n */\nfunction chachaCore(s, k, n, out, cnt, rounds = 20) {\n    const y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n    y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n    y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n    y12 = cnt, y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n    // Save state to temporary variables\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let r = 0; r < rounds; r += 2) {\n        x00 = (x00 + x04) | 0;\n        x12 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 ^ x00, 16);\n        x08 = (x08 + x12) | 0;\n        x04 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 ^ x08, 12);\n        x00 = (x00 + x04) | 0;\n        x12 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 ^ x00, 8);\n        x08 = (x08 + x12) | 0;\n        x04 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 ^ x08, 7);\n        x01 = (x01 + x05) | 0;\n        x13 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 ^ x01, 16);\n        x09 = (x09 + x13) | 0;\n        x05 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 ^ x09, 12);\n        x01 = (x01 + x05) | 0;\n        x13 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 ^ x01, 8);\n        x09 = (x09 + x13) | 0;\n        x05 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 ^ x09, 7);\n        x02 = (x02 + x06) | 0;\n        x14 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 ^ x02, 16);\n        x10 = (x10 + x14) | 0;\n        x06 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 ^ x10, 12);\n        x02 = (x02 + x06) | 0;\n        x14 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 ^ x02, 8);\n        x10 = (x10 + x14) | 0;\n        x06 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 ^ x10, 7);\n        x03 = (x03 + x07) | 0;\n        x15 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 ^ x03, 16);\n        x11 = (x11 + x15) | 0;\n        x07 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 ^ x11, 12);\n        x03 = (x03 + x07) | 0;\n        x15 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 ^ x03, 8);\n        x11 = (x11 + x15) | 0;\n        x07 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 ^ x11, 7);\n        x00 = (x00 + x05) | 0;\n        x15 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 ^ x00, 16);\n        x10 = (x10 + x15) | 0;\n        x05 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 ^ x10, 12);\n        x00 = (x00 + x05) | 0;\n        x15 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x15 ^ x00, 8);\n        x10 = (x10 + x15) | 0;\n        x05 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x05 ^ x10, 7);\n        x01 = (x01 + x06) | 0;\n        x12 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 ^ x01, 16);\n        x11 = (x11 + x12) | 0;\n        x06 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 ^ x11, 12);\n        x01 = (x01 + x06) | 0;\n        x12 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x12 ^ x01, 8);\n        x11 = (x11 + x12) | 0;\n        x06 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x06 ^ x11, 7);\n        x02 = (x02 + x07) | 0;\n        x13 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 ^ x02, 16);\n        x08 = (x08 + x13) | 0;\n        x07 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 ^ x08, 12);\n        x02 = (x02 + x07) | 0;\n        x13 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x13 ^ x02, 8);\n        x08 = (x08 + x13) | 0;\n        x07 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x07 ^ x08, 7);\n        x03 = (x03 + x04) | 0;\n        x14 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 ^ x03, 16);\n        x09 = (x09 + x14) | 0;\n        x04 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 ^ x09, 12);\n        x03 = (x03 + x04) | 0;\n        x14 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x14 ^ x03, 8);\n        x09 = (x09 + x14) | 0;\n        x04 = (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.rotl)(x04 ^ x09, 7);\n    }\n    // Write output\n    let oi = 0;\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With smaller nonce, it's not safe to make it random (CSPRNG), due to collision chance.\n */\nconst chacha20 = /* @__PURE__ */ (0,_arx_js__WEBPACK_IMPORTED_MODULE_0__.createCipher)(chachaCore, {\n    counterRight: false,\n    counterLength: 4,\n    allowShortKeys: false,\n});\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h, msg) => {\n    h.update(msg);\n    const leftover = msg.length % 16;\n    if (leftover)\n        h.update(ZEROS16.subarray(leftover));\n};\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(fn, key, nonce, ciphertext, AAD) {\n    if (AAD !== undefined)\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.abytes)(AAD, undefined, \"AAD\");\n    const authKey = fn(key, nonce, ZEROS32);\n    const lengths = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u64Lengths)(ciphertext.length, AAD ? AAD.length : 0, true);\n    // Methods below can be replaced with\n    // return poly1305_computeTag_small(authKey, lengths, ciphertext, AAD)\n    const h = _poly1305_js__WEBPACK_IMPORTED_MODULE_1__.poly1305.create(authKey);\n    if (AAD)\n        updatePadded(h, AAD);\n    updatePadded(h, ciphertext);\n    h.update(lengths);\n    const res = h.digest();\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.clean)(authKey, lengths);\n    return res;\n}\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them, but it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nconst _poly1305_aead = (xorStream) => (key, nonce, AAD) => {\n    const tagLength = 16;\n    return {\n        encrypt(plaintext, output) {\n            const plength = plaintext.length;\n            output = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getOutput)(plength + tagLength, output, false);\n            output.set(plaintext);\n            const oPlain = output.subarray(0, -tagLength);\n            // Actual encryption\n            xorStream(key, nonce, oPlain, oPlain, 1);\n            const tag = computeTag(xorStream, key, nonce, oPlain, AAD);\n            output.set(tag, plength); // append tag\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.clean)(tag);\n            return output;\n        },\n        decrypt(ciphertext, output) {\n            output = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getOutput)(ciphertext.length - tagLength, output, false);\n            const data = ciphertext.subarray(0, -tagLength);\n            const passedTag = ciphertext.subarray(-tagLength);\n            const tag = computeTag(xorStream, key, nonce, data, AAD);\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.equalBytes)(passedTag, tag))\n                throw new Error(\"invalid tag\");\n            output.set(ciphertext.subarray(0, -tagLength));\n            // Actual decryption\n            xorStream(key, nonce, output, output, 1); // start stream with i=1\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.clean)(tag);\n            return output;\n        },\n    };\n};\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n *\n * Unsafe to use random nonces under the same key, due to collision chance.\n * Prefer XChaCha instead.\n */\nconst chacha20poly1305 = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapCipher)({ blockSize: 64, nonceLength: 12, tagLength: 16 }, _poly1305_aead(chacha20));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/chacha.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js":
/*!**************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abool: () => (/* binding */ abool),\n/* harmony export */   abytes: () => (/* binding */ abytes),\n/* harmony export */   aexists: () => (/* binding */ aexists),\n/* harmony export */   anumber: () => (/* binding */ anumber),\n/* harmony export */   aoutput: () => (/* binding */ aoutput),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToNumberBE: () => (/* binding */ bytesToNumberBE),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   clean: () => (/* binding */ clean),\n/* harmony export */   complexOverlapBytes: () => (/* binding */ complexOverlapBytes),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   copyBytes: () => (/* binding */ copyBytes),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   equalBytes: () => (/* binding */ equalBytes),\n/* harmony export */   getOutput: () => (/* binding */ getOutput),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   isAligned32: () => (/* binding */ isAligned32),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   numberToBytesBE: () => (/* binding */ numberToBytesBE),\n/* harmony export */   overlapBytes: () => (/* binding */ overlapBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u64Lengths: () => (/* binding */ u64Lengths),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapCipher: () => (/* binding */ wrapCipher)\n/* harmony export */ });\n/**\n * This file is based on noble-ciphers (https://github.com/paulmillr/noble-ciphers).\n *\n * noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-ciphers/blob/749cdf9cd07ebdd19e9b957d0f172f1045179695/src/utils.ts\n */\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array ||\n        (ArrayBuffer.isView(a) && a.constructor.name === \"Uint8Array\");\n}\n/** Asserts something is boolean. */\nfunction abool(b) {\n    if (typeof b !== \"boolean\")\n        throw new Error(`boolean expected, not ${b}`);\n}\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0) {\n        throw new Error(\"positive integer expected, got \" + n);\n    }\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(value, length, title = \"\") {\n    const bytes = isBytes(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : \"\";\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + \"expected Uint8Array\" + ofLen + \", got \" + got);\n    }\n    return value;\n}\n/** Asserts a hash instance has not been destroyed / finished */\n// deno-lint-ignore no-explicit-any\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error(\"Hash instance has been destroyed\");\n    if (checkFinished && instance.finished) {\n        throw new Error(\"Hash#digest() has already been called\");\n    }\n}\n/** Asserts output is properly-sized byte array */\n// deno-lint-ignore no-explicit-any\nfunction aoutput(out, instance) {\n    abytes(out, undefined, \"output\");\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(\"digestInto() expects output buffer of length at least \" + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nfunction u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nfunction u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nfunction clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nconst isLE = \n/* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore: to use toHex\ntypeof Uint8Array.from([]).toHex === \"function\" &&\n    // @ts-ignore: to use fromHex\n    typeof Uint8Array.fromHex === \"function\")();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, \"0\"));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore: to use toHex\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== \"string\") {\n        throw new Error(\"hex string expected, got \" + typeof hex);\n    }\n    // @ts-ignore: to use fromHex\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2) {\n        throw new Error(\"hex string expected, got unpadded hex of length \" + hl);\n    }\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' +\n                hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// Used in micro\nfunction hexToNumber(hex) {\n    if (typeof hex !== \"string\") {\n        throw new Error(\"hex string expected, got \" + typeof hex);\n    }\n    return BigInt(hex === \"\" ? \"0\" : \"0x\" + hex); // Big Endian\n}\n// Used in ff1\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\n// Used in micro, ff1\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, \"0\"));\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== \"string\")\n        throw new Error(\"string expected\");\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Checks if two U8A use same underlying buffer and overlaps.\n * This is invalid and can corrupt data.\n */\nfunction overlapBytes(a, b) {\n    return (a.buffer === b.buffer && // best we can do, may fail with an obscure Proxy\n        a.byteOffset < b.byteOffset + b.byteLength && // a starts before b end\n        b.byteOffset < a.byteOffset + a.byteLength // b starts before a end\n    );\n}\n/**\n * If input and output overlap and input starts before output, we will overwrite end of input before\n * we start processing it, so this is not supported for most ciphers (except chacha/salse, which designed with this)\n */\nfunction complexOverlapBytes(input, output) {\n    // This is very cursed. It works somehow, but I'm completely unsure,\n    // reasoning about overlapping aligned windows is very hard.\n    if (overlapBytes(input, output) && input.byteOffset < output.byteOffset) {\n        throw new Error(\"complex overlap of input and output is not supported\");\n    }\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nfunction checkOpts(defaults, opts) {\n    if (opts == null || typeof opts !== \"object\") {\n        throw new Error(\"options must be defined\");\n    }\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Compares 2 uint8array-s in kinda constant time. */\nfunction equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * Wraps a cipher: validates args, ensures encrypt() can only be called once.\n * @__NO_SIDE_EFFECTS__\n */\n// deno-lint-ignore no-explicit-any\nconst wrapCipher = (params, constructor) => {\n    // deno-lint-ignore no-explicit-any\n    function wrappedCipher(key, ...args) {\n        // Validate key\n        abytes(key, undefined, \"key\");\n        // Big-Endian hardware is rare. Just in case someone still decides to run ciphers:\n        if (!isLE) {\n            throw new Error(\"Non little-endian hardware is not yet supported\");\n        }\n        // Validate nonce if nonceLength is present\n        if (params.nonceLength !== undefined) {\n            const nonce = args[0];\n            abytes(nonce, params.varSizeNonce ? undefined : params.nonceLength, \"nonce\");\n        }\n        // Validate AAD if tagLength present\n        const tagl = params.tagLength;\n        if (tagl && args[1] !== undefined)\n            abytes(args[1], undefined, \"AAD\");\n        const cipher = constructor(key, ...args);\n        const checkOutput = (fnLength, output) => {\n            if (output !== undefined) {\n                if (fnLength !== 2)\n                    throw new Error(\"cipher output not supported\");\n                abytes(output, undefined, \"output\");\n            }\n        };\n        // Create wrapped cipher with validation and single-use encryption\n        let called = false;\n        const wrCipher = {\n            encrypt(data, output) {\n                if (called) {\n                    throw new Error(\"cannot encrypt() twice with same key + nonce\");\n                }\n                called = true;\n                abytes(data);\n                checkOutput(cipher.encrypt.length, output);\n                return cipher.encrypt(data, output);\n            },\n            decrypt(data, output) {\n                abytes(data);\n                if (tagl && data.length < tagl) {\n                    throw new Error('\"ciphertext\" expected length bigger than tagLength=' + tagl);\n                }\n                checkOutput(cipher.decrypt.length, output);\n                return cipher.decrypt(data, output);\n            },\n        };\n        return wrCipher;\n    }\n    Object.assign(wrappedCipher, params);\n    return wrappedCipher;\n};\n/**\n * By default, returns u8a of length.\n * When out is available, it checks it for validity and uses it.\n */\nfunction getOutput(expectedLength, out, onlyAligned = true) {\n    if (out === undefined)\n        return new Uint8Array(expectedLength);\n    if (out.length !== expectedLength) {\n        throw new Error('\"output\" expected Uint8Array of length ' + expectedLength + \", got: \" +\n            out.length);\n    }\n    if (onlyAligned && !isAligned32(out)) {\n        throw new Error(\"invalid output, must be aligned\");\n    }\n    return out;\n}\nfunction u64Lengths(dataLength, aadLength, isLE) {\n    abool(isLE);\n    const num = new Uint8Array(16);\n    const view = createView(num);\n    view.setBigUint64(0, BigInt(aadLength), isLE);\n    view.setBigUint64(8, BigInt(dataLength), isLE);\n    return num;\n}\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(bytes) {\n    return bytes.byteOffset % 4 === 0;\n}\n// copy bytes to new u8a (aligned). Because Buffer.slice is broken.\nfunction copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jaGFjaGEyMHBvbHkxMzA1L2VzbS9zcmMvY2hhY2hhL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsaURBQWlELEVBQUU7QUFDbkQ7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsTUFBTTtBQUMxQywrQ0FBK0MsT0FBTztBQUN0RCxzQ0FBc0MsSUFBSSxZQUFZLGFBQWE7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxhQUFhO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLHFDQUFxQztBQUNyQztBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixTQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY2hhY2hhMjBwb2x5MTMwNS9lc20vc3JjL2NoYWNoYS91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBpcyBiYXNlZCBvbiBub2JsZS1jaXBoZXJzIChodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL25vYmxlLWNpcGhlcnMpLlxuICpcbiAqIG5vYmxlLWNpcGhlcnMgLSBNSVQgTGljZW5zZSAoYykgMjAyMyBQYXVsIE1pbGxlciAocGF1bG1pbGxyLmNvbSlcbiAqXG4gKiBUaGUgb3JpZ2luYWwgZmlsZSBpcyBsb2NhdGVkIGF0OlxuICogaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1jaXBoZXJzL2Jsb2IvNzQ5Y2RmOWNkMDdlYmRkMTllOWI5NTdkMGYxNzJmMTA0NTE3OTY5NS9zcmMvdXRpbHMudHNcbiAqL1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIGhleCwgYnl0ZXMsIENTUFJORy5cbiAqIEBtb2R1bGVcbiAqL1xuLyoqIENoZWNrcyBpZiBzb21ldGhpbmcgaXMgVWludDhBcnJheS4gQmUgY2FyZWZ1bDogbm9kZWpzIEJ1ZmZlciB3aWxsIHJldHVybiB0cnVlLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQnl0ZXMoYSkge1xuICAgIHJldHVybiBhIGluc3RhbmNlb2YgVWludDhBcnJheSB8fFxuICAgICAgICAoQXJyYXlCdWZmZXIuaXNWaWV3KGEpICYmIGEuY29uc3RydWN0b3IubmFtZSA9PT0gXCJVaW50OEFycmF5XCIpO1xufVxuLyoqIEFzc2VydHMgc29tZXRoaW5nIGlzIGJvb2xlYW4uICovXG5leHBvcnQgZnVuY3Rpb24gYWJvb2woYikge1xuICAgIGlmICh0eXBlb2YgYiAhPT0gXCJib29sZWFuXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgYm9vbGVhbiBleHBlY3RlZCwgbm90ICR7Yn1gKTtcbn1cbi8qKiBBc3NlcnRzIHNvbWV0aGluZyBpcyBwb3NpdGl2ZSBpbnRlZ2VyLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFudW1iZXIobikge1xuICAgIGlmICghTnVtYmVyLmlzU2FmZUludGVnZXIobikgfHwgbiA8IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwicG9zaXRpdmUgaW50ZWdlciBleHBlY3RlZCwgZ290IFwiICsgbik7XG4gICAgfVxufVxuLyoqIEFzc2VydHMgc29tZXRoaW5nIGlzIFVpbnQ4QXJyYXkuICovXG5leHBvcnQgZnVuY3Rpb24gYWJ5dGVzKHZhbHVlLCBsZW5ndGgsIHRpdGxlID0gXCJcIikge1xuICAgIGNvbnN0IGJ5dGVzID0gaXNCeXRlcyh2YWx1ZSk7XG4gICAgY29uc3QgbGVuID0gdmFsdWU/Lmxlbmd0aDtcbiAgICBjb25zdCBuZWVkc0xlbiA9IGxlbmd0aCAhPT0gdW5kZWZpbmVkO1xuICAgIGlmICghYnl0ZXMgfHwgKG5lZWRzTGVuICYmIGxlbiAhPT0gbGVuZ3RoKSkge1xuICAgICAgICBjb25zdCBwcmVmaXggPSB0aXRsZSAmJiBgXCIke3RpdGxlfVwiIGA7XG4gICAgICAgIGNvbnN0IG9mTGVuID0gbmVlZHNMZW4gPyBgIG9mIGxlbmd0aCAke2xlbmd0aH1gIDogXCJcIjtcbiAgICAgICAgY29uc3QgZ290ID0gYnl0ZXMgPyBgbGVuZ3RoPSR7bGVufWAgOiBgdHlwZT0ke3R5cGVvZiB2YWx1ZX1gO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCJleHBlY3RlZCBVaW50OEFycmF5XCIgKyBvZkxlbiArIFwiLCBnb3QgXCIgKyBnb3QpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4vKiogQXNzZXJ0cyBhIGhhc2ggaW5zdGFuY2UgaGFzIG5vdCBiZWVuIGRlc3Ryb3llZCAvIGZpbmlzaGVkICovXG4vLyBkZW5vLWxpbnQtaWdub3JlIG5vLWV4cGxpY2l0LWFueVxuZXhwb3J0IGZ1bmN0aW9uIGFleGlzdHMoaW5zdGFuY2UsIGNoZWNrRmluaXNoZWQgPSB0cnVlKSB7XG4gICAgaWYgKGluc3RhbmNlLmRlc3Ryb3llZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSGFzaCBpbnN0YW5jZSBoYXMgYmVlbiBkZXN0cm95ZWRcIik7XG4gICAgaWYgKGNoZWNrRmluaXNoZWQgJiYgaW5zdGFuY2UuZmluaXNoZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSGFzaCNkaWdlc3QoKSBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZFwiKTtcbiAgICB9XG59XG4vKiogQXNzZXJ0cyBvdXRwdXQgaXMgcHJvcGVybHktc2l6ZWQgYnl0ZSBhcnJheSAqL1xuLy8gZGVuby1saW50LWlnbm9yZSBuby1leHBsaWNpdC1hbnlcbmV4cG9ydCBmdW5jdGlvbiBhb3V0cHV0KG91dCwgaW5zdGFuY2UpIHtcbiAgICBhYnl0ZXMob3V0LCB1bmRlZmluZWQsIFwib3V0cHV0XCIpO1xuICAgIGNvbnN0IG1pbiA9IGluc3RhbmNlLm91dHB1dExlbjtcbiAgICBpZiAob3V0Lmxlbmd0aCA8IG1pbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJkaWdlc3RJbnRvKCkgZXhwZWN0cyBvdXRwdXQgYnVmZmVyIG9mIGxlbmd0aCBhdCBsZWFzdCBcIiArIG1pbik7XG4gICAgfVxufVxuLyoqIENhc3QgdTggLyB1MTYgLyB1MzIgdG8gdTguICovXG5leHBvcnQgZnVuY3Rpb24gdTgoYXJyKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGFyci5idWZmZXIsIGFyci5ieXRlT2Zmc2V0LCBhcnIuYnl0ZUxlbmd0aCk7XG59XG4vKiogQ2FzdCB1OCAvIHUxNiAvIHUzMiB0byB1MzIuICovXG5leHBvcnQgZnVuY3Rpb24gdTMyKGFycikge1xuICAgIHJldHVybiBuZXcgVWludDMyQXJyYXkoYXJyLmJ1ZmZlciwgYXJyLmJ5dGVPZmZzZXQsIE1hdGguZmxvb3IoYXJyLmJ5dGVMZW5ndGggLyA0KSk7XG59XG4vKiogWmVyb2l6ZSBhIGJ5dGUgYXJyYXkuIFdhcm5pbmc6IEpTIHByb3ZpZGVzIG5vIGd1YXJhbnRlZXMuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYW4oLi4uYXJyYXlzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYXJyYXlzW2ldLmZpbGwoMCk7XG4gICAgfVxufVxuLyoqIENyZWF0ZSBEYXRhVmlldyBvZiBhbiBhcnJheSBmb3IgZWFzeSBieXRlLWxldmVsIG1hbmlwdWxhdGlvbi4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVWaWV3KGFycikge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcoYXJyLmJ1ZmZlciwgYXJyLmJ5dGVPZmZzZXQsIGFyci5ieXRlTGVuZ3RoKTtcbn1cbi8qKiBJcyBjdXJyZW50IHBsYXRmb3JtIGxpdHRsZS1lbmRpYW4/IE1vc3QgYXJlLiBCaWctRW5kaWFuIHBsYXRmb3JtOiBJQk0gKi9cbmV4cG9ydCBjb25zdCBpc0xFID0gXG4vKiBAX19QVVJFX18gKi8gKCgpID0+IG5ldyBVaW50OEFycmF5KG5ldyBVaW50MzJBcnJheShbMHgxMTIyMzM0NF0pLmJ1ZmZlcilbMF0gPT09IDB4NDQpKCk7XG4vLyBCdWlsdC1pbiBoZXggY29udmVyc2lvbiBodHRwczovL2Nhbml1c2UuY29tL21kbi1qYXZhc2NyaXB0X2J1aWx0aW5zX3VpbnQ4YXJyYXlfZnJvbWhleFxuY29uc3QgaGFzSGV4QnVpbHRpbiA9IC8qIEBfX1BVUkVfXyAqLyAoKCkgPT4gXG4vLyBAdHMtaWdub3JlOiB0byB1c2UgdG9IZXhcbnR5cGVvZiBVaW50OEFycmF5LmZyb20oW10pLnRvSGV4ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAvLyBAdHMtaWdub3JlOiB0byB1c2UgZnJvbUhleFxuICAgIHR5cGVvZiBVaW50OEFycmF5LmZyb21IZXggPT09IFwiZnVuY3Rpb25cIikoKTtcbi8vIEFycmF5IHdoZXJlIGluZGV4IDB4ZjAgKDI0MCkgaXMgbWFwcGVkIHRvIHN0cmluZyAnZjAnXG5jb25zdCBoZXhlcyA9IC8qIEBfX1BVUkVfXyAqLyBBcnJheS5mcm9tKHsgbGVuZ3RoOiAyNTYgfSwgKF8sIGkpID0+IGkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSk7XG4vKipcbiAqIENvbnZlcnQgYnl0ZSBhcnJheSB0byBoZXggc3RyaW5nLiBVc2VzIGJ1aWx0LWluIGZ1bmN0aW9uLCB3aGVuIGF2YWlsYWJsZS5cbiAqIEBleGFtcGxlIGJ5dGVzVG9IZXgoVWludDhBcnJheS5mcm9tKFsweGNhLCAweGZlLCAweDAxLCAweDIzXSkpIC8vICdjYWZlMDEyMydcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzVG9IZXgoYnl0ZXMpIHtcbiAgICBhYnl0ZXMoYnl0ZXMpO1xuICAgIC8vIEB0cy1pZ25vcmU6IHRvIHVzZSB0b0hleFxuICAgIGlmIChoYXNIZXhCdWlsdGluKVxuICAgICAgICByZXR1cm4gYnl0ZXMudG9IZXgoKTtcbiAgICAvLyBwcmUtY2FjaGluZyBpbXByb3ZlcyB0aGUgc3BlZWQgNnhcbiAgICBsZXQgaGV4ID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGhleCArPSBoZXhlc1tieXRlc1tpXV07XG4gICAgfVxuICAgIHJldHVybiBoZXg7XG59XG4vLyBXZSB1c2Ugb3B0aW1pemVkIHRlY2huaXF1ZSB0byBjb252ZXJ0IGhleCBzdHJpbmcgdG8gYnl0ZSBhcnJheVxuY29uc3QgYXNjaWlzID0geyBfMDogNDgsIF85OiA1NywgQTogNjUsIEY6IDcwLCBhOiA5NywgZjogMTAyIH07XG5mdW5jdGlvbiBhc2NpaVRvQmFzZTE2KGNoKSB7XG4gICAgaWYgKGNoID49IGFzY2lpcy5fMCAmJiBjaCA8PSBhc2NpaXMuXzkpXG4gICAgICAgIHJldHVybiBjaCAtIGFzY2lpcy5fMDsgLy8gJzInID0+IDUwLTQ4XG4gICAgaWYgKGNoID49IGFzY2lpcy5BICYmIGNoIDw9IGFzY2lpcy5GKVxuICAgICAgICByZXR1cm4gY2ggLSAoYXNjaWlzLkEgLSAxMCk7IC8vICdCJyA9PiA2Ni0oNjUtMTApXG4gICAgaWYgKGNoID49IGFzY2lpcy5hICYmIGNoIDw9IGFzY2lpcy5mKVxuICAgICAgICByZXR1cm4gY2ggLSAoYXNjaWlzLmEgLSAxMCk7IC8vICdiJyA9PiA5OC0oOTctMTApXG4gICAgcmV0dXJuO1xufVxuLyoqXG4gKiBDb252ZXJ0IGhleCBzdHJpbmcgdG8gYnl0ZSBhcnJheS4gVXNlcyBidWlsdC1pbiBmdW5jdGlvbiwgd2hlbiBhdmFpbGFibGUuXG4gKiBAZXhhbXBsZSBoZXhUb0J5dGVzKCdjYWZlMDEyMycpIC8vIFVpbnQ4QXJyYXkuZnJvbShbMHhjYSwgMHhmZSwgMHgwMSwgMHgyM10pXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0J5dGVzKGhleCkge1xuICAgIGlmICh0eXBlb2YgaGV4ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImhleCBzdHJpbmcgZXhwZWN0ZWQsIGdvdCBcIiArIHR5cGVvZiBoZXgpO1xuICAgIH1cbiAgICAvLyBAdHMtaWdub3JlOiB0byB1c2UgZnJvbUhleFxuICAgIGlmIChoYXNIZXhCdWlsdGluKVxuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tSGV4KGhleCk7XG4gICAgY29uc3QgaGwgPSBoZXgubGVuZ3RoO1xuICAgIGNvbnN0IGFsID0gaGwgLyAyO1xuICAgIGlmIChobCAlIDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBleHBlY3RlZCwgZ290IHVucGFkZGVkIGhleCBvZiBsZW5ndGggXCIgKyBobCk7XG4gICAgfVxuICAgIGNvbnN0IGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoYWwpO1xuICAgIGZvciAobGV0IGFpID0gMCwgaGkgPSAwOyBhaSA8IGFsOyBhaSsrLCBoaSArPSAyKSB7XG4gICAgICAgIGNvbnN0IG4xID0gYXNjaWlUb0Jhc2UxNihoZXguY2hhckNvZGVBdChoaSkpO1xuICAgICAgICBjb25zdCBuMiA9IGFzY2lpVG9CYXNlMTYoaGV4LmNoYXJDb2RlQXQoaGkgKyAxKSk7XG4gICAgICAgIGlmIChuMSA9PT0gdW5kZWZpbmVkIHx8IG4yID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGNoYXIgPSBoZXhbaGldICsgaGV4W2hpICsgMV07XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2hleCBzdHJpbmcgZXhwZWN0ZWQsIGdvdCBub24taGV4IGNoYXJhY3RlciBcIicgKyBjaGFyICsgJ1wiIGF0IGluZGV4ICcgK1xuICAgICAgICAgICAgICAgIGhpKTtcbiAgICAgICAgfVxuICAgICAgICBhcnJheVthaV0gPSBuMSAqIDE2ICsgbjI7IC8vIG11bHRpcGx5IGZpcnN0IG9jdGV0LCBlLmcuICdhMycgPT4gMTAqMTYrMyA9PiAxNjAgKyAzID0+IDE2M1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG59XG4vLyBVc2VkIGluIG1pY3JvXG5leHBvcnQgZnVuY3Rpb24gaGV4VG9OdW1iZXIoaGV4KSB7XG4gICAgaWYgKHR5cGVvZiBoZXggIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaGV4IHN0cmluZyBleHBlY3RlZCwgZ290IFwiICsgdHlwZW9mIGhleCk7XG4gICAgfVxuICAgIHJldHVybiBCaWdJbnQoaGV4ID09PSBcIlwiID8gXCIwXCIgOiBcIjB4XCIgKyBoZXgpOyAvLyBCaWcgRW5kaWFuXG59XG4vLyBVc2VkIGluIGZmMVxuLy8gQkU6IEJpZyBFbmRpYW4sIExFOiBMaXR0bGUgRW5kaWFuXG5leHBvcnQgZnVuY3Rpb24gYnl0ZXNUb051bWJlckJFKGJ5dGVzKSB7XG4gICAgcmV0dXJuIGhleFRvTnVtYmVyKGJ5dGVzVG9IZXgoYnl0ZXMpKTtcbn1cbi8vIFVzZWQgaW4gbWljcm8sIGZmMVxuZXhwb3J0IGZ1bmN0aW9uIG51bWJlclRvQnl0ZXNCRShuLCBsZW4pIHtcbiAgICByZXR1cm4gaGV4VG9CeXRlcyhuLnRvU3RyaW5nKDE2KS5wYWRTdGFydChsZW4gKiAyLCBcIjBcIikpO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBzdHJpbmcgdG8gYnl0ZXMgdXNpbmcgVVRGOCBlbmNvZGluZy5cbiAqIEBleGFtcGxlIHV0ZjhUb0J5dGVzKCdhYmMnKSAvLyBuZXcgVWludDhBcnJheShbOTcsIDk4LCA5OV0pXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1dGY4VG9CeXRlcyhzdHIpIHtcbiAgICBpZiAodHlwZW9mIHN0ciAhPT0gXCJzdHJpbmdcIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic3RyaW5nIGV4cGVjdGVkXCIpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoc3RyKSk7IC8vIGh0dHBzOi8vYnVnemlsLmxhLzE2ODE4MDlcbn1cbi8qKlxuICogQ29udmVydHMgYnl0ZXMgdG8gc3RyaW5nIHVzaW5nIFVURjggZW5jb2RpbmcuXG4gKiBAZXhhbXBsZSBieXRlc1RvVXRmOChuZXcgVWludDhBcnJheShbOTcsIDk4LCA5OV0pKSAvLyAnYWJjJ1xuICovXG5leHBvcnQgZnVuY3Rpb24gYnl0ZXNUb1V0ZjgoYnl0ZXMpIHtcbiAgICByZXR1cm4gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGJ5dGVzKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIHR3byBVOEEgdXNlIHNhbWUgdW5kZXJseWluZyBidWZmZXIgYW5kIG92ZXJsYXBzLlxuICogVGhpcyBpcyBpbnZhbGlkIGFuZCBjYW4gY29ycnVwdCBkYXRhLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb3ZlcmxhcEJ5dGVzKGEsIGIpIHtcbiAgICByZXR1cm4gKGEuYnVmZmVyID09PSBiLmJ1ZmZlciAmJiAvLyBiZXN0IHdlIGNhbiBkbywgbWF5IGZhaWwgd2l0aCBhbiBvYnNjdXJlIFByb3h5XG4gICAgICAgIGEuYnl0ZU9mZnNldCA8IGIuYnl0ZU9mZnNldCArIGIuYnl0ZUxlbmd0aCAmJiAvLyBhIHN0YXJ0cyBiZWZvcmUgYiBlbmRcbiAgICAgICAgYi5ieXRlT2Zmc2V0IDwgYS5ieXRlT2Zmc2V0ICsgYS5ieXRlTGVuZ3RoIC8vIGIgc3RhcnRzIGJlZm9yZSBhIGVuZFxuICAgICk7XG59XG4vKipcbiAqIElmIGlucHV0IGFuZCBvdXRwdXQgb3ZlcmxhcCBhbmQgaW5wdXQgc3RhcnRzIGJlZm9yZSBvdXRwdXQsIHdlIHdpbGwgb3ZlcndyaXRlIGVuZCBvZiBpbnB1dCBiZWZvcmVcbiAqIHdlIHN0YXJ0IHByb2Nlc3NpbmcgaXQsIHNvIHRoaXMgaXMgbm90IHN1cHBvcnRlZCBmb3IgbW9zdCBjaXBoZXJzIChleGNlcHQgY2hhY2hhL3NhbHNlLCB3aGljaCBkZXNpZ25lZCB3aXRoIHRoaXMpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wbGV4T3ZlcmxhcEJ5dGVzKGlucHV0LCBvdXRwdXQpIHtcbiAgICAvLyBUaGlzIGlzIHZlcnkgY3Vyc2VkLiBJdCB3b3JrcyBzb21laG93LCBidXQgSSdtIGNvbXBsZXRlbHkgdW5zdXJlLFxuICAgIC8vIHJlYXNvbmluZyBhYm91dCBvdmVybGFwcGluZyBhbGlnbmVkIHdpbmRvd3MgaXMgdmVyeSBoYXJkLlxuICAgIGlmIChvdmVybGFwQnl0ZXMoaW5wdXQsIG91dHB1dCkgJiYgaW5wdXQuYnl0ZU9mZnNldCA8IG91dHB1dC5ieXRlT2Zmc2V0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImNvbXBsZXggb3ZlcmxhcCBvZiBpbnB1dCBhbmQgb3V0cHV0IGlzIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgfVxufVxuLyoqXG4gKiBDb3BpZXMgc2V2ZXJhbCBVaW50OEFycmF5cyBpbnRvIG9uZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdEJ5dGVzKC4uLmFycmF5cykge1xuICAgIGxldCBzdW0gPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGEgPSBhcnJheXNbaV07XG4gICAgICAgIGFieXRlcyhhKTtcbiAgICAgICAgc3VtICs9IGEubGVuZ3RoO1xuICAgIH1cbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShzdW0pO1xuICAgIGZvciAobGV0IGkgPSAwLCBwYWQgPSAwOyBpIDwgYXJyYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGEgPSBhcnJheXNbaV07XG4gICAgICAgIHJlcy5zZXQoYSwgcGFkKTtcbiAgICAgICAgcGFkICs9IGEubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrT3B0cyhkZWZhdWx0cywgb3B0cykge1xuICAgIGlmIChvcHRzID09IG51bGwgfHwgdHlwZW9mIG9wdHMgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwib3B0aW9ucyBtdXN0IGJlIGRlZmluZWRcIik7XG4gICAgfVxuICAgIGNvbnN0IG1lcmdlZCA9IE9iamVjdC5hc3NpZ24oZGVmYXVsdHMsIG9wdHMpO1xuICAgIHJldHVybiBtZXJnZWQ7XG59XG4vKiogQ29tcGFyZXMgMiB1aW50OGFycmF5LXMgaW4ga2luZGEgY29uc3RhbnQgdGltZS4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlcXVhbEJ5dGVzKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgbGV0IGRpZmYgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKylcbiAgICAgICAgZGlmZiB8PSBhW2ldIF4gYltpXTtcbiAgICByZXR1cm4gZGlmZiA9PT0gMDtcbn1cbi8qKlxuICogV3JhcHMgYSBjaXBoZXI6IHZhbGlkYXRlcyBhcmdzLCBlbnN1cmVzIGVuY3J5cHQoKSBjYW4gb25seSBiZSBjYWxsZWQgb25jZS5cbiAqIEBfX05PX1NJREVfRUZGRUNUU19fXG4gKi9cbi8vIGRlbm8tbGludC1pZ25vcmUgbm8tZXhwbGljaXQtYW55XG5leHBvcnQgY29uc3Qgd3JhcENpcGhlciA9IChwYXJhbXMsIGNvbnN0cnVjdG9yKSA9PiB7XG4gICAgLy8gZGVuby1saW50LWlnbm9yZSBuby1leHBsaWNpdC1hbnlcbiAgICBmdW5jdGlvbiB3cmFwcGVkQ2lwaGVyKGtleSwgLi4uYXJncykge1xuICAgICAgICAvLyBWYWxpZGF0ZSBrZXlcbiAgICAgICAgYWJ5dGVzKGtleSwgdW5kZWZpbmVkLCBcImtleVwiKTtcbiAgICAgICAgLy8gQmlnLUVuZGlhbiBoYXJkd2FyZSBpcyByYXJlLiBKdXN0IGluIGNhc2Ugc29tZW9uZSBzdGlsbCBkZWNpZGVzIHRvIHJ1biBjaXBoZXJzOlxuICAgICAgICBpZiAoIWlzTEUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vbiBsaXR0bGUtZW5kaWFuIGhhcmR3YXJlIGlzIG5vdCB5ZXQgc3VwcG9ydGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFZhbGlkYXRlIG5vbmNlIGlmIG5vbmNlTGVuZ3RoIGlzIHByZXNlbnRcbiAgICAgICAgaWYgKHBhcmFtcy5ub25jZUxlbmd0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBub25jZSA9IGFyZ3NbMF07XG4gICAgICAgICAgICBhYnl0ZXMobm9uY2UsIHBhcmFtcy52YXJTaXplTm9uY2UgPyB1bmRlZmluZWQgOiBwYXJhbXMubm9uY2VMZW5ndGgsIFwibm9uY2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVmFsaWRhdGUgQUFEIGlmIHRhZ0xlbmd0aCBwcmVzZW50XG4gICAgICAgIGNvbnN0IHRhZ2wgPSBwYXJhbXMudGFnTGVuZ3RoO1xuICAgICAgICBpZiAodGFnbCAmJiBhcmdzWzFdICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICBhYnl0ZXMoYXJnc1sxXSwgdW5kZWZpbmVkLCBcIkFBRFwiKTtcbiAgICAgICAgY29uc3QgY2lwaGVyID0gY29uc3RydWN0b3Ioa2V5LCAuLi5hcmdzKTtcbiAgICAgICAgY29uc3QgY2hlY2tPdXRwdXQgPSAoZm5MZW5ndGgsIG91dHB1dCkgPT4ge1xuICAgICAgICAgICAgaWYgKG91dHB1dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKGZuTGVuZ3RoICE9PSAyKVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjaXBoZXIgb3V0cHV0IG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgICAgICAgICAgICAgYWJ5dGVzKG91dHB1dCwgdW5kZWZpbmVkLCBcIm91dHB1dFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgLy8gQ3JlYXRlIHdyYXBwZWQgY2lwaGVyIHdpdGggdmFsaWRhdGlvbiBhbmQgc2luZ2xlLXVzZSBlbmNyeXB0aW9uXG4gICAgICAgIGxldCBjYWxsZWQgPSBmYWxzZTtcbiAgICAgICAgY29uc3Qgd3JDaXBoZXIgPSB7XG4gICAgICAgICAgICBlbmNyeXB0KGRhdGEsIG91dHB1dCkge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGVuY3J5cHQoKSB0d2ljZSB3aXRoIHNhbWUga2V5ICsgbm9uY2VcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYWJ5dGVzKGRhdGEpO1xuICAgICAgICAgICAgICAgIGNoZWNrT3V0cHV0KGNpcGhlci5lbmNyeXB0Lmxlbmd0aCwgb3V0cHV0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2lwaGVyLmVuY3J5cHQoZGF0YSwgb3V0cHV0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZWNyeXB0KGRhdGEsIG91dHB1dCkge1xuICAgICAgICAgICAgICAgIGFieXRlcyhkYXRhKTtcbiAgICAgICAgICAgICAgICBpZiAodGFnbCAmJiBkYXRhLmxlbmd0aCA8IHRhZ2wpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdcImNpcGhlcnRleHRcIiBleHBlY3RlZCBsZW5ndGggYmlnZ2VyIHRoYW4gdGFnTGVuZ3RoPScgKyB0YWdsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2hlY2tPdXRwdXQoY2lwaGVyLmRlY3J5cHQubGVuZ3RoLCBvdXRwdXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjaXBoZXIuZGVjcnlwdChkYXRhLCBvdXRwdXQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHdyQ2lwaGVyO1xuICAgIH1cbiAgICBPYmplY3QuYXNzaWduKHdyYXBwZWRDaXBoZXIsIHBhcmFtcyk7XG4gICAgcmV0dXJuIHdyYXBwZWRDaXBoZXI7XG59O1xuLyoqXG4gKiBCeSBkZWZhdWx0LCByZXR1cm5zIHU4YSBvZiBsZW5ndGguXG4gKiBXaGVuIG91dCBpcyBhdmFpbGFibGUsIGl0IGNoZWNrcyBpdCBmb3IgdmFsaWRpdHkgYW5kIHVzZXMgaXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRPdXRwdXQoZXhwZWN0ZWRMZW5ndGgsIG91dCwgb25seUFsaWduZWQgPSB0cnVlKSB7XG4gICAgaWYgKG91dCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoZXhwZWN0ZWRMZW5ndGgpO1xuICAgIGlmIChvdXQubGVuZ3RoICE9PSBleHBlY3RlZExlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wib3V0cHV0XCIgZXhwZWN0ZWQgVWludDhBcnJheSBvZiBsZW5ndGggJyArIGV4cGVjdGVkTGVuZ3RoICsgXCIsIGdvdDogXCIgK1xuICAgICAgICAgICAgb3V0Lmxlbmd0aCk7XG4gICAgfVxuICAgIGlmIChvbmx5QWxpZ25lZCAmJiAhaXNBbGlnbmVkMzIob3V0KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIG91dHB1dCwgbXVzdCBiZSBhbGlnbmVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHU2NExlbmd0aHMoZGF0YUxlbmd0aCwgYWFkTGVuZ3RoLCBpc0xFKSB7XG4gICAgYWJvb2woaXNMRSk7XG4gICAgY29uc3QgbnVtID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuICAgIGNvbnN0IHZpZXcgPSBjcmVhdGVWaWV3KG51bSk7XG4gICAgdmlldy5zZXRCaWdVaW50NjQoMCwgQmlnSW50KGFhZExlbmd0aCksIGlzTEUpO1xuICAgIHZpZXcuc2V0QmlnVWludDY0KDgsIEJpZ0ludChkYXRhTGVuZ3RoKSwgaXNMRSk7XG4gICAgcmV0dXJuIG51bTtcbn1cbi8vIElzIGJ5dGUgYXJyYXkgYWxpZ25lZCB0byA0IGJ5dGUgb2Zmc2V0ICh1MzIpP1xuZXhwb3J0IGZ1bmN0aW9uIGlzQWxpZ25lZDMyKGJ5dGVzKSB7XG4gICAgcmV0dXJuIGJ5dGVzLmJ5dGVPZmZzZXQgJSA0ID09PSAwO1xufVxuLy8gY29weSBieXRlcyB0byBuZXcgdThhIChhbGlnbmVkKS4gQmVjYXVzZSBCdWZmZXIuc2xpY2UgaXMgYnJva2VuLlxuZXhwb3J0IGZ1bmN0aW9uIGNvcHlCeXRlcyhieXRlcykge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYnl0ZXMpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/utils.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha20Poly1305.js":
/*!******************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha20Poly1305.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chacha20Poly1305: () => (/* binding */ Chacha20Poly1305),\n/* harmony export */   Chacha20Poly1305Context: () => (/* binding */ Chacha20Poly1305Context)\n/* harmony export */ });\n/* harmony import */ var _chacha_chacha_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chacha/chacha.js */ \"(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha/chacha.js\");\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\n\nclass Chacha20Poly1305Context {\n    constructor(key) {\n        Object.defineProperty(this, \"_key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._key = new Uint8Array(key);\n    }\n    async seal(iv, data, aad) {\n        return await this._seal(iv, data, aad);\n    }\n    async open(iv, data, aad) {\n        return await this._open(iv, data, aad);\n    }\n    _seal(iv, data, aad) {\n        return new Promise((resolve) => {\n            const ret = (0,_chacha_chacha_js__WEBPACK_IMPORTED_MODULE_0__.chacha20poly1305)(this._key, new Uint8Array(iv), new Uint8Array(aad)).encrypt(new Uint8Array(data));\n            resolve(ret.buffer);\n        });\n    }\n    _open(iv, data, aad) {\n        return new Promise((resolve) => {\n            const ret = (0,_chacha_chacha_js__WEBPACK_IMPORTED_MODULE_0__.chacha20poly1305)(this._key, new Uint8Array(iv), new Uint8Array(aad)).decrypt(new Uint8Array(data));\n            resolve(ret.buffer);\n        });\n    }\n}\n/**\n * The ChaCha20Poly1305 for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class can be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Chacha20Poly1305`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n * import {\n *   Chacha20Poly1305,\n * } from \"@hpke/chacha20poly1305\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Chacha20Poly1305(),\n * });\n * ```\n *\n * This class is implemented using\n * {@link https://github.com/paulmillr/noble-ciphers | @noble/ciphers}.\n */\nclass Chacha20Poly1305 {\n    constructor() {\n        /** AeadId.Chacha20Poly1305 (0x0003) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_1__.AeadId.Chacha20Poly1305\n        });\n        /** 32 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n    createEncryptionContext(key) {\n        return new Chacha20Poly1305Context(key);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jaGFjaGEyMHBvbHkxMzA1L2VzbS9zcmMvY2hhY2hhMjBQb2x5MTMwNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNEO0FBQ2hCO0FBQy9CO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1FQUFnQjtBQUN4QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbUVBQWdCO0FBQ3hDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxvQkFBb0I7QUFDeEU7QUFDQTtBQUNBLCtCQUErQix5QkFBeUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxJQUFJLGtFQUFrRTtBQUN0RTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdEQUFNO0FBQ3pCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NoYWNoYTIwcG9seTEzMDUvZXNtL3NyYy9jaGFjaGEyMFBvbHkxMzA1LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNoYWNoYTIwcG9seTEzMDUgfSBmcm9tIFwiLi9jaGFjaGEvY2hhY2hhLmpzXCI7XG5pbXBvcnQgeyBBZWFkSWQgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5leHBvcnQgY2xhc3MgQ2hhY2hhMjBQb2x5MTMwNUNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfa2V5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2tleSA9IG5ldyBVaW50OEFycmF5KGtleSk7XG4gICAgfVxuICAgIGFzeW5jIHNlYWwoaXYsIGRhdGEsIGFhZCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5fc2VhbChpdiwgZGF0YSwgYWFkKTtcbiAgICB9XG4gICAgYXN5bmMgb3BlbihpdiwgZGF0YSwgYWFkKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9vcGVuKGl2LCBkYXRhLCBhYWQpO1xuICAgIH1cbiAgICBfc2VhbChpdiwgZGF0YSwgYWFkKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmV0ID0gY2hhY2hhMjBwb2x5MTMwNSh0aGlzLl9rZXksIG5ldyBVaW50OEFycmF5KGl2KSwgbmV3IFVpbnQ4QXJyYXkoYWFkKSkuZW5jcnlwdChuZXcgVWludDhBcnJheShkYXRhKSk7XG4gICAgICAgICAgICByZXNvbHZlKHJldC5idWZmZXIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX29wZW4oaXYsIGRhdGEsIGFhZCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJldCA9IGNoYWNoYTIwcG9seTEzMDUodGhpcy5fa2V5LCBuZXcgVWludDhBcnJheShpdiksIG5ldyBVaW50OEFycmF5KGFhZCkpLmRlY3J5cHQobmV3IFVpbnQ4QXJyYXkoZGF0YSkpO1xuICAgICAgICAgICAgcmVzb2x2ZShyZXQuYnVmZmVyKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLyoqXG4gKiBUaGUgQ2hhQ2hhMjBQb2x5MTMwNSBmb3IgSFBLRSBBRUFEIGltcGxlbWVudGluZyB7QGxpbmsgQWVhZEludGVyZmFjZX0uXG4gKlxuICogV2hlbiB1c2luZyBgQGhwa2UvY29yZWAsIHRoZSBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzIGNhbiBiZSBzcGVjaWZpZWRcbiAqIHRvIHRoZSBgYWVhZGAgcGFyYW1ldGVyIG9mIHtAbGluayBDaXBoZXJTdWl0ZVBhcmFtc30gaW5zdGVhZCBvZiBgQWVhZElkLkNoYWNoYTIwUG9seTEzMDVgXG4gKiBhcyBmb2xsb3dzOlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7XG4gKiAgIENpcGhlclN1aXRlLFxuICogICBEaGtlbVAyNTZIa2RmU2hhMjU2LFxuICogICBIa2RmU2hhMjU2LFxuICogfSBmcm9tIFwiQGhwa2UvY29yZVwiO1xuICogaW1wb3J0IHtcbiAqICAgQ2hhY2hhMjBQb2x5MTMwNSxcbiAqIH0gZnJvbSBcIkBocGtlL2NoYWNoYTIwcG9seTEzMDVcIjtcbiAqXG4gKiBjb25zdCBzdWl0ZSA9IG5ldyBDaXBoZXJTdWl0ZSh7XG4gKiAgIGtlbTogbmV3IERoa2VtUDI1NkhrZGZTaGEyNTYoKSxcbiAqICAga2RmOiBuZXcgSGtkZlNoYTI1NigpLFxuICogICBhZWFkOiBuZXcgQ2hhY2hhMjBQb2x5MTMwNSgpLFxuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBUaGlzIGNsYXNzIGlzIGltcGxlbWVudGVkIHVzaW5nXG4gKiB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1jaXBoZXJzIHwgQG5vYmxlL2NpcGhlcnN9LlxuICovXG5leHBvcnQgY2xhc3MgQ2hhY2hhMjBQb2x5MTMwNSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKiBBZWFkSWQuQ2hhY2hhMjBQb2x5MTMwNSAoMHgwMDAzKSAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogQWVhZElkLkNoYWNoYTIwUG9seTEzMDVcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiAzMiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJrZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAzMlxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIDEyICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5vbmNlU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMTJcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiAxNiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0YWdTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAxNlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3JlYXRlRW5jcnlwdGlvbkNvbnRleHQoa2V5KSB7XG4gICAgICAgIHJldHVybiBuZXcgQ2hhY2hhMjBQb2x5MTMwNUNvbnRleHQoa2V5KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/chacha20poly1305/esm/src/chacha20Poly1305.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/_dnt.shims.js":
/*!**********************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/_dnt.shims.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dntGlobalThis: () => (/* binding */ dntGlobalThis)\n/* harmony export */ });\nconst dntGlobals = {};\nconst dntGlobalThis = createMergeProxy(globalThis, dntGlobals);\nfunction createMergeProxy(baseObj, extObj) {\n    return new Proxy(baseObj, {\n        get(_target, prop, _receiver) {\n            if (prop in extObj) {\n                return extObj[prop];\n            }\n            else {\n                return baseObj[prop];\n            }\n        },\n        set(_target, prop, value) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            baseObj[prop] = value;\n            return true;\n        },\n        deleteProperty(_target, prop) {\n            let success = false;\n            if (prop in extObj) {\n                delete extObj[prop];\n                success = true;\n            }\n            if (prop in baseObj) {\n                delete baseObj[prop];\n                success = true;\n            }\n            return success;\n        },\n        ownKeys(_target) {\n            const baseKeys = Reflect.ownKeys(baseObj);\n            const extKeys = Reflect.ownKeys(extObj);\n            const extKeysSet = new Set(extKeys);\n            return [...baseKeys.filter((k) => !extKeysSet.has(k)), ...extKeys];\n        },\n        defineProperty(_target, prop, desc) {\n            if (prop in extObj) {\n                delete extObj[prop];\n            }\n            Reflect.defineProperty(baseObj, prop, desc);\n            return true;\n        },\n        getOwnPropertyDescriptor(_target, prop) {\n            if (prop in extObj) {\n                return Reflect.getOwnPropertyDescriptor(extObj, prop);\n            }\n            else {\n                return Reflect.getOwnPropertyDescriptor(baseObj, prop);\n            }\n        },\n        has(_target, prop) {\n            return prop in extObj || prop in baseObj;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL19kbnQuc2hpbXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29tbW9uL2VzbS9fZG50LnNoaW1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRudEdsb2JhbHMgPSB7fTtcbmV4cG9ydCBjb25zdCBkbnRHbG9iYWxUaGlzID0gY3JlYXRlTWVyZ2VQcm94eShnbG9iYWxUaGlzLCBkbnRHbG9iYWxzKTtcbmZ1bmN0aW9uIGNyZWF0ZU1lcmdlUHJveHkoYmFzZU9iaiwgZXh0T2JqKSB7XG4gICAgcmV0dXJuIG5ldyBQcm94eShiYXNlT2JqLCB7XG4gICAgICAgIGdldChfdGFyZ2V0LCBwcm9wLCBfcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgIGlmIChwcm9wIGluIGV4dE9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHRPYmpbcHJvcF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYmFzZU9ialtwcm9wXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc2V0KF90YXJnZXQsIHByb3AsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAocHJvcCBpbiBleHRPYmopIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgZXh0T2JqW3Byb3BdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYmFzZU9ialtwcm9wXSA9IHZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGV0ZVByb3BlcnR5KF90YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgIGxldCBzdWNjZXNzID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAocHJvcCBpbiBleHRPYmopIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgZXh0T2JqW3Byb3BdO1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb3AgaW4gYmFzZU9iaikge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBiYXNlT2JqW3Byb3BdO1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHN1Y2Nlc3M7XG4gICAgICAgIH0sXG4gICAgICAgIG93bktleXMoX3RhcmdldCkge1xuICAgICAgICAgICAgY29uc3QgYmFzZUtleXMgPSBSZWZsZWN0Lm93bktleXMoYmFzZU9iaik7XG4gICAgICAgICAgICBjb25zdCBleHRLZXlzID0gUmVmbGVjdC5vd25LZXlzKGV4dE9iaik7XG4gICAgICAgICAgICBjb25zdCBleHRLZXlzU2V0ID0gbmV3IFNldChleHRLZXlzKTtcbiAgICAgICAgICAgIHJldHVybiBbLi4uYmFzZUtleXMuZmlsdGVyKChrKSA9PiAhZXh0S2V5c1NldC5oYXMoaykpLCAuLi5leHRLZXlzXTtcbiAgICAgICAgfSxcbiAgICAgICAgZGVmaW5lUHJvcGVydHkoX3RhcmdldCwgcHJvcCwgZGVzYykge1xuICAgICAgICAgICAgaWYgKHByb3AgaW4gZXh0T2JqKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGV4dE9ialtwcm9wXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkoYmFzZU9iaiwgcHJvcCwgZGVzYyk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKF90YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgIGlmIChwcm9wIGluIGV4dE9iaikge1xuICAgICAgICAgICAgICAgIHJldHVybiBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihleHRPYmosIHByb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGJhc2VPYmosIHByb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBoYXMoX3RhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3AgaW4gZXh0T2JqIHx8IHByb3AgaW4gYmFzZU9iajtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/_dnt.shims.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js":
/*!***************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/mod.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AEAD_USAGES: () => (/* reexport safe */ _src_interfaces_aeadEncryptionContext_js__WEBPACK_IMPORTED_MODULE_8__.AEAD_USAGES),\n/* harmony export */   AeadId: () => (/* reexport safe */ _src_identifiers_js__WEBPACK_IMPORTED_MODULE_2__.AeadId),\n/* harmony export */   DecapError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.DecapError),\n/* harmony export */   DeriveKeyPairError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.DeriveKeyPairError),\n/* harmony export */   DeserializeError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.DeserializeError),\n/* harmony export */   Dhkem: () => (/* reexport safe */ _src_kems_dhkem_js__WEBPACK_IMPORTED_MODULE_3__.Dhkem),\n/* harmony export */   EMPTY: () => (/* reexport safe */ _src_consts_js__WEBPACK_IMPORTED_MODULE_11__.EMPTY),\n/* harmony export */   Ec: () => (/* reexport safe */ _src_kems_dhkemPrimitives_ec_js__WEBPACK_IMPORTED_MODULE_4__.Ec),\n/* harmony export */   EncapError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.EncapError),\n/* harmony export */   ExportError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.ExportError),\n/* harmony export */   HkdfSha256Native: () => (/* reexport safe */ _src_kdfs_hkdf_js__WEBPACK_IMPORTED_MODULE_7__.HkdfSha256Native),\n/* harmony export */   HkdfSha384Native: () => (/* reexport safe */ _src_kdfs_hkdf_js__WEBPACK_IMPORTED_MODULE_7__.HkdfSha384Native),\n/* harmony export */   HkdfSha512Native: () => (/* reexport safe */ _src_kdfs_hkdf_js__WEBPACK_IMPORTED_MODULE_7__.HkdfSha512Native),\n/* harmony export */   HpkeError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.HpkeError),\n/* harmony export */   Hybridkem: () => (/* reexport safe */ _src_kems_hybridkem_js__WEBPACK_IMPORTED_MODULE_5__.Hybridkem),\n/* harmony export */   INFO_LENGTH_LIMIT: () => (/* reexport safe */ _src_consts_js__WEBPACK_IMPORTED_MODULE_11__.INFO_LENGTH_LIMIT),\n/* harmony export */   INPUT_LENGTH_LIMIT: () => (/* reexport safe */ _src_consts_js__WEBPACK_IMPORTED_MODULE_11__.INPUT_LENGTH_LIMIT),\n/* harmony export */   InvalidParamError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError),\n/* harmony export */   KEM_USAGES: () => (/* reexport safe */ _src_interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_9__.KEM_USAGES),\n/* harmony export */   KdfId: () => (/* reexport safe */ _src_identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KdfId),\n/* harmony export */   KemId: () => (/* reexport safe */ _src_identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KemId),\n/* harmony export */   LABEL_DKP_PRK: () => (/* reexport safe */ _src_interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_9__.LABEL_DKP_PRK),\n/* harmony export */   LABEL_SK: () => (/* reexport safe */ _src_interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_9__.LABEL_SK),\n/* harmony export */   MINIMUM_PSK_LENGTH: () => (/* reexport safe */ _src_consts_js__WEBPACK_IMPORTED_MODULE_11__.MINIMUM_PSK_LENGTH),\n/* harmony export */   MessageLimitReachedError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.MessageLimitReachedError),\n/* harmony export */   Mode: () => (/* reexport safe */ _src_identifiers_js__WEBPACK_IMPORTED_MODULE_2__.Mode),\n/* harmony export */   NativeAlgorithm: () => (/* reexport safe */ _src_algorithm_js__WEBPACK_IMPORTED_MODULE_1__.NativeAlgorithm),\n/* harmony export */   NotSupportedError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError),\n/* harmony export */   OpenError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.OpenError),\n/* harmony export */   SUITE_ID_HEADER_KEM: () => (/* reexport safe */ _src_interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_10__.SUITE_ID_HEADER_KEM),\n/* harmony export */   SealError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.SealError),\n/* harmony export */   SerializeError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.SerializeError),\n/* harmony export */   ValidationError: () => (/* reexport safe */ _src_errors_js__WEBPACK_IMPORTED_MODULE_0__.ValidationError),\n/* harmony export */   XCryptoKey: () => (/* reexport safe */ _src_xCryptoKey_js__WEBPACK_IMPORTED_MODULE_6__.XCryptoKey),\n/* harmony export */   base64UrlToBytes: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.base64UrlToBytes),\n/* harmony export */   concat: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.concat),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.hexToBytes),\n/* harmony export */   hmac: () => (/* reexport safe */ _src_hash_hmac_js__WEBPACK_IMPORTED_MODULE_13__.hmac),\n/* harmony export */   i2Osp: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.i2Osp),\n/* harmony export */   isCryptoKeyPair: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.isCryptoKeyPair),\n/* harmony export */   isDeno: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.isDeno),\n/* harmony export */   isDenoV1: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.isDenoV1),\n/* harmony export */   kemToKeyGenAlgorithm: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.kemToKeyGenAlgorithm),\n/* harmony export */   loadCrypto: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.loadCrypto),\n/* harmony export */   loadSubtleCrypto: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.loadSubtleCrypto),\n/* harmony export */   mod: () => (/* reexport safe */ _src_curve_modular_js__WEBPACK_IMPORTED_MODULE_15__.mod),\n/* harmony export */   montgomery: () => (/* reexport safe */ _src_curve_montgomery_js__WEBPACK_IMPORTED_MODULE_16__.montgomery),\n/* harmony export */   pow2: () => (/* reexport safe */ _src_curve_modular_js__WEBPACK_IMPORTED_MODULE_15__.pow2),\n/* harmony export */   sha256: () => (/* reexport safe */ _src_hash_sha2_js__WEBPACK_IMPORTED_MODULE_14__.sha256),\n/* harmony export */   sha384: () => (/* reexport safe */ _src_hash_sha2_js__WEBPACK_IMPORTED_MODULE_14__.sha384),\n/* harmony export */   sha512: () => (/* reexport safe */ _src_hash_sha2_js__WEBPACK_IMPORTED_MODULE_14__.sha512),\n/* harmony export */   xor: () => (/* reexport safe */ _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__.xor)\n/* harmony export */ });\n/* harmony import */ var _src_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n/* harmony import */ var _src_algorithm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/algorithm.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/algorithm.js\");\n/* harmony import */ var _src_identifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/identifiers.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\");\n/* harmony import */ var _src_kems_dhkem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/kems/dhkem.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkem.js\");\n/* harmony import */ var _src_kems_dhkemPrimitives_ec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/kems/dhkemPrimitives/ec.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js\");\n/* harmony import */ var _src_kems_hybridkem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/kems/hybridkem.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/hybridkem.js\");\n/* harmony import */ var _src_xCryptoKey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/xCryptoKey.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/xCryptoKey.js\");\n/* harmony import */ var _src_kdfs_hkdf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/kdfs/hkdf.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/kdfs/hkdf.js\");\n/* harmony import */ var _src_interfaces_aeadEncryptionContext_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/interfaces/aeadEncryptionContext.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js\");\n/* harmony import */ var _src_interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./src/interfaces/dhkemPrimitives.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js\");\n/* harmony import */ var _src_interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./src/interfaces/kemInterface.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js\");\n/* harmony import */ var _src_consts_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./src/consts.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\");\n/* harmony import */ var _src_utils_misc_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./src/utils/misc.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\");\n/* harmony import */ var _src_hash_hmac_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./src/hash/hmac.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/hmac.js\");\n/* harmony import */ var _src_hash_sha2_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./src/hash/sha2.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/sha2.js\");\n/* harmony import */ var _src_curve_modular_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./src/curve/modular.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/modular.js\");\n/* harmony import */ var _src_curve_montgomery_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/curve/montgomery.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/montgomery.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL21vZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDcUI7QUFDYTtBQUN0QjtBQUNVO0FBQ0Y7QUFDSDtBQUMwQztBQUNuQjtBQUNQO0FBQ2E7QUFDUDtBQUM2QjtBQUMyRTtBQUNySTtBQUNrQjtBQUNUO0FBQ0kiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29tbW9uL2VzbS9tb2QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vc3JjL2Vycm9ycy5qc1wiO1xuZXhwb3J0IHsgTmF0aXZlQWxnb3JpdGhtIH0gZnJvbSBcIi4vc3JjL2FsZ29yaXRobS5qc1wiO1xuZXhwb3J0IHsgQWVhZElkLCBLZGZJZCwgS2VtSWQsIE1vZGUgfSBmcm9tIFwiLi9zcmMvaWRlbnRpZmllcnMuanNcIjtcbmV4cG9ydCB7IERoa2VtIH0gZnJvbSBcIi4vc3JjL2tlbXMvZGhrZW0uanNcIjtcbmV4cG9ydCB7IEVjIH0gZnJvbSBcIi4vc3JjL2tlbXMvZGhrZW1QcmltaXRpdmVzL2VjLmpzXCI7XG5leHBvcnQgeyBIeWJyaWRrZW0gfSBmcm9tIFwiLi9zcmMva2Vtcy9oeWJyaWRrZW0uanNcIjtcbmV4cG9ydCB7IFhDcnlwdG9LZXkgfSBmcm9tIFwiLi9zcmMveENyeXB0b0tleS5qc1wiO1xuZXhwb3J0IHsgSGtkZlNoYTI1Nk5hdGl2ZSwgSGtkZlNoYTM4NE5hdGl2ZSwgSGtkZlNoYTUxMk5hdGl2ZSwgfSBmcm9tIFwiLi9zcmMva2Rmcy9oa2RmLmpzXCI7XG5leHBvcnQgeyBBRUFEX1VTQUdFUyB9IGZyb20gXCIuL3NyYy9pbnRlcmZhY2VzL2FlYWRFbmNyeXB0aW9uQ29udGV4dC5qc1wiO1xuZXhwb3J0IHsgS0VNX1VTQUdFUyB9IGZyb20gXCIuL3NyYy9pbnRlcmZhY2VzL2Roa2VtUHJpbWl0aXZlcy5qc1wiO1xuZXhwb3J0IHsgTEFCRUxfREtQX1BSSywgTEFCRUxfU0sgfSBmcm9tIFwiLi9zcmMvaW50ZXJmYWNlcy9kaGtlbVByaW1pdGl2ZXMuanNcIjtcbmV4cG9ydCB7IFNVSVRFX0lEX0hFQURFUl9LRU0gfSBmcm9tIFwiLi9zcmMvaW50ZXJmYWNlcy9rZW1JbnRlcmZhY2UuanNcIjtcbmV4cG9ydCB7IEVNUFRZLCBJTkZPX0xFTkdUSF9MSU1JVCwgSU5QVVRfTEVOR1RIX0xJTUlULCBNSU5JTVVNX1BTS19MRU5HVEgsIH0gZnJvbSBcIi4vc3JjL2NvbnN0cy5qc1wiO1xuZXhwb3J0IHsgYmFzZTY0VXJsVG9CeXRlcywgY29uY2F0LCBoZXhUb0J5dGVzLCBpMk9zcCwgaXNDcnlwdG9LZXlQYWlyLCBpc0Rlbm8sIGlzRGVub1YxLCBrZW1Ub0tleUdlbkFsZ29yaXRobSwgbG9hZENyeXB0bywgbG9hZFN1YnRsZUNyeXB0bywgeG9yLCB9IGZyb20gXCIuL3NyYy91dGlscy9taXNjLmpzXCI7XG5leHBvcnQgeyBobWFjIH0gZnJvbSBcIi4vc3JjL2hhc2gvaG1hYy5qc1wiO1xuZXhwb3J0IHsgc2hhMjU2LCBzaGEzODQsIHNoYTUxMiB9IGZyb20gXCIuL3NyYy9oYXNoL3NoYTIuanNcIjtcbmV4cG9ydCB7IG1vZCwgcG93MiB9IGZyb20gXCIuL3NyYy9jdXJ2ZS9tb2R1bGFyLmpzXCI7XG5leHBvcnQgeyBtb250Z29tZXJ5IH0gZnJvbSBcIi4vc3JjL2N1cnZlL21vbnRnb21lcnkuanNcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/algorithm.js":
/*!*************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/algorithm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeAlgorithm: () => (/* binding */ NativeAlgorithm)\n/* harmony export */ });\n/* harmony import */ var _dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_dnt.shims.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/_dnt.shims.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n\n\nasync function loadSubtleCrypto() {\n    if (_dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 19)); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.NotSupportedError(e);\n    }\n}\nclass NativeAlgorithm {\n    constructor() {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n    }\n    async _setup() {\n        if (this._api !== undefined) {\n            return;\n        }\n        this._api = await loadSubtleCrypto();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9hbGdvcml0aG0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0k7QUFDaEQ7QUFDQSxRQUFRLHdEQUFxQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsWUFBWSxRQUFRLGtIQUFnQixFQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5REFBaUI7QUFDbkM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29tbW9uL2VzbS9zcmMvYWxnb3JpdGhtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGRudFNoaW0gZnJvbSBcIi4uL19kbnQuc2hpbXMuanNcIjtcbmltcG9ydCB7IE5vdFN1cHBvcnRlZEVycm9yIH0gZnJvbSBcIi4vZXJyb3JzLmpzXCI7XG5hc3luYyBmdW5jdGlvbiBsb2FkU3VidGxlQ3J5cHRvKCkge1xuICAgIGlmIChkbnRTaGltLmRudEdsb2JhbFRoaXMgIT09IHVuZGVmaW5lZCAmJiBnbG9iYWxUaGlzLmNyeXB0byAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIEJyb3dzZXJzLCBOb2RlLmpzID49IHYxOSwgQ2xvdWRmbGFyZSBXb3JrZXJzLCBCdW4sIGV0Yy5cbiAgICAgICAgcmV0dXJuIGdsb2JhbFRoaXMuY3J5cHRvLnN1YnRsZTtcbiAgICB9XG4gICAgLy8gTm9kZS5qcyA8PSB2MThcbiAgICB0cnkge1xuICAgICAgICAvLyBAdHMtaWdub3JlOiB0byBpZ25vcmUgXCJjcnlwdG9cIlxuICAgICAgICBjb25zdCB7IHdlYmNyeXB0byB9ID0gYXdhaXQgaW1wb3J0KFwiY3J5cHRvXCIpOyAvLyBub2RlOmNyeXB0b1xuICAgICAgICByZXR1cm4gd2ViY3J5cHRvLnN1YnRsZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IE5vdFN1cHBvcnRlZEVycm9yKGUpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOYXRpdmVBbGdvcml0aG0ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfYXBpXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIF9zZXR1cCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2FwaSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYXBpID0gYXdhaXQgbG9hZFN1YnRsZUNyeXB0bygpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/algorithm.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js":
/*!**********************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/consts.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY: () => (/* binding */ EMPTY),\n/* harmony export */   INFO_LENGTH_LIMIT: () => (/* binding */ INFO_LENGTH_LIMIT),\n/* harmony export */   INPUT_LENGTH_LIMIT: () => (/* binding */ INPUT_LENGTH_LIMIT),\n/* harmony export */   MINIMUM_PSK_LENGTH: () => (/* binding */ MINIMUM_PSK_LENGTH)\n/* harmony export */ });\n// The input length limit (psk, psk_id, info, exporter_context, ikm).\nconst INPUT_LENGTH_LIMIT = 8192;\nconst INFO_LENGTH_LIMIT = 65536;\n// The minimum length of a PSK.\nconst MINIMUM_PSK_LENGTH = 32;\n// b\"\"\nconst EMPTY = new Uint8Array(0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9jb25zdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ087QUFDQTtBQUNQO0FBQ087QUFDUDtBQUNPIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL2NvbnN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgaW5wdXQgbGVuZ3RoIGxpbWl0IChwc2ssIHBza19pZCwgaW5mbywgZXhwb3J0ZXJfY29udGV4dCwgaWttKS5cbmV4cG9ydCBjb25zdCBJTlBVVF9MRU5HVEhfTElNSVQgPSA4MTkyO1xuZXhwb3J0IGNvbnN0IElORk9fTEVOR1RIX0xJTUlUID0gNjU1MzY7XG4vLyBUaGUgbWluaW11bSBsZW5ndGggb2YgYSBQU0suXG5leHBvcnQgY29uc3QgTUlOSU1VTV9QU0tfTEVOR1RIID0gMzI7XG4vLyBiXCJcIlxuZXhwb3J0IGNvbnN0IEVNUFRZID0gbmV3IFVpbnQ4QXJyYXkoMCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/curve.js":
/*!***************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/curve/curve.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createKeygen: () => (/* binding */ createKeygen)\n/* harmony export */ });\n/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/abstract/curve.ts\n */\nfunction createKeygen(\n// deno-lint-ignore ban-types\nrandomSecretKey, getPublicKey) {\n    return function keygen(seed) {\n        const secretKey = randomSecretKey(seed);\n        return { secretKey, publicKey: getPublicKey(secretKey) };\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9jdXJ2ZS9jdXJ2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9jdXJ2ZS9jdXJ2ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBpcyBiYXNlZCBvbiBub2JsZS1jdXJ2ZXMgKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtY3VydmVzKS5cbiAqXG4gKiBub2JsZS1jdXJ2ZXMgLSBNSVQgTGljZW5zZSAoYykgMjAyMiBQYXVsIE1pbGxlciAocGF1bG1pbGxyLmNvbSlcbiAqXG4gKiBUaGUgb3JpZ2luYWwgZmlsZSBpcyBsb2NhdGVkIGF0OlxuICogaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1jdXJ2ZXMvYmxvYi9iOWQ0OWQyYjQxZDU1MDU3MWEwYzViZTQ0M2VjYjYyMTA5ZmEzMzczL3NyYy9hYnN0cmFjdC9jdXJ2ZS50c1xuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlS2V5Z2VuKFxuLy8gZGVuby1saW50LWlnbm9yZSBiYW4tdHlwZXNcbnJhbmRvbVNlY3JldEtleSwgZ2V0UHVibGljS2V5KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGtleWdlbihzZWVkKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9IHJhbmRvbVNlY3JldEtleShzZWVkKTtcbiAgICAgICAgcmV0dXJuIHsgc2VjcmV0S2V5LCBwdWJsaWNLZXk6IGdldFB1YmxpY0tleShzZWNyZXRLZXkpIH07XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/curve.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/modular.js":
/*!*****************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/curve/modular.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   pow2: () => (/* binding */ pow2)\n/* harmony export */ });\n/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/abstract/modular.ts\n */\n/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Numbers aren't used in x25519 / x448 builds\n// prettier-ignore\nconst _0n = /* @__PURE__ */ BigInt(0);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9jdXJ2ZS9tb2R1bGFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9jdXJ2ZS9tb2R1bGFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIGlzIGJhc2VkIG9uIG5vYmxlLWN1cnZlcyAoaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1jdXJ2ZXMpLlxuICpcbiAqIG5vYmxlLWN1cnZlcyAtIE1JVCBMaWNlbnNlIChjKSAyMDIyIFBhdWwgTWlsbGVyIChwYXVsbWlsbHIuY29tKVxuICpcbiAqIFRoZSBvcmlnaW5hbCBmaWxlIGlzIGxvY2F0ZWQgYXQ6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL25vYmxlLWN1cnZlcy9ibG9iL2I5ZDQ5ZDJiNDFkNTUwNTcxYTBjNWJlNDQzZWNiNjIxMDlmYTMzNzMvc3JjL2Fic3RyYWN0L21vZHVsYXIudHNcbiAqL1xuLyoqXG4gKiBVdGlscyBmb3IgbW9kdWxhciBkaXZpc2lvbiBhbmQgZmllbGRzLlxuICogRmllbGQgb3ZlciAxMSBpcyBhIGZpbml0ZSAoR2Fsb2lzKSBmaWVsZCBpcyBpbnRlZ2VyIG51bWJlciBvcGVyYXRpb25zIGBtb2QgMTFgLlxuICogVGhlcmUgaXMgbm8gZGl2aXNpb246IGl0IGlzIHJlcGxhY2VkIGJ5IG1vZHVsYXIgbXVsdGlwbGljYXRpdmUgaW52ZXJzZS5cbiAqIEBtb2R1bGVcbiAqL1xuLyohIG5vYmxlLWN1cnZlcyAtIE1JVCBMaWNlbnNlIChjKSAyMDIyIFBhdWwgTWlsbGVyIChwYXVsbWlsbHIuY29tKSAqL1xuLy8gTnVtYmVycyBhcmVuJ3QgdXNlZCBpbiB4MjU1MTkgLyB4NDQ4IGJ1aWxkc1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCBfMG4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDApO1xuLy8gQ2FsY3VsYXRlcyBhIG1vZHVsbyBiXG5leHBvcnQgZnVuY3Rpb24gbW9kKGEsIGIpIHtcbiAgICBjb25zdCByZXN1bHQgPSBhICUgYjtcbiAgICByZXR1cm4gcmVzdWx0ID49IF8wbiA/IHJlc3VsdCA6IGIgKyByZXN1bHQ7XG59XG4vKiogRG9lcyBgeF4oMl5wb3dlcilgIG1vZCBwLiBgcG93MigzMCwgNClgID09IGAzMF4oMl40KWAgKi9cbmV4cG9ydCBmdW5jdGlvbiBwb3cyKHgsIHBvd2VyLCBtb2R1bG8pIHtcbiAgICBsZXQgcmVzID0geDtcbiAgICB3aGlsZSAocG93ZXItLSA+IF8wbikge1xuICAgICAgICByZXMgKj0gcmVzO1xuICAgICAgICByZXMgJT0gbW9kdWxvO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/modular.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/montgomery.js":
/*!********************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/curve/montgomery.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   montgomery: () => (/* binding */ montgomery)\n/* harmony export */ });\n/* harmony import */ var _utils_noble_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/noble.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js\");\n/* harmony import */ var _curve_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/curve.js\");\n/* harmony import */ var _modular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modular.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/modular.js\");\n/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/abstract/montgomery.ts\n */\n/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nfunction validateOpts(curve) {\n    (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.validateObject)(curve, {\n        adjustScalarBytes: \"function\",\n        powPminus2: \"function\",\n    });\n    return Object.freeze({ ...curve });\n}\nfunction montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P, type, adjustScalarBytes, powPminus2, randomBytes: rand } = CURVE;\n    const is25519 = type === \"x25519\";\n    if (!is25519 && type !== \"x448\")\n        throw new Error(\"invalid type\");\n    const randomBytes_ = rand || _utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.randomBytesAsync;\n    const montgomeryBits = is25519 ? 255 : 448;\n    const fieldLen = is25519 ? 32 : 56;\n    const Gu = is25519 ? BigInt(9) : BigInt(5);\n    // RFC 7748 #5:\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519 and\n    // (156326 - 2) / 4 = 39081 for curve448/X448\n    // const a = is25519 ? 156326n : 486662n;\n    const a24 = is25519 ? BigInt(121665) : BigInt(39081);\n    // RFC: x25519 \"the resulting integer is of the form 2^254 plus\n    // eight times a value between 0 and 2^251 - 1 (inclusive)\"\n    // x448: \"2^447 plus four times a value between 0 and 2^445 - 1 (inclusive)\"\n    const minScalar = is25519 ? _2n ** BigInt(254) : _2n ** BigInt(447);\n    const maxAdded = is25519\n        ? BigInt(8) * _2n ** BigInt(251) - _1n\n        : BigInt(4) * _2n ** BigInt(445) - _1n;\n    const maxScalar = minScalar + maxAdded + _1n; // (inclusive)\n    const modP = (n) => (0,_modular_js__WEBPACK_IMPORTED_MODULE_2__.mod)(n, P);\n    const GuBytes = encodeU(Gu);\n    function encodeU(u) {\n        return (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.numberToBytesLE)(modP(u), fieldLen);\n    }\n    function decodeU(u) {\n        const _u = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)((0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(u, fieldLen, \"uCoordinate\"));\n        // RFC: When receiving such an array, implementations of X25519\n        // (but not X448) MUST mask the most significant bit in the final byte.\n        if (is25519)\n            _u[31] &= 127; // 0b0111_1111\n        // RFC: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.  The non-canonical\n        // values are 2^255 - 19 through 2^255 - 1 for X25519 and 2^448 - 2^224\n        // - 1 through 2^448 - 1 for X448.\n        return modP((0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(_u));\n    }\n    function decodeScalar(scalar) {\n        return (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.bytesToNumberLE)(adjustScalarBytes((0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.copyBytes)((0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(scalar, fieldLen, \"scalar\"))));\n    }\n    function scalarMult(scalar, u) {\n        const pu = montgomeryLadder(decodeU(u), decodeScalar(scalar));\n        // Some public keys are useless, of low-order. Curve author doesn't think\n        // it needs to be validated, but we do it nonetheless.\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error(\"invalid private or public key received\");\n        return encodeU(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    const getPublicKey = scalarMultBase;\n    const getSharedSecret = scalarMult;\n    // cswap from RFC7748 \"example code\"\n    function cswap(swap, x_2, x_3) {\n        // dummy = mask(swap) AND (x_2 XOR x_3)\n        // Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n        // and x_3, computed, e.g., as mask(swap) = 0 - swap.\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy); // x_2 = x_2 XOR dummy\n        x_3 = modP(x_3 + dummy); // x_3 = x_3 XOR dummy\n        return { x_2, x_3 };\n    }\n    /**\n     * Montgomery x-only multiplication ladder.\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(u, scalar) {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aInRange)(\"u\", u, _0n, P);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aInRange)(\"scalar\", scalar, minScalar, maxScalar);\n        const k = scalar;\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n            ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        ({ x_2, x_3 } = cswap(swap, x_2, x_3));\n        ({ x_2: z_2, x_3: z_3 } = cswap(swap, z_2, z_3));\n        const z2 = powPminus2(z_2); // `Fp.pow(x, P - _2n)` is much slower equivalent\n        return modP(x_2 * z2); // Return x_2 * (z_2^(p - 2))\n    }\n    const lengths = {\n        secretKey: fieldLen,\n        publicKey: fieldLen,\n        seed: fieldLen,\n    };\n    const randomSecretKey = async (seed) => {\n        if (seed === undefined) {\n            seed = await randomBytes_(fieldLen);\n        }\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(seed, lengths.seed, \"seed\");\n        return seed;\n    };\n    const utils = { randomSecretKey };\n    return Object.freeze({\n        keygen: (0,_curve_js__WEBPACK_IMPORTED_MODULE_1__.createKeygen)(randomSecretKey, getPublicKey),\n        getSharedSecret,\n        getPublicKey,\n        scalarMult,\n        scalarMultBase,\n        utils,\n        GuBytes: GuBytes.slice(),\n        lengths,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/curve/montgomery.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js":
/*!**********************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/errors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DecapError: () => (/* binding */ DecapError),\n/* harmony export */   DeriveKeyPairError: () => (/* binding */ DeriveKeyPairError),\n/* harmony export */   DeserializeError: () => (/* binding */ DeserializeError),\n/* harmony export */   EncapError: () => (/* binding */ EncapError),\n/* harmony export */   ExportError: () => (/* binding */ ExportError),\n/* harmony export */   HpkeError: () => (/* binding */ HpkeError),\n/* harmony export */   InvalidParamError: () => (/* binding */ InvalidParamError),\n/* harmony export */   MessageLimitReachedError: () => (/* binding */ MessageLimitReachedError),\n/* harmony export */   NotSupportedError: () => (/* binding */ NotSupportedError),\n/* harmony export */   OpenError: () => (/* binding */ OpenError),\n/* harmony export */   SealError: () => (/* binding */ SealError),\n/* harmony export */   SerializeError: () => (/* binding */ SerializeError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError)\n/* harmony export */ });\n/**\n * The base error class of hpke-js.\n * @group Errors\n */\nclass HpkeError extends Error {\n    constructor(e) {\n        let message;\n        if (e instanceof Error) {\n            message = e.message;\n        }\n        else if (typeof e === \"string\") {\n            message = e;\n        }\n        else {\n            message = \"\";\n        }\n        super(message);\n        this.name = this.constructor.name;\n    }\n}\n/**\n * Invalid parameter.\n * @group Errors\n */\nclass InvalidParamError extends HpkeError {\n}\n/**\n * KEM input or output validation failure.\n * @group Errors\n */\nclass ValidationError extends HpkeError {\n}\n/**\n * Public or private key serialization failure.\n * @group Errors\n */\nclass SerializeError extends HpkeError {\n}\n/**\n * Public or private key deserialization failure.\n * @group Errors\n */\nclass DeserializeError extends HpkeError {\n}\n/**\n * encap() failure.\n * @group Errors\n */\nclass EncapError extends HpkeError {\n}\n/**\n * decap() failure.\n * @group Errors\n */\nclass DecapError extends HpkeError {\n}\n/**\n * Secret export failure.\n * @group Errors\n */\nclass ExportError extends HpkeError {\n}\n/**\n * seal() failure.\n * @group Errors\n */\nclass SealError extends HpkeError {\n}\n/**\n * open() failure.\n * @group Errors\n */\nclass OpenError extends HpkeError {\n}\n/**\n * Sequence number overflow on the encryption context.\n * @group Errors\n */\nclass MessageLimitReachedError extends HpkeError {\n}\n/**\n * Key pair derivation failure.\n * @group Errors\n */\nclass DeriveKeyPairError extends HpkeError {\n}\n/**\n * Not supported failure.\n * @group Errors\n */\nclass NotSupportedError extends HpkeError {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29tbW9uL2VzbS9zcmMvZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgZXJyb3IgY2xhc3Mgb2YgaHBrZS1qcy5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIEhwa2VFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlKSB7XG4gICAgICAgIGxldCBtZXNzYWdlO1xuICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICBtZXNzYWdlID0gZS5tZXNzYWdlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBtZXNzYWdlID0gZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgfVxufVxuLyoqXG4gKiBJbnZhbGlkIHBhcmFtZXRlci5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIEludmFsaWRQYXJhbUVycm9yIGV4dGVuZHMgSHBrZUVycm9yIHtcbn1cbi8qKlxuICogS0VNIGlucHV0IG9yIG91dHB1dCB2YWxpZGF0aW9uIGZhaWx1cmUuXG4gKiBAZ3JvdXAgRXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBWYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBIcGtlRXJyb3Ige1xufVxuLyoqXG4gKiBQdWJsaWMgb3IgcHJpdmF0ZSBrZXkgc2VyaWFsaXphdGlvbiBmYWlsdXJlLlxuICogQGdyb3VwIEVycm9yc1xuICovXG5leHBvcnQgY2xhc3MgU2VyaWFsaXplRXJyb3IgZXh0ZW5kcyBIcGtlRXJyb3Ige1xufVxuLyoqXG4gKiBQdWJsaWMgb3IgcHJpdmF0ZSBrZXkgZGVzZXJpYWxpemF0aW9uIGZhaWx1cmUuXG4gKiBAZ3JvdXAgRXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBEZXNlcmlhbGl6ZUVycm9yIGV4dGVuZHMgSHBrZUVycm9yIHtcbn1cbi8qKlxuICogZW5jYXAoKSBmYWlsdXJlLlxuICogQGdyb3VwIEVycm9yc1xuICovXG5leHBvcnQgY2xhc3MgRW5jYXBFcnJvciBleHRlbmRzIEhwa2VFcnJvciB7XG59XG4vKipcbiAqIGRlY2FwKCkgZmFpbHVyZS5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIERlY2FwRXJyb3IgZXh0ZW5kcyBIcGtlRXJyb3Ige1xufVxuLyoqXG4gKiBTZWNyZXQgZXhwb3J0IGZhaWx1cmUuXG4gKiBAZ3JvdXAgRXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHBvcnRFcnJvciBleHRlbmRzIEhwa2VFcnJvciB7XG59XG4vKipcbiAqIHNlYWwoKSBmYWlsdXJlLlxuICogQGdyb3VwIEVycm9yc1xuICovXG5leHBvcnQgY2xhc3MgU2VhbEVycm9yIGV4dGVuZHMgSHBrZUVycm9yIHtcbn1cbi8qKlxuICogb3BlbigpIGZhaWx1cmUuXG4gKiBAZ3JvdXAgRXJyb3JzXG4gKi9cbmV4cG9ydCBjbGFzcyBPcGVuRXJyb3IgZXh0ZW5kcyBIcGtlRXJyb3Ige1xufVxuLyoqXG4gKiBTZXF1ZW5jZSBudW1iZXIgb3ZlcmZsb3cgb24gdGhlIGVuY3J5cHRpb24gY29udGV4dC5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2VMaW1pdFJlYWNoZWRFcnJvciBleHRlbmRzIEhwa2VFcnJvciB7XG59XG4vKipcbiAqIEtleSBwYWlyIGRlcml2YXRpb24gZmFpbHVyZS5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIERlcml2ZUtleVBhaXJFcnJvciBleHRlbmRzIEhwa2VFcnJvciB7XG59XG4vKipcbiAqIE5vdCBzdXBwb3J0ZWQgZmFpbHVyZS5cbiAqIEBncm91cCBFcnJvcnNcbiAqL1xuZXhwb3J0IGNsYXNzIE5vdFN1cHBvcnRlZEVycm9yIGV4dGVuZHMgSHBrZUVycm9yIHtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/hmac.js":
/*!*************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/hash/hmac.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _HMAC: () => (/* binding */ _HMAC),\n/* harmony export */   hmac: () => (/* binding */ hmac)\n/* harmony export */ });\n/* harmony import */ var _utils_noble_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/noble.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js\");\n// deno-lint-ignore-file no-explicit-any\n/**\n * This file is based on noble-hashes (https://github.com/paulmillr/noble-hashes).\n *\n * noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-hashes/blob/2e0c00e1aa134082ba1380bf3afb8b1641f60fed/src/hmac.ts\n */\n/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\n\nclass _HMAC {\n    constructor(hash, key) {\n        Object.defineProperty(this, \"oHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"iHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"finished\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"destroyed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.ahash)(hash);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(key, undefined, \"key\");\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== \"function\") {\n            throw new Error(\"Expected instance of class which extends utils.Hash\");\n        }\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.clean)(pad);\n    }\n    update(buf) {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(out, this.outputLen, \"output\");\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to ||= Object.create(Object.getPrototypeOf(this), {});\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nconst hmac = (hash, key, message) => new _HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new _HMAC(hash, key);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9oYXNoL2htYWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUU7QUFDNUQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVEsc0RBQUs7QUFDYixRQUFRLHVEQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQSxRQUFRLHNEQUFLO0FBQ2I7QUFDQTtBQUNBLFFBQVEsd0RBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQU87QUFDZixRQUFRLHVEQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQsZ0JBQWdCLHlEQUF5RDtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsWUFBWSxTQUFTO0FBQ3JCO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL2hhc2gvaG1hYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBkZW5vLWxpbnQtaWdub3JlLWZpbGUgbm8tZXhwbGljaXQtYW55XG4vKipcbiAqIFRoaXMgZmlsZSBpcyBiYXNlZCBvbiBub2JsZS1oYXNoZXMgKGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtaGFzaGVzKS5cbiAqXG4gKiBub2JsZS1oYXNoZXMgLSBNSVQgTGljZW5zZSAoYykgMjAyMiBQYXVsIE1pbGxlciAocGF1bG1pbGxyLmNvbSlcbiAqXG4gKiBUaGUgb3JpZ2luYWwgZmlsZSBpcyBsb2NhdGVkIGF0OlxuICogaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1oYXNoZXMvYmxvYi8yZTBjMDBlMWFhMTM0MDgyYmExMzgwYmYzYWZiOGIxNjQxZjYwZmVkL3NyYy9obWFjLnRzXG4gKi9cbi8qKlxuICogSE1BQzogUkZDMjEwNCBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGNvZGUuXG4gKiBAbW9kdWxlXG4gKi9cbmltcG9ydCB7IGFieXRlcywgYWV4aXN0cywgYWhhc2gsIGNsZWFuLCB9IGZyb20gXCIuLi91dGlscy9ub2JsZS5qc1wiO1xuZXhwb3J0IGNsYXNzIF9ITUFDIHtcbiAgICBjb25zdHJ1Y3RvcihoYXNoLCBrZXkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwib0hhc2hcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaUhhc2hcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYmxvY2tMZW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwib3V0cHV0TGVuXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImZpbmlzaGVkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZGVzdHJveWVkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgYWhhc2goaGFzaCk7XG4gICAgICAgIGFieXRlcyhrZXksIHVuZGVmaW5lZCwgXCJrZXlcIik7XG4gICAgICAgIHRoaXMuaUhhc2ggPSBoYXNoLmNyZWF0ZSgpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuaUhhc2gudXBkYXRlICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIGluc3RhbmNlIG9mIGNsYXNzIHdoaWNoIGV4dGVuZHMgdXRpbHMuSGFzaFwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmJsb2NrTGVuID0gdGhpcy5pSGFzaC5ibG9ja0xlbjtcbiAgICAgICAgdGhpcy5vdXRwdXRMZW4gPSB0aGlzLmlIYXNoLm91dHB1dExlbjtcbiAgICAgICAgY29uc3QgYmxvY2tMZW4gPSB0aGlzLmJsb2NrTGVuO1xuICAgICAgICBjb25zdCBwYWQgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIC8vIGJsb2NrTGVuIGNhbiBiZSBiaWdnZXIgdGhhbiBvdXRwdXRMZW5cbiAgICAgICAgcGFkLnNldChrZXkubGVuZ3RoID4gYmxvY2tMZW4gPyBoYXNoLmNyZWF0ZSgpLnVwZGF0ZShrZXkpLmRpZ2VzdCgpIDoga2V5KTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWQubGVuZ3RoOyBpKyspXG4gICAgICAgICAgICBwYWRbaV0gXj0gMHgzNjtcbiAgICAgICAgdGhpcy5pSGFzaC51cGRhdGUocGFkKTtcbiAgICAgICAgLy8gQnkgZG9pbmcgdXBkYXRlIChwcm9jZXNzaW5nIG9mIGZpcnN0IGJsb2NrKSBvZiBvdXRlciBoYXNoIGhlcmUgd2UgY2FuIHJlLXVzZSBpdCBiZXR3ZWVuIG11bHRpcGxlIGNhbGxzIHZpYSBjbG9uZVxuICAgICAgICB0aGlzLm9IYXNoID0gaGFzaC5jcmVhdGUoKTtcbiAgICAgICAgLy8gVW5kbyBpbnRlcm5hbCBYT1IgJiYgYXBwbHkgb3V0ZXIgWE9SXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFkLmxlbmd0aDsgaSsrKVxuICAgICAgICAgICAgcGFkW2ldIF49IDB4MzYgXiAweDVjO1xuICAgICAgICB0aGlzLm9IYXNoLnVwZGF0ZShwYWQpO1xuICAgICAgICBjbGVhbihwYWQpO1xuICAgIH1cbiAgICB1cGRhdGUoYnVmKSB7XG4gICAgICAgIGFleGlzdHModGhpcyk7XG4gICAgICAgIHRoaXMuaUhhc2gudXBkYXRlKGJ1Zik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3RJbnRvKG91dCkge1xuICAgICAgICBhZXhpc3RzKHRoaXMpO1xuICAgICAgICBhYnl0ZXMob3V0LCB0aGlzLm91dHB1dExlbiwgXCJvdXRwdXRcIik7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmlIYXNoLmRpZ2VzdEludG8ob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC51cGRhdGUob3V0KTtcbiAgICAgICAgdGhpcy5vSGFzaC5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KHRoaXMub0hhc2gub3V0cHV0TGVuKTtcbiAgICAgICAgdGhpcy5kaWdlc3RJbnRvKG91dCk7XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICAgIF9jbG9uZUludG8odG8pIHtcbiAgICAgICAgLy8gQ3JlYXRlIG5ldyBpbnN0YW5jZSB3aXRob3V0IGNhbGxpbmcgY29uc3RydWN0b3Igc2luY2Uga2V5IGFscmVhZHkgaW4gc3RhdGUgYW5kIHdlIGRvbid0IGtub3cgaXQuXG4gICAgICAgIHRvIHx8PSBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKSwge30pO1xuICAgICAgICBjb25zdCB7IG9IYXNoLCBpSGFzaCwgZmluaXNoZWQsIGRlc3Ryb3llZCwgYmxvY2tMZW4sIG91dHB1dExlbiB9ID0gdGhpcztcbiAgICAgICAgdG8gPSB0bztcbiAgICAgICAgdG8uZmluaXNoZWQgPSBmaW5pc2hlZDtcbiAgICAgICAgdG8uZGVzdHJveWVkID0gZGVzdHJveWVkO1xuICAgICAgICB0by5ibG9ja0xlbiA9IGJsb2NrTGVuO1xuICAgICAgICB0by5vdXRwdXRMZW4gPSBvdXRwdXRMZW47XG4gICAgICAgIHRvLm9IYXNoID0gb0hhc2guX2Nsb25lSW50byh0by5vSGFzaCk7XG4gICAgICAgIHRvLmlIYXNoID0gaUhhc2guX2Nsb25lSW50byh0by5pSGFzaCk7XG4gICAgICAgIHJldHVybiB0bztcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbG9uZUludG8oKTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLm9IYXNoLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5pSGFzaC5kZXN0cm95KCk7XG4gICAgfVxufVxuLyoqXG4gKiBITUFDOiBSRkMyMTA0IG1lc3NhZ2UgYXV0aGVudGljYXRpb24gY29kZS5cbiAqIEBwYXJhbSBoYXNoIC0gZnVuY3Rpb24gdGhhdCB3b3VsZCBiZSB1c2VkIGUuZy4gc2hhMjU2XG4gKiBAcGFyYW0ga2V5IC0gbWVzc2FnZSBrZXlcbiAqIEBwYXJhbSBtZXNzYWdlIC0gbWVzc2FnZSBkYXRhXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgaG1hYyB9IGZyb20gJ0Bub2JsZS9oYXNoZXMvaG1hYyc7XG4gKiBpbXBvcnQgeyBzaGEyNTYgfSBmcm9tICdAbm9ibGUvaGFzaGVzL3NoYTInO1xuICogY29uc3QgbWFjMSA9IGhtYWMoc2hhMjU2LCAna2V5JywgJ21lc3NhZ2UnKTtcbiAqL1xuZXhwb3J0IGNvbnN0IGhtYWMgPSAoaGFzaCwga2V5LCBtZXNzYWdlKSA9PiBuZXcgX0hNQUMoaGFzaCwga2V5KS51cGRhdGUobWVzc2FnZSkuZGlnZXN0KCk7XG5obWFjLmNyZWF0ZSA9IChoYXNoLCBrZXkpID0+IG5ldyBfSE1BQyhoYXNoLCBrZXkpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/hmac.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/md.js":
/*!***********************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/hash/md.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chi: () => (/* binding */ Chi),\n/* harmony export */   HashMD: () => (/* binding */ HashMD),\n/* harmony export */   Maj: () => (/* binding */ Maj),\n/* harmony export */   SHA256_IV: () => (/* binding */ SHA256_IV),\n/* harmony export */   SHA384_IV: () => (/* binding */ SHA384_IV),\n/* harmony export */   SHA512_IV: () => (/* binding */ SHA512_IV)\n/* harmony export */ });\n/* harmony import */ var _utils_noble_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/noble.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js\");\n// deno-lint-ignore-file no-explicit-any\n/**\n * This file is based on noble-hashes (https://github.com/paulmillr/noble-hashes).\n *\n * noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-hashes/blob/2e0c00e1aa134082ba1380bf3afb8b1641f60fed/src/_md.ts\n */\n/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\n\n/** Choice: a ? b : c */\nfunction Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nfunction Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nclass HashMD {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        Object.defineProperty(this, \"blockLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputLen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"padOffset\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isLE\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // For partial updates less than block size\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"finished\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"pos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"destroyed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);\n    }\n    update(data) {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.abytes)(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen) {\n                    this.process(dataView, pos);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aexists)(this);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.aoutput)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.clean)(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        view.setBigUint64(blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which must be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error(\"_sha2: outputLen must be aligned to 32bit\");\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length) {\n            throw new Error(\"_sha2: outputLen bigger than state\");\n        }\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to ||= new this.constructor();\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nconst SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nconst SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d,\n    0xc1059ed8,\n    0x629a292a,\n    0x367cd507,\n    0x9159015a,\n    0x3070dd17,\n    0x152fecd8,\n    0xf70e5939,\n    0x67332667,\n    0xffc00b31,\n    0x8eb44a87,\n    0x68581511,\n    0xdb0c2e0d,\n    0x64f98fa7,\n    0x47b5481d,\n    0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nconst SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667,\n    0xf3bcc908,\n    0xbb67ae85,\n    0x84caa73b,\n    0x3c6ef372,\n    0xfe94f82b,\n    0xa54ff53a,\n    0x5f1d36f1,\n    0x510e527f,\n    0xade682d1,\n    0x9b05688c,\n    0x2b3e6c1f,\n    0x1f83d9ab,\n    0xfb41bd6b,\n    0x5be0cd19,\n    0x137e2179,\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/md.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/sha2.js":
/*!*************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/hash/sha2.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _SHA256: () => (/* binding */ _SHA256),\n/* harmony export */   _SHA384: () => (/* binding */ _SHA384),\n/* harmony export */   _SHA512: () => (/* binding */ _SHA512),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha384: () => (/* binding */ sha384),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var _md_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./md.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/md.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./u64.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/u64.js\");\n/* harmony import */ var _utils_noble_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/noble.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js\");\n/**\n * This file is based on noble-hashes (https://github.com/paulmillr/noble-hashes).\n *\n * noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-hashes/blob/2e0c00e1aa134082ba1380bf3afb8b1641f60fed/src/sha2.ts\n */\n/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://www.rfc-editor.org/rfc/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\n\n\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2,\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\n/** Internal 32-byte base SHA2 hash class. */\nclass SHA2_32B extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor(outputLen) {\n        super(64, outputLen, 8, false);\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA256_W[i] = view.getUint32(offset, false);\n        }\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(W15, 7) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(W2, 17) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(E, 6) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(E, 11) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(E, 25);\n            const T1 = (H + sigma1 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Chi)(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(A, 2) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(A, 13) ^ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.rotr)(A, 22);\n            const T2 = (sigma0 + (0,_md_js__WEBPACK_IMPORTED_MODULE_0__.Maj)(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.clean)(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.clean)(this.buffer);\n    }\n}\n/** Internal SHA2-256 hash class. */\nclass _SHA256 extends SHA2_32B {\n    constructor() {\n        super(32);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        Object.defineProperty(this, \"A\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[0] | 0\n        });\n        Object.defineProperty(this, \"B\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[1] | 0\n        });\n        Object.defineProperty(this, \"C\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[2] | 0\n        });\n        Object.defineProperty(this, \"D\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[3] | 0\n        });\n        Object.defineProperty(this, \"E\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[4] | 0\n        });\n        Object.defineProperty(this, \"F\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[5] | 0\n        });\n        Object.defineProperty(this, \"G\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[6] | 0\n        });\n        Object.defineProperty(this, \"H\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA256_IV[7] | 0\n        });\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => _u64_js__WEBPACK_IMPORTED_MODULE_1__.split([\n    \"0x428a2f98d728ae22\",\n    \"0x7137449123ef65cd\",\n    \"0xb5c0fbcfec4d3b2f\",\n    \"0xe9b5dba58189dbbc\",\n    \"0x3956c25bf348b538\",\n    \"0x59f111f1b605d019\",\n    \"0x923f82a4af194f9b\",\n    \"0xab1c5ed5da6d8118\",\n    \"0xd807aa98a3030242\",\n    \"0x12835b0145706fbe\",\n    \"0x243185be4ee4b28c\",\n    \"0x550c7dc3d5ffb4e2\",\n    \"0x72be5d74f27b896f\",\n    \"0x80deb1fe3b1696b1\",\n    \"0x9bdc06a725c71235\",\n    \"0xc19bf174cf692694\",\n    \"0xe49b69c19ef14ad2\",\n    \"0xefbe4786384f25e3\",\n    \"0x0fc19dc68b8cd5b5\",\n    \"0x240ca1cc77ac9c65\",\n    \"0x2de92c6f592b0275\",\n    \"0x4a7484aa6ea6e483\",\n    \"0x5cb0a9dcbd41fbd4\",\n    \"0x76f988da831153b5\",\n    \"0x983e5152ee66dfab\",\n    \"0xa831c66d2db43210\",\n    \"0xb00327c898fb213f\",\n    \"0xbf597fc7beef0ee4\",\n    \"0xc6e00bf33da88fc2\",\n    \"0xd5a79147930aa725\",\n    \"0x06ca6351e003826f\",\n    \"0x142929670a0e6e70\",\n    \"0x27b70a8546d22ffc\",\n    \"0x2e1b21385c26c926\",\n    \"0x4d2c6dfc5ac42aed\",\n    \"0x53380d139d95b3df\",\n    \"0x650a73548baf63de\",\n    \"0x766a0abb3c77b2a8\",\n    \"0x81c2c92e47edaee6\",\n    \"0x92722c851482353b\",\n    \"0xa2bfe8a14cf10364\",\n    \"0xa81a664bbc423001\",\n    \"0xc24b8b70d0f89791\",\n    \"0xc76c51a30654be30\",\n    \"0xd192e819d6ef5218\",\n    \"0xd69906245565a910\",\n    \"0xf40e35855771202a\",\n    \"0x106aa07032bbd1b8\",\n    \"0x19a4c116b8d2d0c8\",\n    \"0x1e376c085141ab53\",\n    \"0x2748774cdf8eeb99\",\n    \"0x34b0bcb5e19b48a8\",\n    \"0x391c0cb3c5c95a63\",\n    \"0x4ed8aa4ae3418acb\",\n    \"0x5b9cca4f7763e373\",\n    \"0x682e6ff3d6b2b8a3\",\n    \"0x748f82ee5defb2fc\",\n    \"0x78a5636f43172f60\",\n    \"0x84c87814a1f0ab72\",\n    \"0x8cc702081a6439ec\",\n    \"0x90befffa23631e28\",\n    \"0xa4506cebde82bde9\",\n    \"0xbef9a3f7b2c67915\",\n    \"0xc67178f2e372532b\",\n    \"0xca273eceea26619c\",\n    \"0xd186b8c721c0c207\",\n    \"0xeada7dd6cde0eb1e\",\n    \"0xf57d4f7fee6ed178\",\n    \"0x06f067aa72176fba\",\n    \"0x0a637dc5a2c898a6\",\n    \"0x113f9804bef90dae\",\n    \"0x1b710b35131c471b\",\n    \"0x28db77f523047d84\",\n    \"0x32caab7b40c72493\",\n    \"0x3c9ebe0a15c9bebc\",\n    \"0x431d67c49c100d4c\",\n    \"0x4cc5d4becb3e42b6\",\n    \"0x597f299cfc657e2a\",\n    \"0x5fcb6fab3ad6faec\",\n    \"0x6c44198c4a475817\",\n].map((n) => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n/** Internal 64-byte base SHA2 hash class. */\nclass SHA2_64B extends _md_js__WEBPACK_IMPORTED_MODULE_0__.HashMD {\n    constructor(outputLen) {\n        super(128, outputLen, 16, false);\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32(offset += 4);\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(W15h, W15l, 8) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(W15h, W15l, 8) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBH(W2h, W2l, 61) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBL(W2h, W2l, 61) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(Eh, El, 18) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(Eh, El, 18) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBH(Ah, Al, 34) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBL(Ah, Al, 34) ^\n                _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js__WEBPACK_IMPORTED_MODULE_1__.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.clean)(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.clean)(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/** Internal SHA2-512 hash class. */\nclass _SHA512 extends SHA2_64B {\n    constructor() {\n        super(64);\n        Object.defineProperty(this, \"Ah\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[0] | 0\n        });\n        Object.defineProperty(this, \"Al\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[1] | 0\n        });\n        Object.defineProperty(this, \"Bh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[2] | 0\n        });\n        Object.defineProperty(this, \"Bl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[3] | 0\n        });\n        Object.defineProperty(this, \"Ch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[4] | 0\n        });\n        Object.defineProperty(this, \"Cl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[5] | 0\n        });\n        Object.defineProperty(this, \"Dh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[6] | 0\n        });\n        Object.defineProperty(this, \"Dl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[7] | 0\n        });\n        Object.defineProperty(this, \"Eh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[8] | 0\n        });\n        Object.defineProperty(this, \"El\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[9] | 0\n        });\n        Object.defineProperty(this, \"Fh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[10] | 0\n        });\n        Object.defineProperty(this, \"Fl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[11] | 0\n        });\n        Object.defineProperty(this, \"Gh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[12] | 0\n        });\n        Object.defineProperty(this, \"Gl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[13] | 0\n        });\n        Object.defineProperty(this, \"Hh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[14] | 0\n        });\n        Object.defineProperty(this, \"Hl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA512_IV[15] | 0\n        });\n    }\n}\nclass _SHA384 extends SHA2_64B {\n    constructor() {\n        super(48);\n        Object.defineProperty(this, \"Ah\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[0] | 0\n        });\n        Object.defineProperty(this, \"Al\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[1] | 0\n        });\n        Object.defineProperty(this, \"Bh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[2] | 0\n        });\n        Object.defineProperty(this, \"Bl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[3] | 0\n        });\n        Object.defineProperty(this, \"Ch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[4] | 0\n        });\n        Object.defineProperty(this, \"Cl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[5] | 0\n        });\n        Object.defineProperty(this, \"Dh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[6] | 0\n        });\n        Object.defineProperty(this, \"Dl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[7] | 0\n        });\n        Object.defineProperty(this, \"Eh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[8] | 0\n        });\n        Object.defineProperty(this, \"El\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[9] | 0\n        });\n        Object.defineProperty(this, \"Fh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[10] | 0\n        });\n        Object.defineProperty(this, \"Fl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[11] | 0\n        });\n        Object.defineProperty(this, \"Gh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[12] | 0\n        });\n        Object.defineProperty(this, \"Gl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[13] | 0\n        });\n        Object.defineProperty(this, \"Hh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[14] | 0\n        });\n        Object.defineProperty(this, \"Hl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _md_js__WEBPACK_IMPORTED_MODULE_0__.SHA384_IV[15] | 0\n        });\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634. In JS it's the fastest: even faster than Blake3. Some info:\n *\n * - Trying 2^128 hashes would get 50% chance of collision, using birthday attack.\n * - BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n * - Each sha256 hash is executing 2^18 bit operations.\n * - Good 2024 ASICs can do 200Th/sec with 3500 watts of power, corresponding to 2^36 hashes/joule.\n */\nconst sha256 = /* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.createHasher)(() => new _SHA256(), \n/* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.oidNist)(0x01));\n/** SHA2-512 hash function from RFC 4634. */\nconst sha512 = /* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.createHasher)(() => new _SHA512(), \n/* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.oidNist)(0x03));\n/** SHA2-384 hash function from RFC 4634. */\nconst sha384 = /* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.createHasher)(() => new _SHA384(), \n/* @__PURE__ */ (0,_utils_noble_js__WEBPACK_IMPORTED_MODULE_2__.oidNist)(0x02));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/sha2.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/u64.js":
/*!************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/hash/u64.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   add3H: () => (/* binding */ add3H),\n/* harmony export */   add3L: () => (/* binding */ add3L),\n/* harmony export */   add4H: () => (/* binding */ add4H),\n/* harmony export */   add4L: () => (/* binding */ add4L),\n/* harmony export */   add5H: () => (/* binding */ add5H),\n/* harmony export */   add5L: () => (/* binding */ add5L),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   rotlBH: () => (/* binding */ rotlBH),\n/* harmony export */   rotlBL: () => (/* binding */ rotlBL),\n/* harmony export */   rotlSH: () => (/* binding */ rotlSH),\n/* harmony export */   rotlSL: () => (/* binding */ rotlSL),\n/* harmony export */   rotr32H: () => (/* binding */ rotr32H),\n/* harmony export */   rotr32L: () => (/* binding */ rotr32L),\n/* harmony export */   rotrBH: () => (/* binding */ rotrBH),\n/* harmony export */   rotrBL: () => (/* binding */ rotrBL),\n/* harmony export */   rotrSH: () => (/* binding */ rotrSH),\n/* harmony export */   rotrSL: () => (/* binding */ rotrSL),\n/* harmony export */   shrSH: () => (/* binding */ shrSH),\n/* harmony export */   shrSL: () => (/* binding */ shrSL),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\n/**\n * This file is based on noble-hashes (https://github.com/paulmillr/noble-hashes).\n *\n * noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-hashes/blob/2e0c00e1aa134082ba1380bf3afb8b1641f60fed/src/_u64.ts\n */\n/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le) {\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    }\n    return {\n        h: Number((n >> _32n) & U32_MASK64) | 0,\n        l: Number(n & U32_MASK64) | 0,\n    };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    const Ah = new Uint32Array(len);\n    const Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig,\n    split,\n    toBig,\n    shrSH,\n    shrSL,\n    rotrSH,\n    rotrSL,\n    rotrBH,\n    rotrBL,\n    rotr32H,\n    rotr32L,\n    rotlSH,\n    rotlSL,\n    rotlBH,\n    rotlBL,\n    add,\n    add3L,\n    add3H,\n    add4L,\n    add4H,\n    add5H,\n    add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9oYXNoL3U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QixnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lMO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsR0FBRyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL2hhc2gvdTY0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIGlzIGJhc2VkIG9uIG5vYmxlLWhhc2hlcyAoaHR0cHM6Ly9naXRodWIuY29tL3BhdWxtaWxsci9ub2JsZS1oYXNoZXMpLlxuICpcbiAqIG5vYmxlLWhhc2hlcyAtIE1JVCBMaWNlbnNlIChjKSAyMDIyIFBhdWwgTWlsbGVyIChwYXVsbWlsbHIuY29tKVxuICpcbiAqIFRoZSBvcmlnaW5hbCBmaWxlIGlzIGxvY2F0ZWQgYXQ6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vcGF1bG1pbGxyL25vYmxlLWhhc2hlcy9ibG9iLzJlMGMwMGUxYWExMzQwODJiYTEzODBiZjNhZmI4YjE2NDFmNjBmZWQvc3JjL191NjQudHNcbiAqL1xuLyoqXG4gKiBJbnRlcm5hbCBoZWxwZXJzIGZvciB1NjQuIEJpZ1VpbnQ2NEFycmF5IGlzIHRvbyBzbG93IGFzIHBlciAyMDI1LCBzbyB3ZSBpbXBsZW1lbnQgaXQgdXNpbmcgVWludDMyQXJyYXkuXG4gKiBAdG9kbyByZS1jaGVjayBodHRwczovL2lzc3Vlcy5jaHJvbWl1bS5vcmcvaXNzdWVzLzQyMjEyNTg4XG4gKiBAbW9kdWxlXG4gKi9cbmNvbnN0IFUzMl9NQVNLNjQgPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDIgKiogMzIgLSAxKTtcbmNvbnN0IF8zMm4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDMyKTtcbmZ1bmN0aW9uIGZyb21CaWcobiwgbGUgPSBmYWxzZSkge1xuICAgIGlmIChsZSkge1xuICAgICAgICByZXR1cm4geyBoOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpLCBsOiBOdW1iZXIoKG4gPj4gXzMybikgJiBVMzJfTUFTSzY0KSB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBoOiBOdW1iZXIoKG4gPj4gXzMybikgJiBVMzJfTUFTSzY0KSB8IDAsXG4gICAgICAgIGw6IE51bWJlcihuICYgVTMyX01BU0s2NCkgfCAwLFxuICAgIH07XG59XG5mdW5jdGlvbiBzcGxpdChsc3QsIGxlID0gZmFsc2UpIHtcbiAgICBjb25zdCBsZW4gPSBsc3QubGVuZ3RoO1xuICAgIGNvbnN0IEFoID0gbmV3IFVpbnQzMkFycmF5KGxlbik7XG4gICAgY29uc3QgQWwgPSBuZXcgVWludDMyQXJyYXkobGVuKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHsgaCwgbCB9ID0gZnJvbUJpZyhsc3RbaV0sIGxlKTtcbiAgICAgICAgW0FoW2ldLCBBbFtpXV0gPSBbaCwgbF07XG4gICAgfVxuICAgIHJldHVybiBbQWgsIEFsXTtcbn1cbmNvbnN0IHRvQmlnID0gKGgsIGwpID0+IChCaWdJbnQoaCA+Pj4gMCkgPDwgXzMybikgfCBCaWdJbnQobCA+Pj4gMCk7XG4vLyBmb3IgU2hpZnQgaW4gWzAsIDMyKVxuY29uc3Qgc2hyU0ggPSAoaCwgX2wsIHMpID0+IGggPj4+IHM7XG5jb25zdCBzaHJTTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoMzIgLSBzKSkgfCAobCA+Pj4gcyk7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdHJTSCA9IChoLCBsLCBzKSA9PiAoaCA+Pj4gcykgfCAobCA8PCAoMzIgLSBzKSk7XG5jb25zdCByb3RyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90ckJIID0gKGgsIGwsIHMpID0+IChoIDw8ICg2NCAtIHMpKSB8IChsID4+PiAocyAtIDMyKSk7XG5jb25zdCByb3RyQkwgPSAoaCwgbCwgcykgPT4gKGggPj4+IChzIC0gMzIpKSB8IChsIDw8ICg2NCAtIHMpKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3Igc2hpZnQ9PT0zMiAoanVzdCBzd2FwcyBsJmgpXG5jb25zdCByb3RyMzJIID0gKF9oLCBsKSA9PiBsO1xuY29uc3Qgcm90cjMyTCA9IChoLCBfbCkgPT4gaDtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RsU0ggPSAoaCwgbCwgcykgPT4gKGggPDwgcykgfCAobCA+Pj4gKDMyIC0gcykpO1xuY29uc3Qgcm90bFNMID0gKGgsIGwsIHMpID0+IChsIDw8IHMpIHwgKGggPj4+ICgzMiAtIHMpKTtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90bEJIID0gKGgsIGwsIHMpID0+IChsIDw8IChzIC0gMzIpKSB8IChoID4+PiAoNjQgLSBzKSk7XG5jb25zdCByb3RsQkwgPSAoaCwgbCwgcykgPT4gKGggPDwgKHMgLSAzMikpIHwgKGwgPj4+ICg2NCAtIHMpKTtcbi8vIEpTIHVzZXMgMzItYml0IHNpZ25lZCBpbnRlZ2VycyBmb3IgYml0d2lzZSBvcGVyYXRpb25zIHdoaWNoIG1lYW5zIHdlIGNhbm5vdFxuLy8gc2ltcGxlIHRha2UgY2Fycnkgb3V0IG9mIGxvdyBiaXQgc3VtIGJ5IHNoaWZ0LCB3ZSBuZWVkIHRvIHVzZSBkaXZpc2lvbi5cbmZ1bmN0aW9uIGFkZChBaCwgQWwsIEJoLCBCbCkge1xuICAgIGNvbnN0IGwgPSAoQWwgPj4+IDApICsgKEJsID4+PiAwKTtcbiAgICByZXR1cm4geyBoOiAoQWggKyBCaCArICgobCAvIDIgKiogMzIpIHwgMCkpIHwgMCwgbDogbCB8IDAgfTtcbn1cbi8vIEFkZGl0aW9uIHdpdGggbW9yZSB0aGFuIDIgZWxlbWVudHNcbmNvbnN0IGFkZDNMID0gKEFsLCBCbCwgQ2wpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKTtcbmNvbnN0IGFkZDNIID0gKGxvdywgQWgsIEJoLCBDaCkgPT4gKEFoICsgQmggKyBDaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuY29uc3QgYWRkNEwgPSAoQWwsIEJsLCBDbCwgRGwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCk7XG5jb25zdCBhZGQ0SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoKSA9PiAoQWggKyBCaCArIENoICsgRGggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDVMID0gKEFsLCBCbCwgQ2wsIERsLCBFbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApICsgKERsID4+PiAwKSArIChFbCA+Pj4gMCk7XG5jb25zdCBhZGQ1SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoLCBFaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgRWggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbi8vIHByZXR0aWVyLWlnbm9yZVxuZXhwb3J0IHsgYWRkLCBhZGQzSCwgYWRkM0wsIGFkZDRILCBhZGQ0TCwgYWRkNUgsIGFkZDVMLCBmcm9tQmlnLCByb3RsQkgsIHJvdGxCTCwgcm90bFNILCByb3RsU0wsIHJvdHIzMkgsIHJvdHIzMkwsIHJvdHJCSCwgcm90ckJMLCByb3RyU0gsIHJvdHJTTCwgc2hyU0gsIHNoclNMLCBzcGxpdCwgdG9CaWcsIH07XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IHU2NCA9IHtcbiAgICBmcm9tQmlnLFxuICAgIHNwbGl0LFxuICAgIHRvQmlnLFxuICAgIHNoclNILFxuICAgIHNoclNMLFxuICAgIHJvdHJTSCxcbiAgICByb3RyU0wsXG4gICAgcm90ckJILFxuICAgIHJvdHJCTCxcbiAgICByb3RyMzJILFxuICAgIHJvdHIzMkwsXG4gICAgcm90bFNILFxuICAgIHJvdGxTTCxcbiAgICByb3RsQkgsXG4gICAgcm90bEJMLFxuICAgIGFkZCxcbiAgICBhZGQzTCxcbiAgICBhZGQzSCxcbiAgICBhZGQ0TCxcbiAgICBhZGQ0SCxcbiAgICBhZGQ1SCxcbiAgICBhZGQ1TCxcbn07XG5leHBvcnQgZGVmYXVsdCB1NjQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/hash/u64.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js":
/*!***************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/identifiers.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AeadId: () => (/* binding */ AeadId),\n/* harmony export */   KdfId: () => (/* binding */ KdfId),\n/* harmony export */   KemId: () => (/* binding */ KemId),\n/* harmony export */   Mode: () => (/* binding */ Mode)\n/* harmony export */ });\n/**\n * The supported HPKE modes.\n */\nconst Mode = {\n    Base: 0x00,\n    Psk: 0x01,\n    Auth: 0x02,\n    AuthPsk: 0x03,\n};\n/**\n * The supported Key Encapsulation Mechanism (KEM) identifiers.\n */\nconst KemId = {\n    NotAssigned: 0x0000,\n    DhkemP256HkdfSha256: 0x0010,\n    DhkemP384HkdfSha384: 0x0011,\n    DhkemP521HkdfSha512: 0x0012,\n    DhkemSecp256k1HkdfSha256: 0x0013,\n    DhkemX25519HkdfSha256: 0x0020,\n    DhkemX448HkdfSha512: 0x0021,\n    HybridkemX25519Kyber768: 0x0030,\n    MlKem512: 0x0040,\n    MlKem768: 0x0041,\n    MlKem1024: 0x0042,\n    XWing: 0x647a,\n};\n/**\n * The supported Key Derivation Function (KDF) identifiers.\n */\nconst KdfId = {\n    HkdfSha256: 0x0001,\n    HkdfSha384: 0x0002,\n    HkdfSha512: 0x0003,\n};\n/**\n * The supported Authenticated Encryption with Associated Data (AEAD) identifiers.\n */\nconst AeadId = {\n    Aes128Gcm: 0x0001,\n    Aes256Gcm: 0x0002,\n    Chacha20Poly1305: 0x0003,\n    ExportOnly: 0xFFFF,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pZGVudGlmaWVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29tbW9uL2VzbS9zcmMvaWRlbnRpZmllcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgc3VwcG9ydGVkIEhQS0UgbW9kZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBNb2RlID0ge1xuICAgIEJhc2U6IDB4MDAsXG4gICAgUHNrOiAweDAxLFxuICAgIEF1dGg6IDB4MDIsXG4gICAgQXV0aFBzazogMHgwMyxcbn07XG4vKipcbiAqIFRoZSBzdXBwb3J0ZWQgS2V5IEVuY2Fwc3VsYXRpb24gTWVjaGFuaXNtIChLRU0pIGlkZW50aWZpZXJzLlxuICovXG5leHBvcnQgY29uc3QgS2VtSWQgPSB7XG4gICAgTm90QXNzaWduZWQ6IDB4MDAwMCxcbiAgICBEaGtlbVAyNTZIa2RmU2hhMjU2OiAweDAwMTAsXG4gICAgRGhrZW1QMzg0SGtkZlNoYTM4NDogMHgwMDExLFxuICAgIERoa2VtUDUyMUhrZGZTaGE1MTI6IDB4MDAxMixcbiAgICBEaGtlbVNlY3AyNTZrMUhrZGZTaGEyNTY6IDB4MDAxMyxcbiAgICBEaGtlbVgyNTUxOUhrZGZTaGEyNTY6IDB4MDAyMCxcbiAgICBEaGtlbVg0NDhIa2RmU2hhNTEyOiAweDAwMjEsXG4gICAgSHlicmlka2VtWDI1NTE5S3liZXI3Njg6IDB4MDAzMCxcbiAgICBNbEtlbTUxMjogMHgwMDQwLFxuICAgIE1sS2VtNzY4OiAweDAwNDEsXG4gICAgTWxLZW0xMDI0OiAweDAwNDIsXG4gICAgWFdpbmc6IDB4NjQ3YSxcbn07XG4vKipcbiAqIFRoZSBzdXBwb3J0ZWQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24gKEtERikgaWRlbnRpZmllcnMuXG4gKi9cbmV4cG9ydCBjb25zdCBLZGZJZCA9IHtcbiAgICBIa2RmU2hhMjU2OiAweDAwMDEsXG4gICAgSGtkZlNoYTM4NDogMHgwMDAyLFxuICAgIEhrZGZTaGE1MTI6IDB4MDAwMyxcbn07XG4vKipcbiAqIFRoZSBzdXBwb3J0ZWQgQXV0aGVudGljYXRlZCBFbmNyeXB0aW9uIHdpdGggQXNzb2NpYXRlZCBEYXRhIChBRUFEKSBpZGVudGlmaWVycy5cbiAqL1xuZXhwb3J0IGNvbnN0IEFlYWRJZCA9IHtcbiAgICBBZXMxMjhHY206IDB4MDAwMSxcbiAgICBBZXMyNTZHY206IDB4MDAwMixcbiAgICBDaGFjaGEyMFBvbHkxMzA1OiAweDAwMDMsXG4gICAgRXhwb3J0T25seTogMHhGRkZGLFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js":
/*!************************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AEAD_USAGES: () => (/* binding */ AEAD_USAGES)\n/* harmony export */ });\n// The key usages for AEAD.\nconst AEAD_USAGES = [\"encrypt\", \"decrypt\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pbnRlcmZhY2VzL2FlYWRFbmNyeXB0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTyIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pbnRlcmZhY2VzL2FlYWRFbmNyeXB0aW9uQ29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUga2V5IHVzYWdlcyBmb3IgQUVBRC5cbmV4cG9ydCBjb25zdCBBRUFEX1VTQUdFUyA9IFtcImVuY3J5cHRcIiwgXCJkZWNyeXB0XCJdO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/aeadEncryptionContext.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js":
/*!******************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KEM_USAGES: () => (/* binding */ KEM_USAGES),\n/* harmony export */   LABEL_DKP_PRK: () => (/* binding */ LABEL_DKP_PRK),\n/* harmony export */   LABEL_SK: () => (/* binding */ LABEL_SK)\n/* harmony export */ });\n// The key usages for KEM.\nconst KEM_USAGES = [\"deriveBits\"];\n// b\"dkp_prk\"\nconst LABEL_DKP_PRK = new Uint8Array([\n    100,\n    107,\n    112,\n    95,\n    112,\n    114,\n    107,\n]);\n// b\"sk\"\nconst LABEL_SK = new Uint8Array([115, 107]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pbnRlcmZhY2VzL2Roa2VtUHJpbWl0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL2ludGVyZmFjZXMvZGhrZW1QcmltaXRpdmVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSBrZXkgdXNhZ2VzIGZvciBLRU0uXG5leHBvcnQgY29uc3QgS0VNX1VTQUdFUyA9IFtcImRlcml2ZUJpdHNcIl07XG4vLyBiXCJka3BfcHJrXCJcbmV4cG9ydCBjb25zdCBMQUJFTF9ES1BfUFJLID0gbmV3IFVpbnQ4QXJyYXkoW1xuICAgIDEwMCxcbiAgICAxMDcsXG4gICAgMTEyLFxuICAgIDk1LFxuICAgIDExMixcbiAgICAxMTQsXG4gICAgMTA3LFxuXSk7XG4vLyBiXCJza1wiXG5leHBvcnQgY29uc3QgTEFCRUxfU0sgPSBuZXcgVWludDhBcnJheShbMTE1LCAxMDddKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js":
/*!***************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUITE_ID_HEADER_KEM: () => (/* binding */ SUITE_ID_HEADER_KEM)\n/* harmony export */ });\n// b\"KEM\"\nconst SUITE_ID_HEADER_KEM = new Uint8Array([\n    75,\n    69,\n    77,\n    0,\n    0,\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pbnRlcmZhY2VzL2tlbUludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy9pbnRlcmZhY2VzL2tlbUludGVyZmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBiXCJLRU1cIlxuZXhwb3J0IGNvbnN0IFNVSVRFX0lEX0hFQURFUl9LRU0gPSBuZXcgVWludDhBcnJheShbXG4gICAgNzUsXG4gICAgNjksXG4gICAgNzcsXG4gICAgMCxcbiAgICAwLFxuXSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/kdfs/hkdf.js":
/*!*************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/kdfs/hkdf.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HkdfNative: () => (/* binding */ HkdfNative),\n/* harmony export */   HkdfSha256Native: () => (/* binding */ HkdfSha256Native),\n/* harmony export */   HkdfSha384Native: () => (/* binding */ HkdfSha384Native),\n/* harmony export */   HkdfSha512Native: () => (/* binding */ HkdfSha512Native)\n/* harmony export */ });\n/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n/* harmony import */ var _identifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../identifiers.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\");\n/* harmony import */ var _algorithm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../algorithm.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/algorithm.js\");\n\n\n\n\n// b\"HPKE-v1\"\nconst HPKE_VERSION = new Uint8Array([72, 80, 75, 69, 45, 118, 49]);\nclass HkdfNative extends _algorithm_js__WEBPACK_IMPORTED_MODULE_3__.NativeAlgorithm {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KdfId.HkdfSha256\n        });\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY\n        });\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n    init(suiteId) {\n        this._suiteId = suiteId;\n    }\n    buildLabeledIkm(label, ikm) {\n        this._checkInit();\n        const ret = new Uint8Array(7 + this._suiteId.byteLength + label.byteLength + ikm.byteLength);\n        ret.set(HPKE_VERSION, 0);\n        ret.set(this._suiteId, 7);\n        ret.set(label, 7 + this._suiteId.byteLength);\n        ret.set(ikm, 7 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    buildLabeledInfo(label, info, len) {\n        this._checkInit();\n        const ret = new Uint8Array(9 + this._suiteId.byteLength + label.byteLength + info.byteLength);\n        ret.set(new Uint8Array([0, len]), 0);\n        ret.set(HPKE_VERSION, 2);\n        ret.set(this._suiteId, 9);\n        ret.set(label, 9 + this._suiteId.byteLength);\n        ret.set(info, 9 + this._suiteId.byteLength + label.byteLength);\n        return ret;\n    }\n    async extract(salt, ikm) {\n        await this._setup();\n        if (salt.byteLength === 0) {\n            salt = new ArrayBuffer(this.hashSize);\n        }\n        if (salt.byteLength !== this.hashSize) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidParamError(\"The salt length must be the same as the hashSize\");\n        }\n        const key = await this._api.importKey(\"raw\", salt, this.algHash, false, [\n            \"sign\",\n        ]);\n        return await this._api.sign(\"HMAC\", key, ikm);\n    }\n    async expand(prk, info, len) {\n        await this._setup();\n        const key = await this._api.importKey(\"raw\", prk, this.algHash, false, [\n            \"sign\",\n        ]);\n        const okm = new ArrayBuffer(len);\n        const p = new Uint8Array(okm);\n        let prev = _consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY;\n        const mid = new Uint8Array(info);\n        const tail = new Uint8Array(1);\n        if (len > 255 * this.hashSize) {\n            throw new Error(\"Entropy limit reached\");\n        }\n        const tmp = new Uint8Array(this.hashSize + mid.length + 1);\n        for (let i = 1, cur = 0; cur < p.length; i++) {\n            tail[0] = i;\n            tmp.set(prev, 0);\n            tmp.set(mid, prev.length);\n            tmp.set(tail, prev.length + mid.length);\n            prev = new Uint8Array(await this._api.sign(\"HMAC\", key, tmp.slice(0, prev.length + mid.length + 1)));\n            if (p.length - cur >= prev.length) {\n                p.set(prev, cur);\n                cur += prev.length;\n            }\n            else {\n                p.set(prev.slice(0, p.length - cur), cur);\n                cur += p.length - cur;\n            }\n        }\n        return okm;\n    }\n    async extractAndExpand(salt, ikm, info, len) {\n        await this._setup();\n        const baseKey = await this._api.importKey(\"raw\", ikm, \"HKDF\", false, [\"deriveBits\"]);\n        return await this._api.deriveBits({\n            name: \"HKDF\",\n            hash: this.algHash.hash,\n            salt: salt,\n            info: info,\n        }, baseKey, len * 8);\n    }\n    async labeledExtract(salt, label, ikm) {\n        return await this.extract(salt, this.buildLabeledIkm(label, ikm).buffer);\n    }\n    async labeledExpand(prk, label, info, len) {\n        return await this.expand(prk, this.buildLabeledInfo(label, info, len).buffer, len);\n    }\n    _checkInit() {\n        if (this._suiteId === _consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY) {\n            throw new Error(\"Not initialized. Call init()\");\n        }\n    }\n}\nclass HkdfSha256Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha256 (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KdfId.HkdfSha256\n        });\n        /** 32 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-256\",\n                length: 256,\n            }\n        });\n    }\n}\nclass HkdfSha384Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha384 (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KdfId.HkdfSha384\n        });\n        /** 48 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-384\",\n                length: 384,\n            }\n        });\n    }\n}\nclass HkdfSha512Native extends HkdfNative {\n    constructor() {\n        super(...arguments);\n        /** KdfId.HkdfSha512 (0x0003) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KdfId.HkdfSha512\n        });\n        /** 64 */\n        Object.defineProperty(this, \"hashSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        /** The parameters for Web Cryptography API */\n        Object.defineProperty(this, \"algHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                name: \"HMAC\",\n                hash: \"SHA-512\",\n                length: 512,\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/kdfs/hkdf.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkem.js":
/*!**************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/kems/dhkem.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dhkem: () => (/* binding */ Dhkem)\n/* harmony export */ });\n/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n/* harmony import */ var _interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../interfaces/kemInterface.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js\");\n/* harmony import */ var _utils_misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/misc.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\");\n\n\n\n\n// b\"eae_prk\"\nconst LABEL_EAE_PRK = new Uint8Array([101, 97, 101, 95, 112, 114, 107]);\n// b\"shared_secret\"\n// deno-fmt-ignore\nconst LABEL_SHARED_SECRET = new Uint8Array([\n    115, 104, 97, 114, 101, 100, 95, 115, 101, 99,\n    114, 101, 116,\n]);\nfunction concat3(a, b, c) {\n    const ret = new Uint8Array(a.length + b.length + c.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    ret.set(c, a.length + b.length);\n    return ret;\n}\nclass Dhkem {\n    constructor(id, prim, kdf) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_prim\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.id = id;\n        this._prim = prim;\n        this._kdf = kdf;\n        const suiteId = new Uint8Array(_interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_2__.SUITE_ID_HEADER_KEM);\n        suiteId.set((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.i2Osp)(this.id, 2), 3);\n        this._kdf.init(suiteId);\n    }\n    async serializePublicKey(key) {\n        return await this._prim.serializePublicKey(key);\n    }\n    async deserializePublicKey(key) {\n        return await this._prim.deserializePublicKey(key);\n    }\n    async serializePrivateKey(key) {\n        return await this._prim.serializePrivateKey(key);\n    }\n    async deserializePrivateKey(key) {\n        return await this._prim.deserializePrivateKey(key);\n    }\n    async importKey(format, key, isPublic = true) {\n        return await this._prim.importKey(format, key, isPublic);\n    }\n    async generateKeyPair() {\n        return await this._prim.generateKeyPair();\n    }\n    async deriveKeyPair(ikm) {\n        if (ikm.byteLength > _consts_js__WEBPACK_IMPORTED_MODULE_0__.INPUT_LENGTH_LIMIT) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidParamError(\"Too long ikm\");\n        }\n        return await this._prim.deriveKeyPair(ikm);\n    }\n    async encap(params) {\n        let ke;\n        if (params.ekm === undefined) {\n            ke = await this.generateKeyPair();\n        }\n        else if ((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKeyPair)(params.ekm)) {\n            // params.ekm is only used for testing.\n            ke = params.ekm;\n        }\n        else {\n            // params.ekm is only used for testing.\n            ke = await this.deriveKeyPair(params.ekm);\n        }\n        const enc = await this._prim.serializePublicKey(ke.publicKey);\n        const pkrm = await this._prim.serializePublicKey(params.recipientPublicKey);\n        try {\n            let dh;\n            if (params.senderKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n            }\n            else {\n                const sks = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKeyPair)(params.senderKey)\n                    ? params.senderKey.privateKey\n                    : params.senderKey;\n                const dh1 = new Uint8Array(await this._prim.dh(ke.privateKey, params.recipientPublicKey));\n                const dh2 = new Uint8Array(await this._prim.dh(sks, params.recipientPublicKey));\n                dh = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.concat)(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderKey === undefined) {\n                kemContext = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.concat)(new Uint8Array(enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pks = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKeyPair)(params.senderKey)\n                    ? params.senderKey.publicKey\n                    : await this._prim.derivePublicKey(params.senderKey);\n                const pksm = await this._prim.serializePublicKey(pks);\n                kemContext = concat3(new Uint8Array(enc), new Uint8Array(pkrm), new Uint8Array(pksm));\n            }\n            const sharedSecret = await this._generateSharedSecret(dh, kemContext);\n            return {\n                enc: enc,\n                sharedSecret: sharedSecret,\n            };\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.EncapError(e);\n        }\n    }\n    async decap(params) {\n        const pke = await this._prim.deserializePublicKey(params.enc);\n        const skr = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKeyPair)(params.recipientKey)\n            ? params.recipientKey.privateKey\n            : params.recipientKey;\n        const pkr = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKeyPair)(params.recipientKey)\n            ? params.recipientKey.publicKey\n            : await this._prim.derivePublicKey(params.recipientKey);\n        const pkrm = await this._prim.serializePublicKey(pkr);\n        try {\n            let dh;\n            if (params.senderPublicKey === undefined) {\n                dh = new Uint8Array(await this._prim.dh(skr, pke));\n            }\n            else {\n                const dh1 = new Uint8Array(await this._prim.dh(skr, pke));\n                const dh2 = new Uint8Array(await this._prim.dh(skr, params.senderPublicKey));\n                dh = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.concat)(dh1, dh2);\n            }\n            let kemContext;\n            if (params.senderPublicKey === undefined) {\n                kemContext = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_3__.concat)(new Uint8Array(params.enc), new Uint8Array(pkrm));\n            }\n            else {\n                const pksm = await this._prim.serializePublicKey(params.senderPublicKey);\n                kemContext = new Uint8Array(params.enc.byteLength + pkrm.byteLength + pksm.byteLength);\n                kemContext.set(new Uint8Array(params.enc), 0);\n                kemContext.set(new Uint8Array(pkrm), params.enc.byteLength);\n                kemContext.set(new Uint8Array(pksm), params.enc.byteLength + pkrm.byteLength);\n            }\n            return await this._generateSharedSecret(dh, kemContext);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.DecapError(e);\n        }\n    }\n    async _generateSharedSecret(dh, kemContext) {\n        const labeledIkm = this._kdf.buildLabeledIkm(LABEL_EAE_PRK, dh);\n        const labeledInfo = this._kdf.buildLabeledInfo(LABEL_SHARED_SECRET, kemContext, this.secretSize);\n        return await this._kdf.extractAndExpand(_consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, labeledIkm.buffer, labeledInfo.buffer, this.secretSize);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkem.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js":
/*!***************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ec: () => (/* binding */ Ec)\n/* harmony export */ });\n/* harmony import */ var _algorithm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../algorithm.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/algorithm.js\");\n/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../consts.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n/* harmony import */ var _identifiers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../identifiers.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\");\n/* harmony import */ var _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../interfaces/dhkemPrimitives.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js\");\n/* harmony import */ var _utils_bignum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/bignum.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/bignum.js\");\n/* harmony import */ var _utils_misc_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/misc.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\");\n\n\n\n\n\n\n\n// b\"candidate\"\n// deno-fmt-ignore\nconst LABEL_CANDIDATE = new Uint8Array([\n    99, 97, 110, 100, 105, 100, 97, 116, 101,\n]);\n// the order of the curve being used.\n// deno-fmt-ignore\nconst ORDER_P_256 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xbc, 0xe6, 0xfa, 0xad, 0xa7, 0x17, 0x9e, 0x84,\n    0xf3, 0xb9, 0xca, 0xc2, 0xfc, 0x63, 0x25, 0x51,\n]);\n// deno-fmt-ignore\nconst ORDER_P_384 = new Uint8Array([\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xc7, 0x63, 0x4d, 0x81, 0xf4, 0x37, 0x2d, 0xdf,\n    0x58, 0x1a, 0x0d, 0xb2, 0x48, 0xb0, 0xa7, 0x7a,\n    0xec, 0xec, 0x19, 0x6a, 0xcc, 0xc5, 0x29, 0x73,\n]);\n// deno-fmt-ignore\nconst ORDER_P_521 = new Uint8Array([\n    0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n    0xff, 0xfa, 0x51, 0x86, 0x87, 0x83, 0xbf, 0x2f,\n    0x96, 0x6b, 0x7f, 0xcc, 0x01, 0x48, 0xf7, 0x09,\n    0xa5, 0xd0, 0x3b, 0xb5, 0xc9, 0xb8, 0x89, 0x9c,\n    0x47, 0xae, 0xbb, 0x6f, 0xb7, 0x1e, 0x91, 0x38,\n    0x64, 0x09,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_256 = new Uint8Array([\n    48, 65, 2, 1, 0, 48, 19, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 8, 42, 134,\n    72, 206, 61, 3, 1, 7, 4, 39, 48, 37,\n    2, 1, 1, 4, 32,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_384 = new Uint8Array([\n    48, 78, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 34, 4, 55, 48, 53, 2, 1, 1,\n    4, 48,\n]);\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_P_521 = new Uint8Array([\n    48, 96, 2, 1, 0, 48, 16, 6, 7, 42,\n    134, 72, 206, 61, 2, 1, 6, 5, 43, 129,\n    4, 0, 35, 4, 73, 48, 71, 2, 1, 1,\n    4, 66,\n]);\nclass Ec extends _algorithm_js__WEBPACK_IMPORTED_MODULE_0__.NativeAlgorithm {\n    constructor(kem, hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // EC specific arguments for deriving key pair.\n        Object.defineProperty(this, \"_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_bitmask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._hkdf = hkdf;\n        switch (kem) {\n            case _identifiers_js__WEBPACK_IMPORTED_MODULE_3__.KemId.DhkemP256HkdfSha256:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-256\" };\n                this._nPk = 65;\n                this._nSk = 32;\n                this._nDh = 32;\n                this._order = ORDER_P_256;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_256;\n                break;\n            case _identifiers_js__WEBPACK_IMPORTED_MODULE_3__.KemId.DhkemP384HkdfSha384:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-384\" };\n                this._nPk = 97;\n                this._nSk = 48;\n                this._nDh = 48;\n                this._order = ORDER_P_384;\n                this._bitmask = 0xFF;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_384;\n                break;\n            default:\n                // case KemId.DhkemP521HkdfSha512:\n                this._alg = { name: \"ECDH\", namedCurve: \"P-521\" };\n                this._nPk = 133;\n                this._nSk = 66;\n                this._nDh = 66;\n                this._order = ORDER_P_521;\n                this._bitmask = 0x01;\n                this._pkcs8AlgId = PKCS8_ALG_ID_P_521;\n                break;\n        }\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_6__.base64UrlToBytes)(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(this._alg, true, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_4__.KEM_USAGES);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(_consts_js__WEBPACK_IMPORTED_MODULE_1__.EMPTY.buffer, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_4__.LABEL_DKP_PRK, new Uint8Array(ikm));\n            const bn = new _utils_bignum_js__WEBPACK_IMPORTED_MODULE_5__.Bignum(this._nSk);\n            for (let counter = 0; bn.isZero() || !bn.lessThan(this._order); counter++) {\n                if (counter > 255) {\n                    throw new Error(\"Faild to derive a key pair\");\n                }\n                const bytes = new Uint8Array(await this._hkdf.labeledExpand(dkpPrk, LABEL_CANDIDATE, (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_6__.i2Osp)(counter, 1), this._nSk));\n                bytes[0] = bytes[0] & this._bitmask;\n                bn.set(bytes);\n            }\n            const sk = await this._deserializePkcs8Key(bn.val());\n            bn.reset();\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        try {\n            await this._setup();\n            const bits = await this._api.deriveBits({\n                name: \"ECDH\",\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_2__.SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.crv === \"undefined\" || key.crv !== this._alg.namedCurve) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_4__.KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_4__.KEM_USAGES);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/dhkemPrimitives/ec.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/hybridkem.js":
/*!******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/kems/hybridkem.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hybridkem: () => (/* binding */ Hybridkem)\n/* harmony export */ });\n/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/consts.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/errors.js\");\n/* harmony import */ var _identifiers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../identifiers.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\");\n/* harmony import */ var _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../interfaces/dhkemPrimitives.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/dhkemPrimitives.js\");\n/* harmony import */ var _interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../interfaces/kemInterface.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/interfaces/kemInterface.js\");\n/* harmony import */ var _utils_misc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/misc.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\");\n/* harmony import */ var _xCryptoKey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../xCryptoKey.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/xCryptoKey.js\");\n\n\n\n\n\n\n\nclass Hybridkem {\n    constructor(id, a, b, kdf) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _identifiers_js__WEBPACK_IMPORTED_MODULE_2__.KemId.NotAssigned\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_a\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_b\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.id = id;\n        this._a = a;\n        this._b = b;\n        this._kdf = kdf;\n        const suiteId = new Uint8Array(_interfaces_kemInterface_js__WEBPACK_IMPORTED_MODULE_4__.SUITE_ID_HEADER_KEM);\n        suiteId.set((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.i2Osp)(this.id, 2), 3);\n        this._kdf.init(suiteId);\n    }\n    async serializePublicKey(key) {\n        try {\n            return await this._serializePublicKey(key);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        try {\n            return await this._deserializePublicKey(key);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        try {\n            return await this._serializePrivateKey(key);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        try {\n            return await this._deserializePrivateKey(key);\n        }\n        catch (e) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        const kpA = await this._a.generateKeyPair();\n        const kpB = await this._b.generateKeyPair();\n        const pkA = await this._a.serializePublicKey(kpA.publicKey);\n        const skA = await this._a.serializePrivateKey(kpA.privateKey);\n        const pkB = await this._b.serializePublicKey(kpB.publicKey);\n        const skB = await this._b.serializePrivateKey(kpB.privateKey);\n        return {\n            publicKey: await this.deserializePublicKey((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(pkA), new Uint8Array(pkB)).buffer),\n            privateKey: await this.deserializePrivateKey((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(skA), new Uint8Array(skB)).buffer),\n        };\n    }\n    async deriveKeyPair(ikm) {\n        const dkpPrk = await this._kdf.labeledExtract(_consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_3__.LABEL_DKP_PRK, new Uint8Array(ikm));\n        const seed = new Uint8Array(await this._kdf.labeledExpand(dkpPrk, _interfaces_dhkemPrimitives_js__WEBPACK_IMPORTED_MODULE_3__.LABEL_SK, _consts_js__WEBPACK_IMPORTED_MODULE_0__.EMPTY, 32 + 64));\n        const seed1 = seed.slice(0, 32);\n        const seed2 = seed.slice(32, 96);\n        const kpA = await this._a.deriveKeyPair(seed1.buffer);\n        const kpB = await this._b.deriveKeyPair(seed2.buffer);\n        const pkA = await this._a.serializePublicKey(kpA.publicKey);\n        const skA = await this._a.serializePrivateKey(kpA.privateKey);\n        const pkB = await this._b.serializePublicKey(kpB.publicKey);\n        const skB = await this._b.serializePrivateKey(kpB.privateKey);\n        return {\n            publicKey: await this.deserializePublicKey((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(pkA), new Uint8Array(pkB)).buffer),\n            privateKey: await this.deserializePrivateKey((0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(skA), new Uint8Array(skB)).buffer),\n        };\n    }\n    async importKey(format, key, isPublic = true) {\n        if (format !== \"raw\") {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.NotSupportedError(\"'jwk' is not supported\");\n        }\n        if (!(key instanceof ArrayBuffer)) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidParamError(\"Invalid type of key\");\n        }\n        if (isPublic) {\n            return await this.deserializePublicKey(key);\n        }\n        return await this.deserializePrivateKey(key);\n    }\n    async encap(params) {\n        let ekmA = undefined;\n        let ekmB = undefined;\n        if (params.ekm !== undefined && !(0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.isCryptoKeyPair)(params.ekm)) {\n            if (params.ekm.byteLength !== 64) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidParamError(\"ekm must be 64 bytes in length\");\n            }\n            ekmA = params.ekm.slice(0, 32);\n            ekmB = params.ekm.slice(32);\n        }\n        const pkR = new Uint8Array(await this.serializePublicKey(params.recipientPublicKey));\n        const pkRA = await this._a.deserializePublicKey(pkR.slice(0, this._a.publicKeySize).buffer);\n        const pkRB = await this._b.deserializePublicKey(pkR.slice(this._a.publicKeySize).buffer);\n        const resA = await this._a.encap({ recipientPublicKey: pkRA, ekm: ekmA });\n        const resB = await this._b.encap({ recipientPublicKey: pkRB, ekm: ekmB });\n        return {\n            sharedSecret: (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(resA.sharedSecret), new Uint8Array(resB.sharedSecret)).buffer,\n            enc: (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(resA.enc), new Uint8Array(resB.enc))\n                .buffer,\n        };\n    }\n    async decap(params) {\n        const sk = (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.isCryptoKeyPair)(params.recipientKey)\n            ? params.recipientKey.privateKey\n            : params.recipientKey;\n        const skR = new Uint8Array(await this.serializePrivateKey(sk));\n        const skRA = await this._a.deserializePrivateKey(skR.slice(0, this._a.privateKeySize).buffer);\n        const skRB = await this._b.deserializePrivateKey(skR.slice(this._a.privateKeySize).buffer);\n        const ssA = await this._a.decap({\n            recipientKey: skRA,\n            enc: params.enc.slice(0, this._a.encSize),\n        });\n        const ssB = await this._b.decap({\n            recipientKey: skRB,\n            enc: params.enc.slice(this._a.encSize),\n        });\n        return (0,_utils_misc_js__WEBPACK_IMPORTED_MODULE_5__.concat)(new Uint8Array(ssA), new Uint8Array(ssB))\n            .buffer;\n    }\n    _serializePublicKey(k) {\n        return new Promise((resolve, reject) => {\n            if (k.type !== \"public\") {\n                reject(new Error(\"Not public key\"));\n            }\n            if (k.algorithm.name !== this.name) {\n                reject(new Error(`Invalid algorithm name: ${k.algorithm.name}`));\n            }\n            if (k.key.byteLength !== this.publicKeySize) {\n                reject(new Error(`Invalid key length: ${k.key.byteLength}`));\n            }\n            resolve(k.key.buffer);\n        });\n    }\n    _deserializePublicKey(k) {\n        return new Promise((resolve, reject) => {\n            if (k.byteLength !== this.publicKeySize) {\n                reject(new Error(`Invalid key length: ${k.byteLength}`));\n            }\n            resolve(new _xCryptoKey_js__WEBPACK_IMPORTED_MODULE_6__.XCryptoKey(this.name, new Uint8Array(k), \"public\"));\n        });\n    }\n    _serializePrivateKey(k) {\n        return new Promise((resolve, reject) => {\n            if (k.type !== \"private\") {\n                reject(new Error(\"Not private key\"));\n            }\n            if (k.algorithm.name !== this.name) {\n                reject(new Error(`Invalid algorithm name: ${k.algorithm.name}`));\n            }\n            if (k.key.byteLength !== this.privateKeySize) {\n                reject(new Error(`Invalid key length: ${k.key.byteLength}`));\n            }\n            resolve(k.key.buffer);\n        });\n    }\n    _deserializePrivateKey(k) {\n        return new Promise((resolve, reject) => {\n            if (k.byteLength !== this.privateKeySize) {\n                reject(new Error(`Invalid key length: ${k.byteLength}`));\n            }\n            resolve(new _xCryptoKey_js__WEBPACK_IMPORTED_MODULE_6__.XCryptoKey(this.name, new Uint8Array(k), \"private\", [\"deriveBits\"]));\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/kems/hybridkem.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/bignum.js":
/*!****************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/utils/bignum.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bignum: () => (/* binding */ Bignum)\n/* harmony export */ });\n/**\n * The minimum inplementation of bignum to derive an EC key pair.\n */\nclass Bignum {\n    constructor(size) {\n        Object.defineProperty(this, \"_num\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._num = new Uint8Array(size);\n    }\n    val() {\n        return this._num;\n    }\n    reset() {\n        this._num.fill(0);\n    }\n    set(src) {\n        if (src.length !== this._num.length) {\n            throw new Error(\"Bignum.set: invalid argument\");\n        }\n        this._num.set(src);\n    }\n    isZero() {\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] !== 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    lessThan(v) {\n        if (v.length !== this._num.length) {\n            throw new Error(\"Bignum.lessThan: invalid argument\");\n        }\n        for (let i = 0; i < this._num.length; i++) {\n            if (this._num[i] < v[i]) {\n                return true;\n            }\n            if (this._num[i] > v[i]) {\n                return false;\n            }\n        }\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy91dGlscy9iaWdudW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isc0JBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL3V0aWxzL2JpZ251bS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBtaW5pbXVtIGlucGxlbWVudGF0aW9uIG9mIGJpZ251bSB0byBkZXJpdmUgYW4gRUMga2V5IHBhaXIuXG4gKi9cbmV4cG9ydCBjbGFzcyBCaWdudW0ge1xuICAgIGNvbnN0cnVjdG9yKHNpemUpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX251bVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9udW0gPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgICB9XG4gICAgdmFsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbnVtO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5fbnVtLmZpbGwoMCk7XG4gICAgfVxuICAgIHNldChzcmMpIHtcbiAgICAgICAgaWYgKHNyYy5sZW5ndGggIT09IHRoaXMuX251bS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJpZ251bS5zZXQ6IGludmFsaWQgYXJndW1lbnRcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbnVtLnNldChzcmMpO1xuICAgIH1cbiAgICBpc1plcm8oKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbnVtLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbnVtW2ldICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBsZXNzVGhhbih2KSB7XG4gICAgICAgIGlmICh2Lmxlbmd0aCAhPT0gdGhpcy5fbnVtLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQmlnbnVtLmxlc3NUaGFuOiBpbnZhbGlkIGFyZ3VtZW50XCIpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbnVtLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbnVtW2ldIDwgdltpXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuX251bVtpXSA+IHZbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/bignum.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js":
/*!**************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/utils/misc.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64UrlToBytes: () => (/* binding */ base64UrlToBytes),\n/* harmony export */   bytesToBase64Url: () => (/* binding */ bytesToBase64Url),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   i2Osp: () => (/* binding */ i2Osp),\n/* harmony export */   isCryptoKeyPair: () => (/* binding */ isCryptoKeyPair),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isDenoV1: () => (/* binding */ isDenoV1),\n/* harmony export */   kemToKeyGenAlgorithm: () => (/* binding */ kemToKeyGenAlgorithm),\n/* harmony export */   loadCrypto: () => (/* binding */ loadCrypto),\n/* harmony export */   loadSubtleCrypto: () => (/* binding */ loadSubtleCrypto),\n/* harmony export */   xor: () => (/* binding */ xor)\n/* harmony export */ });\n/* harmony import */ var _dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_dnt.shims.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/_dnt.shims.js\");\n/* harmony import */ var _identifiers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identifiers.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/identifiers.js\");\n\n\nconst isDenoV1 = () => \n// deno-lint-ignore no-explicit-any\n_dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis.process === undefined;\n/**\n * Checks whether the runtime is Deno or not (Node.js).\n * @returns boolean - true if the runtime is Deno, false Node.js.\n */\nfunction isDeno() {\n    // deno-lint-ignore no-explicit-any\n    if (_dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis.process === undefined) {\n        return true;\n    }\n    // deno-lint-ignore no-explicit-any\n    return _dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis.process?.versions?.deno !== undefined;\n}\n/**\n * Checks whetehr the type of input is CryptoKeyPair or not.\n */\nconst isCryptoKeyPair = (x) => typeof x === \"object\" &&\n    x !== null &&\n    typeof x.privateKey === \"object\" &&\n    typeof x.publicKey === \"object\";\n/**\n * Converts integer to octet string. I2OSP implementation.\n */\nfunction i2Osp(n, w) {\n    if (w <= 0) {\n        throw new Error(\"i2Osp: too small size\");\n    }\n    if (n >= 256 ** w) {\n        throw new Error(\"i2Osp: too large integer\");\n    }\n    const ret = new Uint8Array(w);\n    for (let i = 0; i < w && n; i++) {\n        ret[w - (i + 1)] = n % 256;\n        n = n >> 8;\n    }\n    return ret;\n}\n/**\n * Concatenates two Uint8Arrays.\n * @param a Uint8Array\n * @param b Uint8Array\n * @returns Concatenated Uint8Array\n */\nfunction concat(a, b) {\n    const ret = new Uint8Array(a.length + b.length);\n    ret.set(a, 0);\n    ret.set(b, a.length);\n    return ret;\n}\n/**\n * Decodes Base64Url-encoded data.\n * @param v Base64Url-encoded string\n * @returns Uint8Array\n */\nfunction base64UrlToBytes(v) {\n    const base64 = v.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const byteString = atob(base64);\n    const ret = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n        ret[i] = byteString.charCodeAt(i);\n    }\n    return ret;\n}\n/**\n * Encodes Uint8Array to Base64Url.\n * @param v Uint8Array\n * @returns Base64Url-encoded string\n */\nfunction bytesToBase64Url(v) {\n    return btoa(String.fromCharCode(...v))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=*$/g, \"\");\n}\n/**\n * Decodes hex string to Uint8Array.\n * @param v Hex string\n * @returns Uint8Array\n * @throws Error if the input is not a hex string.\n */\nfunction hexToBytes(v) {\n    if (v.length === 0) {\n        return new Uint8Array([]);\n    }\n    const res = v.match(/[\\da-f]{2}/gi);\n    if (res == null) {\n        throw new Error(\"Not hex string.\");\n    }\n    return new Uint8Array(res.map(function (h) {\n        return parseInt(h, 16);\n    }));\n}\n/**\n * Encodes Uint8Array to hex string.\n * @param v Uint8Array\n * @returns Hex string\n */\nfunction bytesToHex(v) {\n    return [...v].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n/**\n * Converts KemId to KeyAlgorithm.\n * @param kem KemId\n * @returns KeyAlgorithm\n */\nfunction kemToKeyGenAlgorithm(kem) {\n    switch (kem) {\n        case _identifiers_js__WEBPACK_IMPORTED_MODULE_1__.KemId.DhkemP256HkdfSha256:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-256\",\n            };\n        case _identifiers_js__WEBPACK_IMPORTED_MODULE_1__.KemId.DhkemP384HkdfSha384:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-384\",\n            };\n        case _identifiers_js__WEBPACK_IMPORTED_MODULE_1__.KemId.DhkemP521HkdfSha512:\n            return {\n                name: \"ECDH\",\n                namedCurve: \"P-521\",\n            };\n        default:\n            // case KemId.DhkemX25519HkdfSha256\n            return {\n                name: \"X25519\",\n            };\n    }\n}\nasync function loadSubtleCrypto() {\n    if (_dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto.subtle;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 19)); // node:crypto\n        return webcrypto.subtle;\n    }\n    catch (_e) {\n        throw new Error(\"Failed to load SubtleCrypto\");\n    }\n}\nasync function loadCrypto() {\n    if (_dnt_shims_js__WEBPACK_IMPORTED_MODULE_0__.dntGlobalThis !== undefined && globalThis.crypto !== undefined) {\n        // Browsers, Node.js >= v19, Cloudflare Workers, Bun, etc.\n        return globalThis.crypto;\n    }\n    // Node.js <= v18\n    try {\n        // @ts-ignore: to ignore \"crypto\"\n        const { webcrypto } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 19)); // node:crypto\n        return webcrypto;\n    }\n    catch (_e) {\n        throw new Error(\"Web Cryptograph API not supported\");\n    }\n}\n/**\n * XOR for Uint8Array.\n */\nfunction xor(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        throw new Error(\"xor: different length inputs\");\n    }\n    const buf = new Uint8Array(a.byteLength);\n    for (let i = 0; i < a.byteLength; i++) {\n        buf[i] = a[i] ^ b[i];\n    }\n    return buf;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js":
/*!***************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/utils/noble.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aInRange: () => (/* binding */ aInRange),\n/* harmony export */   abytes: () => (/* binding */ abytes),\n/* harmony export */   aexists: () => (/* binding */ aexists),\n/* harmony export */   ahash: () => (/* binding */ ahash),\n/* harmony export */   anumber: () => (/* binding */ anumber),\n/* harmony export */   aoutput: () => (/* binding */ aoutput),\n/* harmony export */   asciiToBytes: () => (/* binding */ asciiToBytes),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToNumberBE: () => (/* binding */ bytesToNumberBE),\n/* harmony export */   bytesToNumberLE: () => (/* binding */ bytesToNumberLE),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   clean: () => (/* binding */ clean),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   copyBytes: () => (/* binding */ copyBytes),\n/* harmony export */   createHasher: () => (/* binding */ createHasher),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   inRange: () => (/* binding */ inRange),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   numberToBytesBE: () => (/* binding */ numberToBytesBE),\n/* harmony export */   numberToBytesLE: () => (/* binding */ numberToBytesLE),\n/* harmony export */   numberToHexUnpadded: () => (/* binding */ numberToHexUnpadded),\n/* harmony export */   oidNist: () => (/* binding */ oidNist),\n/* harmony export */   randomBytesAsync: () => (/* binding */ randomBytesAsync),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   validateObject: () => (/* binding */ validateObject)\n/* harmony export */ });\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc.js */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/misc.js\");\n// deno-lint-ignore-file no-explicit-any\n/**\n * This file is based on noble-curves (https://github.com/paulmillr/noble-curves).\n *\n * noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)\n *\n * The original file is located at:\n * https://github.com/paulmillr/noble-curves/blob/b9d49d2b41d550571a0c5be443ecb62109fa3373/src/utils.ts\n */\n/**\n * Hex, bytes and number utilities.\n * @module\n */\n\nconst _0n = /* @__PURE__ */ BigInt(0);\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array ||\n        (ArrayBuffer.isView(a) && a.constructor.name === \"Uint8Array\");\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(value, length, title = \"\") {\n    const bytes = isBytes(value);\n    const len = value?.length;\n    const needsLen = length !== undefined;\n    if (!bytes || (needsLen && len !== length)) {\n        const prefix = title && `\"${title}\" `;\n        const ofLen = needsLen ? ` of length ${length}` : \"\";\n        const got = bytes ? `length=${len}` : `type=${typeof value}`;\n        throw new Error(prefix + \"expected Uint8Array\" + ofLen + \", got \" + got);\n    }\n    return value;\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== \"function\" || typeof h.create !== \"function\") {\n        throw new Error(\"Hash must wrapped by utils.createHasher\");\n    }\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error(\"Hash instance has been destroyed\");\n    if (checkFinished && instance.finished) {\n        throw new Error(\"Hash#digest() has already been called\");\n    }\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out, undefined, \"digestInto() output\");\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('\"digestInto() output\" expected to be of length >=' + min);\n    }\n}\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0) {\n        throw new Error(\"positive integer expected, got \" + n);\n    }\n}\n// Used in weierstrass, der\nfunction abignumer(n) {\n    if (typeof n === \"bigint\") {\n        if (!isPosBig(n))\n            throw new Error(\"positive bigint expected, got \" + n);\n    }\n    else\n        anumber(n);\n    return n;\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nfunction clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nfunction rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore: to use toHex\ntypeof Uint8Array.from([]).toHex === \"function\" &&\n    // @ts-ignore: to use fromHex\n    typeof Uint8Array.fromHex === \"function\")();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, \"0\"));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore: to use toHex\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== \"string\") {\n        throw new Error(\"hex string expected, got \" + typeof hex);\n    }\n    // @ts-ignore: to use fromHex\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2) {\n        throw new Error(\"hex string expected, got unpadded hex of length \" + hl);\n    }\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' +\n                hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== \"string\")\n        throw new Error(\"string expected\");\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\nfunction numberToHexUnpadded(num) {\n    const hex = abignumer(num).toString(16);\n    return hex.length & 1 ? \"0\" + hex : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== \"string\") {\n        throw new Error(\"hex string expected, got \" + typeof hex);\n    }\n    return hex === \"\" ? _0n : BigInt(\"0x\" + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction bytesToNumberLE(bytes) {\n    return hexToNumber(bytesToHex(copyBytes(abytes(bytes)).reverse()));\n}\nfunction numberToBytesBE(n, len) {\n    anumber(len);\n    n = abignumer(n);\n    const res = hexToBytes(n.toString(16).padStart(len * 2, \"0\"));\n    if (res.length !== len)\n        throw new Error(\"number too large\");\n    return res;\n}\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n/**\n * Copies Uint8Array. We can't use u8a.slice(), because u8a can be Buffer,\n * and Buffer#slice creates mutable copy. Never use Buffers!\n */\nfunction copyBytes(bytes) {\n    return Uint8Array.from(bytes);\n}\n/** Copies several Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/**\n * Decodes 7-bit ASCII string to Uint8Array, throws on non-ascii symbols\n * Should be safe to use for things expected to be ASCII.\n * Returns exact same result as utf8ToBytes for ASCII or throws.\n */\nfunction asciiToBytes(ascii) {\n    return Uint8Array.from(ascii, (c, i) => {\n        const charCode = c.charCodeAt(0);\n        if (c.length !== 1 || charCode > 127) {\n            throw new Error(`string contains non-ASCII character \"${ascii[i]}\" with code ${charCode} at position ${i}`);\n        }\n        return charCode;\n    });\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === \"bigint\" && _0n <= n;\nfunction inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nfunction aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max)) {\n        throw new Error(\"expected valid \" + title + \": \" + min + \" <= n < \" + max + \", got \" + n);\n    }\n}\nfunction validateObject(object, fields = {}, optFields = {}) {\n    if (!object || typeof object !== \"object\") {\n        throw new Error(\"expected valid options object\");\n    }\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null) {\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n        }\n    }\n    const iter = (f, isOpt) => Object.entries(f).forEach(([k, v]) => checkField(k, v, isOpt));\n    iter(fields, false);\n    iter(optFields, true);\n}\nfunction createHasher(hashCons, info = {}) {\n    const hashC = (msg, opts) => hashCons(opts).update(msg).digest();\n    const tmp = hashCons(undefined);\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    Object.assign(hashC, info);\n    return Object.freeze(hashC);\n}\n// /** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\n// export function randomBytes(bytesLength = 32): Uint8Array {\n//   const cr = typeof globalThis != null && (globalThis as any).crypto;\n//   if (!cr || typeof cr.getRandomValues !== \"function\") {\n//     throw new Error(\"crypto.getRandomValues must be defined\");\n//   }\n//   return cr.getRandomValues(new Uint8Array(bytesLength));\n// }\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nasync function randomBytesAsync(bytesLength = 32) {\n    const api = await (0,_misc_js__WEBPACK_IMPORTED_MODULE_0__.loadCrypto)();\n    const rnd = new Uint8Array(bytesLength);\n    api.getRandomValues(rnd);\n    return rnd;\n}\n// 06 09 60 86 48 01 65 03 04 02\nconst oidNist = (suffix) => ({\n    oid: Uint8Array.from([\n        0x06,\n        0x09,\n        0x60,\n        0x86,\n        0x48,\n        0x01,\n        0x65,\n        0x03,\n        0x04,\n        0x02,\n        suffix,\n    ]),\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/utils/noble.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/common/esm/src/xCryptoKey.js":
/*!**************************************************************!*\
  !*** ../sdk/node_modules/@hpke/common/esm/src/xCryptoKey.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XCryptoKey: () => (/* binding */ XCryptoKey)\n/* harmony export */ });\nclass XCryptoKey {\n    constructor(name, key, type, usages = []) {\n        Object.defineProperty(this, \"key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extractable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"algorithm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"usages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.key = key;\n        this.type = type;\n        this.algorithm = { name: name };\n        this.usages = usages;\n        if (type === \"public\") {\n            this.usages = [];\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb21tb24vZXNtL3NyYy94Q3J5cHRvS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvbW1vbi9lc20vc3JjL3hDcnlwdG9LZXkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFhDcnlwdG9LZXkge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGtleSwgdHlwZSwgdXNhZ2VzID0gW10pIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwia2V5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInR5cGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZXh0cmFjdGFibGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFsZ29yaXRobVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1c2FnZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuYWxnb3JpdGhtID0geyBuYW1lOiBuYW1lIH07XG4gICAgICAgIHRoaXMudXNhZ2VzID0gdXNhZ2VzO1xuICAgICAgICBpZiAodHlwZSA9PT0gXCJwdWJsaWNcIikge1xuICAgICAgICAgICAgdGhpcy51c2FnZXMgPSBbXTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/common/esm/src/xCryptoKey.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/mod.js":
/*!*************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/mod.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AeadId: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AeadId),\n/* harmony export */   Aes128Gcm: () => (/* reexport safe */ _src_aeads_aesGcm_js__WEBPACK_IMPORTED_MODULE_1__.Aes128Gcm),\n/* harmony export */   Aes256Gcm: () => (/* reexport safe */ _src_aeads_aesGcm_js__WEBPACK_IMPORTED_MODULE_1__.Aes256Gcm),\n/* harmony export */   CipherSuite: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.CipherSuite),\n/* harmony export */   DecapError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DecapError),\n/* harmony export */   DeriveKeyPairError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeriveKeyPairError),\n/* harmony export */   DeserializeError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError),\n/* harmony export */   DhkemP256HkdfSha256: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.DhkemP256HkdfSha256),\n/* harmony export */   DhkemP384HkdfSha384: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.DhkemP384HkdfSha384),\n/* harmony export */   DhkemP521HkdfSha512: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.DhkemP521HkdfSha512),\n/* harmony export */   DhkemX25519HkdfSha256: () => (/* reexport safe */ _src_kems_dhkemX25519_js__WEBPACK_IMPORTED_MODULE_4__.DhkemX25519HkdfSha256),\n/* harmony export */   DhkemX448HkdfSha512: () => (/* reexport safe */ _src_kems_dhkemX448_js__WEBPACK_IMPORTED_MODULE_5__.DhkemX448HkdfSha512),\n/* harmony export */   EncapError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EncapError),\n/* harmony export */   ExportError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.ExportError),\n/* harmony export */   ExportOnly: () => (/* reexport safe */ _src_aeads_exportOnly_js__WEBPACK_IMPORTED_MODULE_2__.ExportOnly),\n/* harmony export */   HkdfSha256: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.HkdfSha256),\n/* harmony export */   HkdfSha384: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.HkdfSha384),\n/* harmony export */   HkdfSha512: () => (/* reexport safe */ _src_native_js__WEBPACK_IMPORTED_MODULE_3__.HkdfSha512),\n/* harmony export */   HpkeError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HpkeError),\n/* harmony export */   InvalidParamError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError),\n/* harmony export */   KdfId: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KdfId),\n/* harmony export */   KemId: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId),\n/* harmony export */   MessageLimitReachedError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.MessageLimitReachedError),\n/* harmony export */   NotSupportedError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError),\n/* harmony export */   OpenError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.OpenError),\n/* harmony export */   SealError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SealError),\n/* harmony export */   SerializeError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError),\n/* harmony export */   ValidationError: () => (/* reexport safe */ _hpke_common__WEBPACK_IMPORTED_MODULE_0__.ValidationError)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _src_aeads_aesGcm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/aeads/aesGcm.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/aesGcm.js\");\n/* harmony import */ var _src_aeads_exportOnly_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/aeads/exportOnly.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/exportOnly.js\");\n/* harmony import */ var _src_native_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/native.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/native.js\");\n/* harmony import */ var _src_kems_dhkemX25519_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/kems/dhkemX25519.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX25519.js\");\n/* harmony import */ var _src_kems_dhkemX448_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/kems/dhkemX448.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX448.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9tb2QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrUTtBQUNyTTtBQUNOO0FBQzJGO0FBQ2hGO0FBQ0oiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29yZS9lc20vbW9kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEFlYWRJZCwgRGVjYXBFcnJvciwgRGVyaXZlS2V5UGFpckVycm9yLCBEZXNlcmlhbGl6ZUVycm9yLCBFbmNhcEVycm9yLCBFeHBvcnRFcnJvciwgSHBrZUVycm9yLCBJbnZhbGlkUGFyYW1FcnJvciwgS2RmSWQsIEtlbUlkLCBNZXNzYWdlTGltaXRSZWFjaGVkRXJyb3IsIE5vdFN1cHBvcnRlZEVycm9yLCBPcGVuRXJyb3IsIFNlYWxFcnJvciwgU2VyaWFsaXplRXJyb3IsIFZhbGlkYXRpb25FcnJvciwgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5leHBvcnQgeyBBZXMxMjhHY20sIEFlczI1NkdjbSB9IGZyb20gXCIuL3NyYy9hZWFkcy9hZXNHY20uanNcIjtcbmV4cG9ydCB7IEV4cG9ydE9ubHkgfSBmcm9tIFwiLi9zcmMvYWVhZHMvZXhwb3J0T25seS5qc1wiO1xuZXhwb3J0IHsgQ2lwaGVyU3VpdGUsIERoa2VtUDI1NkhrZGZTaGEyNTYsIERoa2VtUDM4NEhrZGZTaGEzODQsIERoa2VtUDUyMUhrZGZTaGE1MTIsIEhrZGZTaGEyNTYsIEhrZGZTaGEzODQsIEhrZGZTaGE1MTIsIH0gZnJvbSBcIi4vc3JjL25hdGl2ZS5qc1wiO1xuZXhwb3J0IHsgRGhrZW1YMjU1MTlIa2RmU2hhMjU2IH0gZnJvbSBcIi4vc3JjL2tlbXMvZGhrZW1YMjU1MTkuanNcIjtcbmV4cG9ydCB7IERoa2VtWDQ0OEhrZGZTaGE1MTIgfSBmcm9tIFwiLi9zcmMva2Vtcy9kaGtlbVg0NDguanNcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/mod.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/aesGcm.js":
/*!**************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/aeads/aesGcm.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Aes128Gcm: () => (/* binding */ Aes128Gcm),\n/* harmony export */   Aes256Gcm: () => (/* binding */ Aes256Gcm),\n/* harmony export */   AesGcmContext: () => (/* binding */ AesGcmContext)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\nclass AesGcmContext extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NativeAlgorithm {\n    constructor(key) {\n        super();\n        Object.defineProperty(this, \"_rawKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this._rawKey = key;\n    }\n    async seal(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const ct = await this._api.encrypt(alg, this._key, data);\n        return ct;\n    }\n    async open(iv, data, aad) {\n        await this._setupKey();\n        const alg = {\n            name: \"AES-GCM\",\n            iv: iv,\n            additionalData: aad,\n        };\n        const pt = await this._api.decrypt(alg, this._key, data);\n        return pt;\n    }\n    async _setupKey() {\n        if (this._key !== undefined) {\n            return;\n        }\n        await this._setup();\n        const key = await this._importKey(this._rawKey);\n        (new Uint8Array(this._rawKey)).fill(0);\n        this._key = key;\n        return;\n    }\n    async _importKey(key) {\n        return await this._api.importKey(\"raw\", key, { name: \"AES-GCM\" }, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AEAD_USAGES);\n    }\n}\n/**\n * The AES-128-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes128Gcm`.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass Aes128Gcm {\n    constructor() {\n        /** AeadId.Aes128Gcm (0x0001) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AeadId.Aes128Gcm\n        });\n        /** 16 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n    createEncryptionContext(key) {\n        return new AesGcmContext(key);\n    }\n}\n/**\n * The AES-256-GCM for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.Aes256Gcm`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nclass Aes256Gcm extends Aes128Gcm {\n    constructor() {\n        super(...arguments);\n        /** AeadId.Aes256Gcm (0x0002) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AeadId.Aes256Gcm\n        });\n        /** 32 */\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 12 */\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 12\n        });\n        /** 16 */\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 16\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvYWVhZHMvYWVzR2NtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0U7QUFDN0QsNEJBQTRCLHlEQUFlO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGlCQUFpQixRQUFRLHFEQUFXO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxvQkFBb0I7QUFDbkU7QUFDQTtBQUNBLCtCQUErQix5QkFBeUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdEQUFNO0FBQ3pCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msb0JBQW9CO0FBQ25FO0FBQ0E7QUFDQSwrQkFBK0IseUJBQXlCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0RBQU07QUFDekIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29yZS9lc20vc3JjL2FlYWRzL2Flc0djbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBRUFEX1VTQUdFUywgQWVhZElkLCBOYXRpdmVBbGdvcml0aG0gfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5leHBvcnQgY2xhc3MgQWVzR2NtQ29udGV4dCBleHRlbmRzIE5hdGl2ZUFsZ29yaXRobSB7XG4gICAgY29uc3RydWN0b3Ioa2V5KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9yYXdLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2tleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9yYXdLZXkgPSBrZXk7XG4gICAgfVxuICAgIGFzeW5jIHNlYWwoaXYsIGRhdGEsIGFhZCkge1xuICAgICAgICBhd2FpdCB0aGlzLl9zZXR1cEtleSgpO1xuICAgICAgICBjb25zdCBhbGcgPSB7XG4gICAgICAgICAgICBuYW1lOiBcIkFFUy1HQ01cIixcbiAgICAgICAgICAgIGl2OiBpdixcbiAgICAgICAgICAgIGFkZGl0aW9uYWxEYXRhOiBhYWQsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGN0ID0gYXdhaXQgdGhpcy5fYXBpLmVuY3J5cHQoYWxnLCB0aGlzLl9rZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gY3Q7XG4gICAgfVxuICAgIGFzeW5jIG9wZW4oaXYsIGRhdGEsIGFhZCkge1xuICAgICAgICBhd2FpdCB0aGlzLl9zZXR1cEtleSgpO1xuICAgICAgICBjb25zdCBhbGcgPSB7XG4gICAgICAgICAgICBuYW1lOiBcIkFFUy1HQ01cIixcbiAgICAgICAgICAgIGl2OiBpdixcbiAgICAgICAgICAgIGFkZGl0aW9uYWxEYXRhOiBhYWQsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHB0ID0gYXdhaXQgdGhpcy5fYXBpLmRlY3J5cHQoYWxnLCB0aGlzLl9rZXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gcHQ7XG4gICAgfVxuICAgIGFzeW5jIF9zZXR1cEtleSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2tleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgdGhpcy5fc2V0dXAoKTtcbiAgICAgICAgY29uc3Qga2V5ID0gYXdhaXQgdGhpcy5faW1wb3J0S2V5KHRoaXMuX3Jhd0tleSk7XG4gICAgICAgIChuZXcgVWludDhBcnJheSh0aGlzLl9yYXdLZXkpKS5maWxsKDApO1xuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgYXN5bmMgX2ltcG9ydEtleShrZXkpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2FwaS5pbXBvcnRLZXkoXCJyYXdcIiwga2V5LCB7IG5hbWU6IFwiQUVTLUdDTVwiIH0sIHRydWUsIEFFQURfVVNBR0VTKTtcbiAgICB9XG59XG4vKipcbiAqIFRoZSBBRVMtMTI4LUdDTSBmb3IgSFBLRSBBRUFEIGltcGxlbWVudGluZyB7QGxpbmsgQWVhZEludGVyZmFjZX0uXG4gKlxuICogV2hlbiB1c2luZyBgQGhwa2UvY29yZWAsIHRoZSBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzIG11c3QgYmUgc3BlY2lmaWVkXG4gKiB0byB0aGUgYGFlYWRgIHBhcmFtZXRlciBvZiB7QGxpbmsgQ2lwaGVyU3VpdGVQYXJhbXN9IGluc3RlYWQgb2YgYEFlYWRJZC5BZXMxMjhHY21gLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7XG4gKiAgIEFlczEyOEdjbSxcbiAqICAgQ2lwaGVyU3VpdGUsXG4gKiAgIERoa2VtUDI1NkhrZGZTaGEyNTYsXG4gKiAgIEhrZGZTaGEyNTYsXG4gKiB9IGZyb20gXCJAaHBrZS9jb3JlXCI7XG4gKlxuICogY29uc3Qgc3VpdGUgPSBuZXcgQ2lwaGVyU3VpdGUoe1xuICogICBrZW06IG5ldyBEaGtlbVAyNTZIa2RmU2hhMjU2KCksXG4gKiAgIGtkZjogbmV3IEhrZGZTaGEyNTYoKSxcbiAqICAgYWVhZDogbmV3IEFlczEyOEdjbSgpLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFlczEyOEdjbSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKiBBZWFkSWQuQWVzMTI4R2NtICgweDAwMDEpICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBBZWFkSWQuQWVzMTI4R2NtXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogMTYgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwia2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMTZcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiAxMiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJub25jZVNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDEyXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogMTYgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidGFnU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMTZcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUVuY3J5cHRpb25Db250ZXh0KGtleSkge1xuICAgICAgICByZXR1cm4gbmV3IEFlc0djbUNvbnRleHQoa2V5KTtcbiAgICB9XG59XG4vKipcbiAqIFRoZSBBRVMtMjU2LUdDTSBmb3IgSFBLRSBBRUFEIGltcGxlbWVudGluZyB7QGxpbmsgQWVhZEludGVyZmFjZX0uXG4gKlxuICogV2hlbiB1c2luZyBgQGhwa2UvY29yZWAsIHRoZSBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzIG11c3QgYmUgc3BlY2lmaWVkXG4gKiB0byB0aGUgYGFlYWRgIHBhcmFtZXRlciBvZiB7QGxpbmsgQ2lwaGVyU3VpdGVQYXJhbXN9IGluc3RlYWQgb2YgYEFlYWRJZC5BZXMyNTZHY21gXG4gKiBhcyBmb2xsb3dzOlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7XG4gKiAgIEFlczI1NkdjbSxcbiAqICAgQ2lwaGVyU3VpdGUsXG4gKiAgIERoa2VtUDI1NkhrZGZTaGEyNTYsXG4gKiAgIEhrZGZTaGEyNTYsXG4gKiB9IGZyb20gXCJAaHBrZS9jb3JlXCI7XG4gKlxuICogY29uc3Qgc3VpdGUgPSBuZXcgQ2lwaGVyU3VpdGUoe1xuICogICBrZW06IG5ldyBEaGtlbVAyNTZIa2RmU2hhMjU2KCksXG4gKiAgIGtkZjogbmV3IEhrZGZTaGEyNTYoKSxcbiAqICAgYWVhZDogbmV3IEFlczI1NkdjbSgpLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFlczI1NkdjbSBleHRlbmRzIEFlczEyOEdjbSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIC8qKiBBZWFkSWQuQWVzMjU2R2NtICgweDAwMDIpICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBBZWFkSWQuQWVzMjU2R2NtXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogMzIgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwia2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMzJcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiAxMiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJub25jZVNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDEyXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogMTYgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidGFnU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMTZcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/aesGcm.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/exportOnly.js":
/*!******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/aeads/exportOnly.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExportOnly: () => (/* binding */ ExportOnly)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\n/**\n * The ExportOnly mode for HPKE AEAD implementing {@link AeadInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `aead` parameter of {@link CipherSuiteParams} instead of `AeadId.ExportOnly`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   ExportOnly,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new ExportOnly(),\n * });\n * ```\n */\nclass ExportOnly {\n    constructor() {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AeadId.ExportOnly\n        });\n        Object.defineProperty(this, \"keySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"nonceSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"tagSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    createEncryptionContext(_key) {\n        throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError(\"Export only\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvYWVhZHMvZXhwb3J0T25seS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5RDtBQUN6RDtBQUNBLG1EQUFtRCxvQkFBb0I7QUFDdkU7QUFDQTtBQUNBLCtCQUErQix5QkFBeUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGdEQUFNO0FBQ3pCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFpQjtBQUNuQztBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvcmUvZXNtL3NyYy9hZWFkcy9leHBvcnRPbmx5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFlYWRJZCwgTm90U3VwcG9ydGVkRXJyb3IgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG4vKipcbiAqIFRoZSBFeHBvcnRPbmx5IG1vZGUgZm9yIEhQS0UgQUVBRCBpbXBsZW1lbnRpbmcge0BsaW5rIEFlYWRJbnRlcmZhY2V9LlxuICpcbiAqIFdoZW4gdXNpbmcgYEBocGtlL2NvcmVgLCB0aGUgaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcyBtdXN0IGJlIHNwZWNpZmllZFxuICogdG8gdGhlIGBhZWFkYCBwYXJhbWV0ZXIgb2Yge0BsaW5rIENpcGhlclN1aXRlUGFyYW1zfSBpbnN0ZWFkIG9mIGBBZWFkSWQuRXhwb3J0T25seWBcbiAqIGFzIGZvbGxvd3M6XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHtcbiAqICAgQ2lwaGVyU3VpdGUsXG4gKiAgIERoa2VtUDI1NkhrZGZTaGEyNTYsXG4gKiAgIEV4cG9ydE9ubHksXG4gKiAgIEhrZGZTaGEyNTYsXG4gKiB9IGZyb20gXCJAaHBrZS9jb3JlXCI7XG4gKlxuICogY29uc3Qgc3VpdGUgPSBuZXcgQ2lwaGVyU3VpdGUoe1xuICogICBrZW06IG5ldyBEaGtlbVAyNTZIa2RmU2hhMjU2KCksXG4gKiAgIGtkZjogbmV3IEhrZGZTaGEyNTYoKSxcbiAqICAgYWVhZDogbmV3IEV4cG9ydE9ubHkoKSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBFeHBvcnRPbmx5IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IEFlYWRJZC5FeHBvcnRPbmx5XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJrZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJub25jZVNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRhZ1NpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDBcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZUVuY3J5cHRpb25Db250ZXh0KF9rZXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IE5vdFN1cHBvcnRlZEVycm9yKFwiRXhwb3J0IG9ubHlcIik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/aeads/exportOnly.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/cipherSuiteNative.js":
/*!*******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/cipherSuiteNative.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CipherSuiteNative: () => (/* binding */ CipherSuiteNative)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _exporterContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exporterContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/exporterContext.js\");\n/* harmony import */ var _recipientContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recipientContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/recipientContext.js\");\n/* harmony import */ var _senderContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./senderContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/senderContext.js\");\n\n\n\n\n// b\"base_nonce\"\n// deno-fmt-ignore\nconst LABEL_BASE_NONCE = new Uint8Array([\n    98, 97, 115, 101, 95, 110, 111, 110, 99, 101,\n]);\n// b\"exp\"\nconst LABEL_EXP = new Uint8Array([101, 120, 112]);\n// b\"info_hash\"\n// deno-fmt-ignore\nconst LABEL_INFO_HASH = new Uint8Array([\n    105, 110, 102, 111, 95, 104, 97, 115, 104,\n]);\n// b\"key\"\nconst LABEL_KEY = new Uint8Array([107, 101, 121]);\n// b\"psk_id_hash\"\n// deno-fmt-ignore\nconst LABEL_PSK_ID_HASH = new Uint8Array([\n    112, 115, 107, 95, 105, 100, 95, 104, 97, 115, 104,\n]);\n// b\"secret\"\nconst LABEL_SECRET = new Uint8Array([115, 101, 99, 114, 101, 116]);\n// b\"HPKE\"\n// deno-fmt-ignore\nconst SUITE_ID_HEADER_HPKE = new Uint8Array([\n    72, 80, 75, 69, 0, 0, 0, 0, 0, 0,\n]);\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This is the super class of {@link CipherSuite} and the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuite | @hpke/core#CipherSuite} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n *   - DHKEM(X25519, HKDF-SHA256)\n *   - DHKEM(X448, HKDF-SHA512)\n *   - ChaCha20Poly1305\n *\n * In addtion, the HKDF functions contained in this class can only derive\n * keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *   - {@link createSenderContext}\n *   - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *   - {@link seal}\n *   - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * // Use an extension module.\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass CipherSuiteNative extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NativeAlgorithm {\n    /**\n     * @param params A set of parameters for building a cipher suite.\n     *\n     * If the error occurred, throws {@link InvalidParamError}.\n     *\n     * @throws {@link InvalidParamError}\n     */\n    constructor(params) {\n        super();\n        Object.defineProperty(this, \"_kem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_suiteId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // KEM\n        if (typeof params.kem === \"number\") {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"KemId cannot be used\");\n        }\n        this._kem = params.kem;\n        // KDF\n        if (typeof params.kdf === \"number\") {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"KdfId cannot be used\");\n        }\n        this._kdf = params.kdf;\n        // AEAD\n        if (typeof params.aead === \"number\") {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"AeadId cannot be used\");\n        }\n        this._aead = params.aead;\n        this._suiteId = new Uint8Array(SUITE_ID_HEADER_HPKE);\n        this._suiteId.set((0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.i2Osp)(this._kem.id, 2), 4);\n        this._suiteId.set((0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.i2Osp)(this._kdf.id, 2), 6);\n        this._suiteId.set((0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.i2Osp)(this._aead.id, 2), 8);\n        this._kdf.init(this._suiteId);\n    }\n    /**\n     * Gets the KEM context of the ciphersuite.\n     */\n    get kem() {\n        return this._kem;\n    }\n    /**\n     * Gets the KDF context of the ciphersuite.\n     */\n    get kdf() {\n        return this._kdf;\n    }\n    /**\n     * Gets the AEAD context of the ciphersuite.\n     */\n    get aead() {\n        return this._aead;\n    }\n    /**\n     * Creates an encryption context for a sender.\n     *\n     * If the error occurred, throws {@link DecapError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the sender encryption context.\n     * @returns A sender encryption context.\n     * @throws {@link EncapError}, {@link ValidationError}\n     */\n    async createSenderContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const dh = await this._kem.encap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderKey !== undefined ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.AuthPsk : _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Psk;\n        }\n        else {\n            mode = params.senderKey !== undefined ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Auth : _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Base;\n        }\n        return await this._keyScheduleS(mode, dh.sharedSecret, dh.enc, params);\n    }\n    /**\n     * Creates an encryption context for a recipient.\n     *\n     * If the error occurred, throws {@link DecapError}\n     * | {@link DeserializeError} | {@link ValidationError}.\n     *\n     * @param params A set of parameters for the recipient encryption context.\n     * @returns A recipient encryption context.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link ValidationError}\n     */\n    async createRecipientContext(params) {\n        this._validateInputLength(params);\n        await this._setup();\n        const sharedSecret = await this._kem.decap(params);\n        let mode;\n        if (params.psk !== undefined) {\n            mode = params.senderPublicKey !== undefined ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.AuthPsk : _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Psk;\n        }\n        else {\n            mode = params.senderPublicKey !== undefined ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Auth : _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Mode.Base;\n        }\n        return await this._keyScheduleR(mode, sharedSecret, params);\n    }\n    /**\n     * Encrypts a message to a recipient.\n     *\n     * If the error occurred, throws `EncapError` | `MessageLimitReachedError` | `SealError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a sender encryption context.\n     * @param pt A plain text as bytes to be encrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A cipher text and an encapsulated key as bytes.\n     * @throws {@link EncapError}, {@link MessageLimitReachedError}, {@link SealError}, {@link ValidationError}\n     */\n    async seal(params, pt, aad = _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer) {\n        const ctx = await this.createSenderContext(params);\n        return {\n            ct: await ctx.seal(pt, aad),\n            enc: ctx.enc,\n        };\n    }\n    /**\n     * Decrypts a message from a sender.\n     *\n     * If the error occurred, throws `DecapError` | `DeserializeError` | `OpenError` | `ValidationError`.\n     *\n     * @param params A set of parameters for building a recipient encryption context.\n     * @param ct An encrypted text as bytes to be decrypted.\n     * @param aad Additional authenticated data as bytes fed by an application.\n     * @returns A decrypted plain text as bytes.\n     * @throws {@link DecapError}, {@link DeserializeError}, {@link OpenError}, {@link ValidationError}\n     */\n    async open(params, ct, aad = _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer) {\n        const ctx = await this.createRecipientContext(params);\n        return await ctx.open(ct, aad);\n    }\n    // private verifyPskInputs(mode: Mode, params: KeyScheduleParams) {\n    //   const gotPsk = (params.psk !== undefined);\n    //   const gotPskId = (params.psk !== undefined && params.psk.id.byteLength > 0);\n    //   if (gotPsk !== gotPskId) {\n    //     throw new Error('Inconsistent PSK inputs');\n    //   }\n    //   if (gotPsk && (mode === Mode.Base || mode === Mode.Auth)) {\n    //     throw new Error('PSK input provided when not needed');\n    //   }\n    //   if (!gotPsk && (mode === Mode.Psk || mode === Mode.AuthPsk)) {\n    //     throw new Error('Missing required PSK input');\n    //   }\n    //   return;\n    // }\n    async _keySchedule(mode, sharedSecret, params) {\n        // Currently, there is no point in executing this function\n        // because this hpke library does not allow users to explicitly specify the mode.\n        //\n        // this.verifyPskInputs(mode, params);\n        const pskId = params.psk === undefined\n            ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY\n            : new Uint8Array(params.psk.id);\n        const pskIdHash = await this._kdf.labeledExtract(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, LABEL_PSK_ID_HASH, pskId);\n        const info = params.info === undefined\n            ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY\n            : new Uint8Array(params.info);\n        const infoHash = await this._kdf.labeledExtract(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, LABEL_INFO_HASH, info);\n        const keyScheduleContext = new Uint8Array(1 + pskIdHash.byteLength + infoHash.byteLength);\n        keyScheduleContext.set(new Uint8Array([mode]), 0);\n        keyScheduleContext.set(new Uint8Array(pskIdHash), 1);\n        keyScheduleContext.set(new Uint8Array(infoHash), 1 + pskIdHash.byteLength);\n        const psk = params.psk === undefined\n            ? _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY\n            : new Uint8Array(params.psk.key);\n        const ikm = this._kdf.buildLabeledIkm(LABEL_SECRET, psk)\n            .buffer;\n        const exporterSecretInfo = this._kdf.buildLabeledInfo(LABEL_EXP, keyScheduleContext, this._kdf.hashSize).buffer;\n        const exporterSecret = await this._kdf.extractAndExpand(sharedSecret, ikm, exporterSecretInfo, this._kdf.hashSize);\n        if (this._aead.id === _hpke_common__WEBPACK_IMPORTED_MODULE_0__.AeadId.ExportOnly) {\n            return { aead: this._aead, exporterSecret: exporterSecret };\n        }\n        const keyInfo = this._kdf.buildLabeledInfo(LABEL_KEY, keyScheduleContext, this._aead.keySize).buffer;\n        const key = await this._kdf.extractAndExpand(sharedSecret, ikm, keyInfo, this._aead.keySize);\n        const baseNonceInfo = this._kdf.buildLabeledInfo(LABEL_BASE_NONCE, keyScheduleContext, this._aead.nonceSize).buffer;\n        const baseNonce = await this._kdf.extractAndExpand(sharedSecret, ikm, baseNonceInfo, this._aead.nonceSize);\n        return {\n            aead: this._aead,\n            exporterSecret: exporterSecret,\n            key: key,\n            baseNonce: new Uint8Array(baseNonce),\n            seq: 0,\n        };\n    }\n    async _keyScheduleS(mode, sharedSecret, enc, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new _exporterContext_js__WEBPACK_IMPORTED_MODULE_1__.SenderExporterContextImpl(this._api, this._kdf, res.exporterSecret, enc);\n        }\n        return new _senderContext_js__WEBPACK_IMPORTED_MODULE_3__.SenderContextImpl(this._api, this._kdf, res, enc);\n    }\n    async _keyScheduleR(mode, sharedSecret, params) {\n        const res = await this._keySchedule(mode, sharedSecret, params);\n        if (res.key === undefined) {\n            return new _exporterContext_js__WEBPACK_IMPORTED_MODULE_1__.RecipientExporterContextImpl(this._api, this._kdf, res.exporterSecret);\n        }\n        return new _recipientContext_js__WEBPACK_IMPORTED_MODULE_2__.RecipientContextImpl(this._api, this._kdf, res);\n    }\n    _validateInputLength(params) {\n        if (params.info !== undefined &&\n            params.info.byteLength > _hpke_common__WEBPACK_IMPORTED_MODULE_0__.INFO_LENGTH_LIMIT) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"Too long info\");\n        }\n        if (params.psk !== undefined) {\n            if (params.psk.key.byteLength < _hpke_common__WEBPACK_IMPORTED_MODULE_0__.MINIMUM_PSK_LENGTH) {\n                throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(`PSK must have at least ${_hpke_common__WEBPACK_IMPORTED_MODULE_0__.MINIMUM_PSK_LENGTH} bytes`);\n            }\n            if (params.psk.key.byteLength > _hpke_common__WEBPACK_IMPORTED_MODULE_0__.INPUT_LENGTH_LIMIT) {\n                throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"Too long psk.key\");\n            }\n            if (params.psk.id.byteLength > _hpke_common__WEBPACK_IMPORTED_MODULE_0__.INPUT_LENGTH_LIMIT) {\n                throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"Too long psk.id\");\n            }\n        }\n        return;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/cipherSuiteNative.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/encryptionContext.js":
/*!*******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/encryptionContext.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionContextImpl: () => (/* binding */ EncryptionContextImpl)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _exporterContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exporterContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/exporterContext.js\");\n\n\nclass EncryptionContextImpl extends _exporterContext_js__WEBPACK_IMPORTED_MODULE_1__.ExporterContextImpl {\n    constructor(api, kdf, params) {\n        super(api, kdf, params.exporterSecret);\n        // AEAD id.\n        Object.defineProperty(this, \"_aead\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a key for the algorithm.\n        Object.defineProperty(this, \"_nK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of a nonce for the algorithm.\n        Object.defineProperty(this, \"_nN\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The length in bytes of an authentication tag for the algorithm.\n        Object.defineProperty(this, \"_nT\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The end-to-end encryption key information.\n        Object.defineProperty(this, \"_ctx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (params.key === undefined || params.baseNonce === undefined ||\n            params.seq === undefined) {\n            throw new Error(\"Required parameters are missing\");\n        }\n        this._aead = params.aead;\n        this._nK = this._aead.keySize;\n        this._nN = this._aead.nonceSize;\n        this._nT = this._aead.tagSize;\n        const key = this._aead.createEncryptionContext(params.key);\n        this._ctx = {\n            key: key,\n            baseNonce: params.baseNonce,\n            seq: params.seq,\n        };\n    }\n    computeNonce(k) {\n        const seqBytes = (0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.i2Osp)(k.seq, k.baseNonce.byteLength);\n        return (0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.xor)(k.baseNonce, seqBytes).buffer;\n    }\n    incrementSeq(k) {\n        // if (this.seq >= (1 << (8 * this.baseNonce.byteLength)) - 1) {\n        if (k.seq > Number.MAX_SAFE_INTEGER) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.MessageLimitReachedError(\"Message limit reached\");\n        }\n        k.seq += 1;\n        return;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvZW5jcnlwdGlvbkNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9FO0FBQ1Q7QUFDcEQsb0NBQW9DLG9FQUFtQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixtREFBSztBQUM5QixlQUFlLGlEQUFHO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtFQUF3QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvcmUvZXNtL3NyYy9lbmNyeXB0aW9uQ29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpMk9zcCwgTWVzc2FnZUxpbWl0UmVhY2hlZEVycm9yLCB4b3IgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5pbXBvcnQgeyBFeHBvcnRlckNvbnRleHRJbXBsIH0gZnJvbSBcIi4vZXhwb3J0ZXJDb250ZXh0LmpzXCI7XG5leHBvcnQgY2xhc3MgRW5jcnlwdGlvbkNvbnRleHRJbXBsIGV4dGVuZHMgRXhwb3J0ZXJDb250ZXh0SW1wbCB7XG4gICAgY29uc3RydWN0b3IoYXBpLCBrZGYsIHBhcmFtcykge1xuICAgICAgICBzdXBlcihhcGksIGtkZiwgcGFyYW1zLmV4cG9ydGVyU2VjcmV0KTtcbiAgICAgICAgLy8gQUVBRCBpZC5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2FlYWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gVGhlIGxlbmd0aCBpbiBieXRlcyBvZiBhIGtleSBmb3IgdGhlIGFsZ29yaXRobS5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX25LXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFRoZSBsZW5ndGggaW4gYnl0ZXMgb2YgYSBub25jZSBmb3IgdGhlIGFsZ29yaXRobS5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX25OXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFRoZSBsZW5ndGggaW4gYnl0ZXMgb2YgYW4gYXV0aGVudGljYXRpb24gdGFnIGZvciB0aGUgYWxnb3JpdGhtLlxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfblRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gVGhlIGVuZC10by1lbmQgZW5jcnlwdGlvbiBrZXkgaW5mb3JtYXRpb24uXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9jdHhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHBhcmFtcy5rZXkgPT09IHVuZGVmaW5lZCB8fCBwYXJhbXMuYmFzZU5vbmNlID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgIHBhcmFtcy5zZXEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVxdWlyZWQgcGFyYW1ldGVycyBhcmUgbWlzc2luZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9hZWFkID0gcGFyYW1zLmFlYWQ7XG4gICAgICAgIHRoaXMuX25LID0gdGhpcy5fYWVhZC5rZXlTaXplO1xuICAgICAgICB0aGlzLl9uTiA9IHRoaXMuX2FlYWQubm9uY2VTaXplO1xuICAgICAgICB0aGlzLl9uVCA9IHRoaXMuX2FlYWQudGFnU2l6ZTtcbiAgICAgICAgY29uc3Qga2V5ID0gdGhpcy5fYWVhZC5jcmVhdGVFbmNyeXB0aW9uQ29udGV4dChwYXJhbXMua2V5KTtcbiAgICAgICAgdGhpcy5fY3R4ID0ge1xuICAgICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgICBiYXNlTm9uY2U6IHBhcmFtcy5iYXNlTm9uY2UsXG4gICAgICAgICAgICBzZXE6IHBhcmFtcy5zZXEsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXB1dGVOb25jZShrKSB7XG4gICAgICAgIGNvbnN0IHNlcUJ5dGVzID0gaTJPc3Aoay5zZXEsIGsuYmFzZU5vbmNlLmJ5dGVMZW5ndGgpO1xuICAgICAgICByZXR1cm4geG9yKGsuYmFzZU5vbmNlLCBzZXFCeXRlcykuYnVmZmVyO1xuICAgIH1cbiAgICBpbmNyZW1lbnRTZXEoaykge1xuICAgICAgICAvLyBpZiAodGhpcy5zZXEgPj0gKDEgPDwgKDggKiB0aGlzLmJhc2VOb25jZS5ieXRlTGVuZ3RoKSkgLSAxKSB7XG4gICAgICAgIGlmIChrLnNlcSA+IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgTWVzc2FnZUxpbWl0UmVhY2hlZEVycm9yKFwiTWVzc2FnZSBsaW1pdCByZWFjaGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGsuc2VxICs9IDE7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/encryptionContext.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/exporterContext.js":
/*!*****************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/exporterContext.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExporterContextImpl: () => (/* binding */ ExporterContextImpl),\n/* harmony export */   RecipientExporterContextImpl: () => (/* binding */ RecipientExporterContextImpl),\n/* harmony export */   SenderExporterContextImpl: () => (/* binding */ SenderExporterContextImpl)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _utils_emitNotSupported_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/emitNotSupported.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/utils/emitNotSupported.js\");\n\n\n// b\"sec\"\nconst LABEL_SEC = new Uint8Array([115, 101, 99]);\nclass ExporterContextImpl {\n    constructor(api, kdf, exporterSecret) {\n        Object.defineProperty(this, \"_api\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exporterSecret\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_kdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._api = api;\n        this._kdf = kdf;\n        this.exporterSecret = exporterSecret;\n    }\n    async seal(_data, _aad) {\n        return await (0,_utils_emitNotSupported_js__WEBPACK_IMPORTED_MODULE_1__.emitNotSupported)();\n    }\n    async open(_data, _aad) {\n        return await (0,_utils_emitNotSupported_js__WEBPACK_IMPORTED_MODULE_1__.emitNotSupported)();\n    }\n    async export(exporterContext, len) {\n        if (exporterContext.byteLength > _hpke_common__WEBPACK_IMPORTED_MODULE_0__.INPUT_LENGTH_LIMIT) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.InvalidParamError(\"Too long exporter context\");\n        }\n        try {\n            return await this._kdf.labeledExpand(this.exporterSecret, LABEL_SEC, new Uint8Array(exporterContext), len);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.ExportError(e);\n        }\n    }\n}\nclass RecipientExporterContextImpl extends ExporterContextImpl {\n}\nclass SenderExporterContextImpl extends ExporterContextImpl {\n    constructor(api, kdf, exporterSecret, enc) {\n        super(api, kdf, exporterSecret);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n        return;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvZXhwb3J0ZXJDb250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1GO0FBQ3BCO0FBQy9EO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0RUFBZ0I7QUFDckM7QUFDQTtBQUNBLHFCQUFxQiw0RUFBZ0I7QUFDckM7QUFDQTtBQUNBLHlDQUF5Qyw0REFBa0I7QUFDM0Qsc0JBQXNCLDJEQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvcmUvZXNtL3NyYy9leHBvcnRlckNvbnRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXhwb3J0RXJyb3IsIElOUFVUX0xFTkdUSF9MSU1JVCwgSW52YWxpZFBhcmFtRXJyb3IsIH0gZnJvbSBcIkBocGtlL2NvbW1vblwiO1xuaW1wb3J0IHsgZW1pdE5vdFN1cHBvcnRlZCB9IGZyb20gXCIuL3V0aWxzL2VtaXROb3RTdXBwb3J0ZWQuanNcIjtcbi8vIGJcInNlY1wiXG5jb25zdCBMQUJFTF9TRUMgPSBuZXcgVWludDhBcnJheShbMTE1LCAxMDEsIDk5XSk7XG5leHBvcnQgY2xhc3MgRXhwb3J0ZXJDb250ZXh0SW1wbCB7XG4gICAgY29uc3RydWN0b3IoYXBpLCBrZGYsIGV4cG9ydGVyU2VjcmV0KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9hcGlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZXhwb3J0ZXJTZWNyZXRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2tkZlwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9hcGkgPSBhcGk7XG4gICAgICAgIHRoaXMuX2tkZiA9IGtkZjtcbiAgICAgICAgdGhpcy5leHBvcnRlclNlY3JldCA9IGV4cG9ydGVyU2VjcmV0O1xuICAgIH1cbiAgICBhc3luYyBzZWFsKF9kYXRhLCBfYWFkKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBlbWl0Tm90U3VwcG9ydGVkKCk7XG4gICAgfVxuICAgIGFzeW5jIG9wZW4oX2RhdGEsIF9hYWQpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGVtaXROb3RTdXBwb3J0ZWQoKTtcbiAgICB9XG4gICAgYXN5bmMgZXhwb3J0KGV4cG9ydGVyQ29udGV4dCwgbGVuKSB7XG4gICAgICAgIGlmIChleHBvcnRlckNvbnRleHQuYnl0ZUxlbmd0aCA+IElOUFVUX0xFTkdUSF9MSU1JVCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRQYXJhbUVycm9yKFwiVG9vIGxvbmcgZXhwb3J0ZXIgY29udGV4dFwiKTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2tkZi5sYWJlbGVkRXhwYW5kKHRoaXMuZXhwb3J0ZXJTZWNyZXQsIExBQkVMX1NFQywgbmV3IFVpbnQ4QXJyYXkoZXhwb3J0ZXJDb250ZXh0KSwgbGVuKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEV4cG9ydEVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJlY2lwaWVudEV4cG9ydGVyQ29udGV4dEltcGwgZXh0ZW5kcyBFeHBvcnRlckNvbnRleHRJbXBsIHtcbn1cbmV4cG9ydCBjbGFzcyBTZW5kZXJFeHBvcnRlckNvbnRleHRJbXBsIGV4dGVuZHMgRXhwb3J0ZXJDb250ZXh0SW1wbCB7XG4gICAgY29uc3RydWN0b3IoYXBpLCBrZGYsIGV4cG9ydGVyU2VjcmV0LCBlbmMpIHtcbiAgICAgICAgc3VwZXIoYXBpLCBrZGYsIGV4cG9ydGVyU2VjcmV0KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZW5jXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZW5jID0gZW5jO1xuICAgICAgICByZXR1cm47XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/exporterContext.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemNative.js":
/*!******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/kems/dhkemNative.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DhkemP256HkdfSha256Native: () => (/* binding */ DhkemP256HkdfSha256Native),\n/* harmony export */   DhkemP384HkdfSha384Native: () => (/* binding */ DhkemP384HkdfSha384Native),\n/* harmony export */   DhkemP521HkdfSha512Native: () => (/* binding */ DhkemP521HkdfSha512Native)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\nclass DhkemP256HkdfSha256Native extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Dhkem {\n    constructor() {\n        const kdf = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha256Native();\n        const prim = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Ec(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP256HkdfSha256, kdf);\n        super(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP256HkdfSha256, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP256HkdfSha256\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 65\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n    }\n}\nclass DhkemP384HkdfSha384Native extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Dhkem {\n    constructor() {\n        const kdf = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha384Native();\n        const prim = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Ec(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP384HkdfSha384, kdf);\n        super(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP384HkdfSha384, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP384HkdfSha384\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 97\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 48\n        });\n    }\n}\nclass DhkemP521HkdfSha512Native extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Dhkem {\n    constructor() {\n        const kdf = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha512Native();\n        const prim = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Ec(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP521HkdfSha512, kdf);\n        super(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP521HkdfSha512, prim, kdf);\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemP521HkdfSha512\n        });\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 133\n        });\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMva2Vtcy9kaGtlbU5hdGl2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVHO0FBQ2hHLHdDQUF3QywrQ0FBSztBQUNwRDtBQUNBLHdCQUF3QiwwREFBZ0I7QUFDeEMseUJBQXlCLDRDQUFFLENBQUMsK0NBQUs7QUFDakMsY0FBYywrQ0FBSztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrQ0FBSztBQUN4QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ08sd0NBQXdDLCtDQUFLO0FBQ3BEO0FBQ0Esd0JBQXdCLDBEQUFnQjtBQUN4Qyx5QkFBeUIsNENBQUUsQ0FBQywrQ0FBSztBQUNqQyxjQUFjLCtDQUFLO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtDQUFLO0FBQ3hCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTyx3Q0FBd0MsK0NBQUs7QUFDcEQ7QUFDQSx3QkFBd0IsMERBQWdCO0FBQ3hDLHlCQUF5Qiw0Q0FBRSxDQUFDLCtDQUFLO0FBQ2pDLGNBQWMsK0NBQUs7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0NBQUs7QUFDeEIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMva2Vtcy9kaGtlbU5hdGl2ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaGtlbSwgRWMsIEhrZGZTaGEyNTZOYXRpdmUsIEhrZGZTaGEzODROYXRpdmUsIEhrZGZTaGE1MTJOYXRpdmUsIEtlbUlkLCB9IGZyb20gXCJAaHBrZS9jb21tb25cIjtcbmV4cG9ydCBjbGFzcyBEaGtlbVAyNTZIa2RmU2hhMjU2TmF0aXZlIGV4dGVuZHMgRGhrZW0ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zdCBrZGYgPSBuZXcgSGtkZlNoYTI1Nk5hdGl2ZSgpO1xuICAgICAgICBjb25zdCBwcmltID0gbmV3IEVjKEtlbUlkLkRoa2VtUDI1NkhrZGZTaGEyNTYsIGtkZik7XG4gICAgICAgIHN1cGVyKEtlbUlkLkRoa2VtUDI1NkhrZGZTaGEyNTYsIHByaW0sIGtkZik7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBLZW1JZC5EaGtlbVAyNTZIa2RmU2hhMjU2XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzZWNyZXRTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAzMlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZW5jU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogNjVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInB1YmxpY0tleVNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDY1XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcml2YXRlS2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMzJcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIERoa2VtUDM4NEhrZGZTaGEzODROYXRpdmUgZXh0ZW5kcyBEaGtlbSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IGtkZiA9IG5ldyBIa2RmU2hhMzg0TmF0aXZlKCk7XG4gICAgICAgIGNvbnN0IHByaW0gPSBuZXcgRWMoS2VtSWQuRGhrZW1QMzg0SGtkZlNoYTM4NCwga2RmKTtcbiAgICAgICAgc3VwZXIoS2VtSWQuRGhrZW1QMzg0SGtkZlNoYTM4NCwgcHJpbSwga2RmKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IEtlbUlkLkRoa2VtUDM4NEhrZGZTaGEzODRcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlY3JldFNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDQ4XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJlbmNTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA5N1xuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicHVibGljS2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogOTdcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByaXZhdGVLZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA0OFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRGhrZW1QNTIxSGtkZlNoYTUxMk5hdGl2ZSBleHRlbmRzIERoa2VtIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3Qga2RmID0gbmV3IEhrZGZTaGE1MTJOYXRpdmUoKTtcbiAgICAgICAgY29uc3QgcHJpbSA9IG5ldyBFYyhLZW1JZC5EaGtlbVA1MjFIa2RmU2hhNTEyLCBrZGYpO1xuICAgICAgICBzdXBlcihLZW1JZC5EaGtlbVA1MjFIa2RmU2hhNTEyLCBwcmltLCBrZGYpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogS2VtSWQuRGhrZW1QNTIxSGtkZlNoYTUxMlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic2VjcmV0U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogNjRcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVuY1NpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDEzM1xuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicHVibGljS2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMTMzXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcml2YXRlS2V5U2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogNjRcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemNative.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js":
/*!*****************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   X25519: () => (/* binding */ X25519)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\nconst ALG_NAME = \"X25519\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X25519 = new Uint8Array([\n    0x30, 0x2e, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6e, 0x04, 0x22, 0x04, 0x20,\n]);\nclass X25519 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 32;\n        this._nSk = 32;\n        this._nDh = 32;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X25519;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return (0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.base64UrlToBytes)(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.LABEL_SK, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js":
/*!***************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   X448: () => (/* binding */ X448)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\nconst ALG_NAME = \"X448\";\n// deno-fmt-ignore\nconst PKCS8_ALG_ID_X448 = new Uint8Array([\n    0x30, 0x46, 0x02, 0x01, 0x00, 0x30, 0x05, 0x06,\n    0x03, 0x2b, 0x65, 0x6f, 0x04, 0x3a, 0x04, 0x38,\n]);\nclass X448 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NativeAlgorithm {\n    constructor(hkdf) {\n        super();\n        Object.defineProperty(this, \"_hkdf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_alg\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nPk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nSk\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_nDh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pkcs8AlgId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._alg = { name: ALG_NAME };\n        this._hkdf = hkdf;\n        this._nPk = 56;\n        this._nSk = 56;\n        this._nDh = 56;\n        this._pkcs8AlgId = PKCS8_ALG_ID_X448;\n    }\n    async serializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._api.exportKey(\"raw\", key);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async deserializePublicKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, true);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async serializePrivateKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            if (!(\"d\" in jwk)) {\n                throw new Error(\"Not private key\");\n            }\n            return (0,_hpke_common__WEBPACK_IMPORTED_MODULE_0__.base64UrlToBytes)(jwk[\"d\"]).buffer;\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async deserializePrivateKey(key) {\n        await this._setup();\n        try {\n            return await this._importRawKey(key, false);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async importKey(format, key, isPublic) {\n        await this._setup();\n        try {\n            if (format === \"raw\") {\n                return await this._importRawKey(key, isPublic);\n            }\n            // jwk\n            if (key instanceof ArrayBuffer) {\n                throw new Error(\"Invalid jwk key format\");\n            }\n            return await this._importJWK(key, isPublic);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async generateKeyPair() {\n        await this._setup();\n        try {\n            return await this._api.generateKey(ALG_NAME, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError(e);\n        }\n    }\n    async deriveKeyPair(ikm) {\n        await this._setup();\n        try {\n            const dkpPrk = await this._hkdf.labeledExtract(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.LABEL_DKP_PRK, new Uint8Array(ikm));\n            const rawSk = await this._hkdf.labeledExpand(dkpPrk, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.LABEL_SK, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY, this._nSk);\n            const rawSkBytes = new Uint8Array(rawSk);\n            const sk = await this._deserializePkcs8Key(rawSkBytes);\n            rawSkBytes.fill(0);\n            return {\n                privateKey: sk,\n                publicKey: await this.derivePublicKey(sk),\n            };\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeriveKeyPairError(e);\n        }\n    }\n    async derivePublicKey(key) {\n        await this._setup();\n        try {\n            const jwk = await this._api.exportKey(\"jwk\", key);\n            delete jwk[\"d\"];\n            delete jwk[\"key_ops\"];\n            return await this._api.importKey(\"jwk\", jwk, this._alg, true, []);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.DeserializeError(e);\n        }\n    }\n    async dh(sk, pk) {\n        await this._setup();\n        try {\n            const bits = await this._api.deriveBits({\n                name: ALG_NAME,\n                public: pk,\n            }, sk, this._nDh * 8);\n            return bits;\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SerializeError(e);\n        }\n    }\n    async _importRawKey(key, isPublic) {\n        if (isPublic && key.byteLength !== this._nPk) {\n            throw new Error(\"Invalid public key for the ciphersuite\");\n        }\n        if (!isPublic && key.byteLength !== this._nSk) {\n            throw new Error(\"Invalid private key for the ciphersuite\");\n        }\n        if (isPublic) {\n            return await this._api.importKey(\"raw\", key, this._alg, true, []);\n        }\n        return await this._deserializePkcs8Key(new Uint8Array(key));\n    }\n    async _importJWK(key, isPublic) {\n        if (typeof key.kty === \"undefined\" || key.kty !== \"OKP\") {\n            throw new Error(`Invalid kty: ${key.crv}`);\n        }\n        if (typeof key.crv === \"undefined\" || key.crv !== ALG_NAME) {\n            throw new Error(`Invalid crv: ${key.crv}`);\n        }\n        if (isPublic) {\n            if (typeof key.d !== \"undefined\") {\n                throw new Error(\"Invalid key: `d` should not be set\");\n            }\n            return await this._api.importKey(\"jwk\", key, this._alg, true, []);\n        }\n        if (typeof key.d === \"undefined\") {\n            throw new Error(\"Invalid key: `d` not found\");\n        }\n        return await this._api.importKey(\"jwk\", key, this._alg, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n    }\n    async _deserializePkcs8Key(k) {\n        const pkcs8Key = new Uint8Array(this._pkcs8AlgId.length + k.length);\n        pkcs8Key.set(this._pkcs8AlgId, 0);\n        pkcs8Key.set(k, this._pkcs8AlgId.length);\n        return await this._api.importKey(\"pkcs8\", pkcs8Key, this._alg, true, _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KEM_USAGES);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX25519.js":
/*!******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX25519.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DhkemX25519HkdfSha256: () => (/* binding */ DhkemX25519HkdfSha256)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _dhkemPrimitives_x25519_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dhkemPrimitives/x25519.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x25519.js\");\n\n\n/**\n * The DHKEM(X25519, HKDF-SHA256) for HPKE KEM implementing {@link KemInterface}.\n *\n * The instance of this class can be specified to the\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteParams | CipherSuiteParams} as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   HkdfSha256,\n *   DhkemX25519HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass DhkemX25519HkdfSha256 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Dhkem {\n    constructor() {\n        const kdf = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha256Native();\n        super(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemX25519HkdfSha256, new _dhkemPrimitives_x25519_js__WEBPACK_IMPORTED_MODULE_1__.X25519(kdf), kdf);\n        /** KemId.DhkemX25519HkdfSha256 (0x0020) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemX25519HkdfSha256\n        });\n        /** 32 */\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n        /** 32 */\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 32\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMva2Vtcy9kaGtlbVgyNTUxOS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEQ7QUFDVDtBQUNyRDtBQUNBLDZEQUE2RCxtQkFBbUI7QUFDaEY7QUFDQTtBQUNBLElBQUksNkVBQTZFO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTyxvQ0FBb0MsK0NBQUs7QUFDaEQ7QUFDQSx3QkFBd0IsMERBQWdCO0FBQ3hDLGNBQWMsK0NBQUssNEJBQTRCLDhEQUFNO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0NBQUs7QUFDeEIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvcmUvZXNtL3NyYy9rZW1zL2Roa2VtWDI1NTE5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERoa2VtLCBIa2RmU2hhMjU2TmF0aXZlLCBLZW1JZCB9IGZyb20gXCJAaHBrZS9jb21tb25cIjtcbmltcG9ydCB7IFgyNTUxOSB9IGZyb20gXCIuL2Roa2VtUHJpbWl0aXZlcy94MjU1MTkuanNcIjtcbi8qKlxuICogVGhlIERIS0VNKFgyNTUxOSwgSEtERi1TSEEyNTYpIGZvciBIUEtFIEtFTSBpbXBsZW1lbnRpbmcge0BsaW5rIEtlbUludGVyZmFjZX0uXG4gKlxuICogVGhlIGluc3RhbmNlIG9mIHRoaXMgY2xhc3MgY2FuIGJlIHNwZWNpZmllZCB0byB0aGVcbiAqIHtAbGluayBodHRwczovL2pzci5pby9AaHBrZS9jb3JlL2RvYy9+L0NpcGhlclN1aXRlUGFyYW1zIHwgQ2lwaGVyU3VpdGVQYXJhbXN9IGFzIGZvbGxvd3M6XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHtcbiAqICAgQWVzMTI4R2NtLFxuICogICBDaXBoZXJTdWl0ZSxcbiAqICAgSGtkZlNoYTI1NixcbiAqICAgRGhrZW1YMjU1MTlIa2RmU2hhMjU2LFxuICogfSBmcm9tIFwiQGhwa2UvY29yZVwiO1xuICpcbiAqIGNvbnN0IHN1aXRlID0gbmV3IENpcGhlclN1aXRlKHtcbiAqICAga2VtOiBuZXcgRGhrZW1YMjU1MTlIa2RmU2hhMjU2KCksXG4gKiAgIGtkZjogbmV3IEhrZGZTaGEyNTYoKSxcbiAqICAgYWVhZDogbmV3IEFlczEyOEdjbSgpLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIERoa2VtWDI1NTE5SGtkZlNoYTI1NiBleHRlbmRzIERoa2VtIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3Qga2RmID0gbmV3IEhrZGZTaGEyNTZOYXRpdmUoKTtcbiAgICAgICAgc3VwZXIoS2VtSWQuRGhrZW1YMjU1MTlIa2RmU2hhMjU2LCBuZXcgWDI1NTE5KGtkZiksIGtkZik7XG4gICAgICAgIC8qKiBLZW1JZC5EaGtlbVgyNTUxOUhrZGZTaGEyNTYgKDB4MDAyMCkgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IEtlbUlkLkRoa2VtWDI1NTE5SGtkZlNoYTI1NlxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIDMyICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlY3JldFNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDMyXG4gICAgICAgIH0pO1xuICAgICAgICAvKiogMzIgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZW5jU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogMzJcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiAzMiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwdWJsaWNLZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAzMlxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIDMyICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByaXZhdGVLZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAzMlxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX25519.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX448.js":
/*!****************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX448.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DhkemX448HkdfSha512: () => (/* binding */ DhkemX448HkdfSha512)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _dhkemPrimitives_x448_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dhkemPrimitives/x448.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemPrimitives/x448.js\");\n\n\n/**\n * The DHKEM(X448, HKDF-SHA512) for HPKE KEM implementing {@link KemInterface}.\n *\n * The instance of this class can be specified to the\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteParams | CipherSuiteParams} as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   HkdfSha512,\n *   DhkemX448HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemX448HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nclass DhkemX448HkdfSha512 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.Dhkem {\n    constructor() {\n        const kdf = new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha512Native();\n        super(_hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemX448HkdfSha512, new _dhkemPrimitives_x448_js__WEBPACK_IMPORTED_MODULE_1__.X448(kdf), kdf);\n        /** KemId.DhkemX448HkdfSha512 (0x0021) */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _hpke_common__WEBPACK_IMPORTED_MODULE_0__.KemId.DhkemX448HkdfSha512\n        });\n        /** 64 */\n        Object.defineProperty(this, \"secretSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        /** 56 */\n        Object.defineProperty(this, \"encSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n        /** 56 */\n        Object.defineProperty(this, \"publicKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n        /** 56 */\n        Object.defineProperty(this, \"privateKeySize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 56\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMva2Vtcy9kaGtlbVg0NDguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThEO0FBQ2I7QUFDakQ7QUFDQSwyREFBMkQsbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQSxJQUFJLDZFQUE2RTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ08sa0NBQWtDLCtDQUFLO0FBQzlDO0FBQ0Esd0JBQXdCLDBEQUFnQjtBQUN4QyxjQUFjLCtDQUFLLDBCQUEwQiwwREFBSTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtDQUFLO0FBQ3hCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9wcm9qZWN0cy9teWNlbGl1bS1zZGsvcGFja2FnZXMvc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMva2Vtcy9kaGtlbVg0NDguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGhrZW0sIEhrZGZTaGE1MTJOYXRpdmUsIEtlbUlkIH0gZnJvbSBcIkBocGtlL2NvbW1vblwiO1xuaW1wb3J0IHsgWDQ0OCB9IGZyb20gXCIuL2Roa2VtUHJpbWl0aXZlcy94NDQ4LmpzXCI7XG4vKipcbiAqIFRoZSBESEtFTShYNDQ4LCBIS0RGLVNIQTUxMikgZm9yIEhQS0UgS0VNIGltcGxlbWVudGluZyB7QGxpbmsgS2VtSW50ZXJmYWNlfS5cbiAqXG4gKiBUaGUgaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcyBjYW4gYmUgc3BlY2lmaWVkIHRvIHRoZVxuICoge0BsaW5rIGh0dHBzOi8vanNyLmlvL0BocGtlL2NvcmUvZG9jL34vQ2lwaGVyU3VpdGVQYXJhbXMgfCBDaXBoZXJTdWl0ZVBhcmFtc30gYXMgZm9sbG93czpcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYHRzXG4gKiBpbXBvcnQge1xuICogICBBZXMyNTZHY20sXG4gKiAgIENpcGhlclN1aXRlLFxuICogICBIa2RmU2hhNTEyLFxuICogICBEaGtlbVg0NDhIa2RmU2hhNTEyLFxuICogfSBmcm9tIFwiQGhwa2UvY29yZVwiO1xuICpcbiAqIGNvbnN0IHN1aXRlID0gbmV3IENpcGhlclN1aXRlKHtcbiAqICAga2VtOiBuZXcgRGhrZW1YNDQ4SGtkZlNoYTUxMigpLFxuICogICBrZGY6IG5ldyBIa2RmU2hhNTEyKCksXG4gKiAgIGFlYWQ6IG5ldyBBZXMyNTZHY20oKSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBEaGtlbVg0NDhIa2RmU2hhNTEyIGV4dGVuZHMgRGhrZW0ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zdCBrZGYgPSBuZXcgSGtkZlNoYTUxMk5hdGl2ZSgpO1xuICAgICAgICBzdXBlcihLZW1JZC5EaGtlbVg0NDhIa2RmU2hhNTEyLCBuZXcgWDQ0OChrZGYpLCBrZGYpO1xuICAgICAgICAvKiogS2VtSWQuRGhrZW1YNDQ4SGtkZlNoYTUxMiAoMHgwMDIxKSAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogS2VtSWQuRGhrZW1YNDQ4SGtkZlNoYTUxMlxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIDY0ICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlY3JldFNpemVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDY0XG4gICAgICAgIH0pO1xuICAgICAgICAvKiogNTYgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZW5jU2l6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogNTZcbiAgICAgICAgfSk7XG4gICAgICAgIC8qKiA1NiAqL1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwdWJsaWNLZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA1NlxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIDU2ICovXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByaXZhdGVLZXlTaXplXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA1NlxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemX448.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/native.js":
/*!********************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/native.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CipherSuite: () => (/* binding */ CipherSuite),\n/* harmony export */   DhkemP256HkdfSha256: () => (/* binding */ DhkemP256HkdfSha256),\n/* harmony export */   DhkemP384HkdfSha384: () => (/* binding */ DhkemP384HkdfSha384),\n/* harmony export */   DhkemP521HkdfSha512: () => (/* binding */ DhkemP521HkdfSha512),\n/* harmony export */   HkdfSha256: () => (/* binding */ HkdfSha256),\n/* harmony export */   HkdfSha384: () => (/* binding */ HkdfSha384),\n/* harmony export */   HkdfSha512: () => (/* binding */ HkdfSha512)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _cipherSuiteNative_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cipherSuiteNative.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/cipherSuiteNative.js\");\n/* harmony import */ var _kems_dhkemNative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kems/dhkemNative.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/kems/dhkemNative.js\");\n\n\n\n/**\n * The Hybrid Public Key Encryption (HPKE) ciphersuite,\n * which is implemented using only\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n *\n * This class is the same as\n * {@link https://jsr.io/@hpke/core/doc/~/CipherSuiteNative | @hpke/core#CipherSuiteNative} as follows:\n * which supports only the ciphersuites that can be implemented on the native\n * {@link https://www.w3.org/TR/WebCryptoAPI/ | Web Cryptography API}.\n * Therefore, the following cryptographic algorithms are not supported for now:\n * - `DHKEM(X25519, HKDF-SHA256)`\n * - `DHKEM(X448, HKDF-SHA512)`\n * - `ChaCha20Poly1305`\n *\n * In addtion, the HKDF functions contained in this `CipherSuiteNative`\n * class can only derive keys of the same length as the `hashSize`.\n *\n * If you want to use the unsupported cryptographic algorithms\n * above or derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * This class provides following functions:\n *\n * - Creates encryption contexts both for senders and recipients.\n *     - {@link createSenderContext}\n *     - {@link createRecipientContext}\n * - Provides single-shot encryption API.\n *     - {@link seal}\n *     - {@link open}\n *\n * The calling of the constructor of this class is the starting\n * point for HPKE operations for both senders and recipients.\n *\n * @example Use only ciphersuites supported by Web Cryptography API.\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n *   CipherSuite,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n *\n * @example Use a ciphersuite which is currently not supported by Web Cryptography API.\n *\n * ```ts\n * import { Aes128Gcm, HkdfSha256, CipherSuite } from \"@hpke/core\";\n * import { DhkemX25519HkdfSha256 } from \"@hpke/dhkem-x25519\";\n * const suite = new CipherSuite({\n *   kem: new DhkemX25519HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass CipherSuite extends _cipherSuiteNative_js__WEBPACK_IMPORTED_MODULE_1__.CipherSuiteNative {\n}\n/**\n * The DHKEM(P-256, HKDF-SHA256) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP256HkdfSha256`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass DhkemP256HkdfSha256 extends _kems_dhkemNative_js__WEBPACK_IMPORTED_MODULE_2__.DhkemP256HkdfSha256Native {\n}\n/**\n * The DHKEM(P-384, HKDF-SHA384) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP384HkdfSha384`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass DhkemP384HkdfSha384 extends _kems_dhkemNative_js__WEBPACK_IMPORTED_MODULE_2__.DhkemP384HkdfSha384Native {\n}\n/**\n * The DHKEM(P-521, HKDF-SHA512) for HPKE KEM implementing {@link KemInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KemId.DhkemP521HkdfSha512`\n * as follows:\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nclass DhkemP521HkdfSha512 extends _kems_dhkemNative_js__WEBPACK_IMPORTED_MODULE_2__.DhkemP521HkdfSha512Native {\n}\n/**\n * The HKDF-SHA256 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha256`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP256HkdfSha256,\n *   HkdfSha256,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP256HkdfSha256(),\n *   kdf: new HkdfSha256(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass HkdfSha256 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha256Native {\n}\n/**\n * The HKDF-SHA384 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha384`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes128Gcm,\n *   CipherSuite,\n *   DhkemP384HkdfSha384,\n *   HkdfSha384,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP384HkdfSha384(),\n *   kdf: new HkdfSha384(),\n *   aead: new Aes128Gcm(),\n * });\n * ```\n */\nclass HkdfSha384 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha384Native {\n}\n/**\n * The HKDF-SHA512 for HPKE KDF implementing {@link KdfInterface}.\n *\n * When using `@hpke/core`, the instance of this class must be specified\n * to the `kem` parameter of {@link CipherSuiteParams} instead of `KdfId.HkdfSha512`.\n *\n * The KDF class can only derive keys of the same length as the `hashSize`.\n * If you want to derive keys longer than the `hashSize`,\n * please use {@link https://jsr.io/@hpke/hpke-js/doc/~/CipherSuite | hpke-js#CipherSuite}.\n *\n * @example\n *\n * ```ts\n * import {\n *   Aes256Gcm,\n *   CipherSuite,\n *   DhkemP521HkdfSha512,\n *   HkdfSha512,\n * } from \"@hpke/core\";\n *\n * const suite = new CipherSuite({\n *   kem: new DhkemP521HkdfSha512(),\n *   kdf: new HkdfSha512(),\n *   aead: new Aes256Gcm(),\n * });\n * ```\n */\nclass HkdfSha512 extends _hpke_common__WEBPACK_IMPORTED_MODULE_0__.HkdfSha512Native {\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/native.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/recipientContext.js":
/*!******************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/recipientContext.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RecipientContextImpl: () => (/* binding */ RecipientContextImpl)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _encryptionContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encryptionContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/encryptionContext.js\");\n\n\nclass RecipientContextImpl extends _encryptionContext_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionContextImpl {\n    async open(data, aad = _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer) {\n        let pt;\n        try {\n            pt = await this._ctx.key.open(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.OpenError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return pt;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvcmVjaXBpZW50Q29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDZTtBQUN4RCxtQ0FBbUMsd0VBQXFCO0FBQy9ELDJCQUEyQiwrQ0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29yZS9lc20vc3JjL3JlY2lwaWVudENvbnRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU1QVFksIE9wZW5FcnJvciB9IGZyb20gXCJAaHBrZS9jb21tb25cIjtcbmltcG9ydCB7IEVuY3J5cHRpb25Db250ZXh0SW1wbCB9IGZyb20gXCIuL2VuY3J5cHRpb25Db250ZXh0LmpzXCI7XG5leHBvcnQgY2xhc3MgUmVjaXBpZW50Q29udGV4dEltcGwgZXh0ZW5kcyBFbmNyeXB0aW9uQ29udGV4dEltcGwge1xuICAgIGFzeW5jIG9wZW4oZGF0YSwgYWFkID0gRU1QVFkuYnVmZmVyKSB7XG4gICAgICAgIGxldCBwdDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHB0ID0gYXdhaXQgdGhpcy5fY3R4LmtleS5vcGVuKHRoaXMuY29tcHV0ZU5vbmNlKHRoaXMuX2N0eCksIGRhdGEsIGFhZCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBPcGVuRXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbmNyZW1lbnRTZXEodGhpcy5fY3R4KTtcbiAgICAgICAgcmV0dXJuIHB0O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/recipientContext.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/senderContext.js":
/*!***************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/senderContext.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SenderContextImpl: () => (/* binding */ SenderContextImpl)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n/* harmony import */ var _encryptionContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encryptionContext.js */ \"(rsc)/../sdk/node_modules/@hpke/core/esm/src/encryptionContext.js\");\n\n\nclass SenderContextImpl extends _encryptionContext_js__WEBPACK_IMPORTED_MODULE_1__.EncryptionContextImpl {\n    constructor(api, kdf, params, enc) {\n        super(api, kdf, params);\n        Object.defineProperty(this, \"enc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.enc = enc;\n    }\n    async seal(data, aad = _hpke_common__WEBPACK_IMPORTED_MODULE_0__.EMPTY.buffer) {\n        let ct;\n        try {\n            ct = await this._ctx.key.seal(this.computeNonce(this._ctx), data, aad);\n        }\n        catch (e) {\n            throw new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.SealError(e);\n        }\n        this.incrementSeq(this._ctx);\n        return ct;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvc2VuZGVyQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Q7QUFDZTtBQUN4RCxnQ0FBZ0Msd0VBQXFCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkIsK0NBQUs7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL3Byb2plY3RzL215Y2VsaXVtLXNkay9wYWNrYWdlcy9zZGsvbm9kZV9tb2R1bGVzL0BocGtlL2NvcmUvZXNtL3NyYy9zZW5kZXJDb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVNUFRZLCBTZWFsRXJyb3IgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5pbXBvcnQgeyBFbmNyeXB0aW9uQ29udGV4dEltcGwgfSBmcm9tIFwiLi9lbmNyeXB0aW9uQ29udGV4dC5qc1wiO1xuZXhwb3J0IGNsYXNzIFNlbmRlckNvbnRleHRJbXBsIGV4dGVuZHMgRW5jcnlwdGlvbkNvbnRleHRJbXBsIHtcbiAgICBjb25zdHJ1Y3RvcihhcGksIGtkZiwgcGFyYW1zLCBlbmMpIHtcbiAgICAgICAgc3VwZXIoYXBpLCBrZGYsIHBhcmFtcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVuY1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVuYyA9IGVuYztcbiAgICB9XG4gICAgYXN5bmMgc2VhbChkYXRhLCBhYWQgPSBFTVBUWS5idWZmZXIpIHtcbiAgICAgICAgbGV0IGN0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY3QgPSBhd2FpdCB0aGlzLl9jdHgua2V5LnNlYWwodGhpcy5jb21wdXRlTm9uY2UodGhpcy5fY3R4KSwgZGF0YSwgYWFkKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFNlYWxFcnJvcihlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmluY3JlbWVudFNlcSh0aGlzLl9jdHgpO1xuICAgICAgICByZXR1cm4gY3Q7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/senderContext.js\n");

/***/ }),

/***/ "(rsc)/../sdk/node_modules/@hpke/core/esm/src/utils/emitNotSupported.js":
/*!************************************************************************!*\
  !*** ../sdk/node_modules/@hpke/core/esm/src/utils/emitNotSupported.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   emitNotSupported: () => (/* binding */ emitNotSupported)\n/* harmony export */ });\n/* harmony import */ var _hpke_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hpke/common */ \"(rsc)/../sdk/node_modules/@hpke/common/esm/mod.js\");\n\nfunction emitNotSupported() {\n    return new Promise((_resolve, reject) => {\n        reject(new _hpke_common__WEBPACK_IMPORTED_MODULE_0__.NotSupportedError(\"Not supported\"));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vc2RrL25vZGVfbW9kdWxlcy9AaHBrZS9jb3JlL2VzbS9zcmMvdXRpbHMvZW1pdE5vdFN1cHBvcnRlZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQztBQUNQO0FBQ0EsbUJBQW1CLDJEQUFpQjtBQUNwQyxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG1pbi9Eb2N1bWVudHMvcHJvamVjdHMvbXljZWxpdW0tc2RrL3BhY2thZ2VzL3Nkay9ub2RlX21vZHVsZXMvQGhwa2UvY29yZS9lc20vc3JjL3V0aWxzL2VtaXROb3RTdXBwb3J0ZWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTm90U3VwcG9ydGVkRXJyb3IgfSBmcm9tIFwiQGhwa2UvY29tbW9uXCI7XG5leHBvcnQgZnVuY3Rpb24gZW1pdE5vdFN1cHBvcnRlZCgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKF9yZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgcmVqZWN0KG5ldyBOb3RTdXBwb3J0ZWRFcnJvcihcIk5vdCBzdXBwb3J0ZWRcIikpO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../sdk/node_modules/@hpke/core/esm/src/utils/emitNotSupported.js\n");

/***/ })

};
;